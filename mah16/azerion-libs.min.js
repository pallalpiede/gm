var enableAnalytics,
    PhaserCachebuster,
    PhaserSpine,
    PhaserSuperStorage,
    PhaserNineSlice,
    _azerionIntegration = { gdId: "aa91ae5101f342fba9fc4a4fb7ce9a2e", alxType: "std", advType: "gd", af: !1, sa: !1, la: !1, bd: 8, playBtn: !0, build: { version: "tc-7", timeStamp: 1696948319275, h: "b3f492c6" } },
    libs = [],
    __extends =
        ((() => {
            var i = {
                    34: (t) => {
                        "use strict";
                        var i = Object.prototype.hasOwnProperty,
                            p = "~";
                        function n() {}
                        function o(t, e, n) {
                            (this.fn = t), (this.context = e), (this.once = n || !1);
                        }
                        function r(t, e, n, i, r) {
                            if ("function" != typeof n) throw new TypeError("The listener must be a function");
                            (n = new o(n, i || t, r)), (i = p ? p + e : e);
                            return t._events[i] ? (t._events[i].fn ? (t._events[i] = [t._events[i], n]) : t._events[i].push(n)) : ((t._events[i] = n), t._eventsCount++), t;
                        }
                        function h(t, e) {
                            0 == --t._eventsCount ? (t._events = new n()) : delete t._events[e];
                        }
                        function e() {
                            (this._events = new n()), (this._eventsCount = 0);
                        }
                        Object.create && ((n.prototype = Object.create(null)), new n().__proto__ || (p = !1)),
                            (e.prototype.eventNames = function () {
                                var t,
                                    e,
                                    n = [];
                                if (0 === this._eventsCount) return n;
                                for (e in (t = this._events)) i.call(t, e) && n.push(p ? e.slice(1) : e);
                                return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(t)) : n;
                            }),
                            (e.prototype.listeners = function (t) {
                                var t = p ? p + t : t,
                                    e = this._events[t];
                                if (!e) return [];
                                if (e.fn) return [e.fn];
                                for (var n = 0, i = e.length, r = new Array(i); n < i; n++) r[n] = e[n].fn;
                                return r;
                            }),
                            (e.prototype.listenerCount = function (t) {
                                (t = p ? p + t : t), (t = this._events[t]);
                                return t ? (t.fn ? 1 : t.length) : 0;
                            }),
                            (e.prototype.emit = function (t, e, n, i, r, o) {
                                var a = p ? p + t : t;
                                if (!this._events[a]) return !1;
                                var s,
                                    h = this._events[a],
                                    l = arguments.length;
                                if (h.fn) {
                                    switch ((h.once && this.removeListener(t, h.fn, void 0, !0), l)) {
                                        case 1:
                                            return h.fn.call(h.context), !0;
                                        case 2:
                                            return h.fn.call(h.context, e), !0;
                                        case 3:
                                            return h.fn.call(h.context, e, n), !0;
                                        case 4:
                                            return h.fn.call(h.context, e, n, i), !0;
                                        case 5:
                                            return h.fn.call(h.context, e, n, i, r), !0;
                                        case 6:
                                            return h.fn.call(h.context, e, n, i, r, o), !0;
                                    }
                                    for (d = 1, s = new Array(l - 1); d < l; d++) s[d - 1] = arguments[d];
                                    h.fn.apply(h.context, s);
                                } else
                                    for (var u, c = h.length, d = 0; d < c; d++)
                                        switch ((h[d].once && this.removeListener(t, h[d].fn, void 0, !0), l)) {
                                            case 1:
                                                h[d].fn.call(h[d].context);
                                                break;
                                            case 2:
                                                h[d].fn.call(h[d].context, e);
                                                break;
                                            case 3:
                                                h[d].fn.call(h[d].context, e, n);
                                                break;
                                            case 4:
                                                h[d].fn.call(h[d].context, e, n, i);
                                                break;
                                            default:
                                                if (!s) for (u = 1, s = new Array(l - 1); u < l; u++) s[u - 1] = arguments[u];
                                                h[d].fn.apply(h[d].context, s);
                                        }
                                return !0;
                            }),
                            (e.prototype.on = function (t, e, n) {
                                return r(this, t, e, n, !1);
                            }),
                            (e.prototype.once = function (t, e, n) {
                                return r(this, t, e, n, !0);
                            }),
                            (e.prototype.removeListener = function (t, e, n, i) {
                                t = p ? p + t : t;
                                if (this._events[t])
                                    if (e) {
                                        var r = this._events[t];
                                        if (r.fn) r.fn !== e || (i && !r.once) || (n && r.context !== n) || h(this, t);
                                        else {
                                            for (var o = 0, a = [], s = r.length; o < s; o++) (r[o].fn !== e || (i && !r[o].once) || (n && r[o].context !== n)) && a.push(r[o]);
                                            a.length ? (this._events[t] = 1 === a.length ? a[0] : a) : h(this, t);
                                        }
                                    } else h(this, t);
                                return this;
                            }),
                            (e.prototype.removeAllListeners = function (t) {
                                return t ? ((t = p ? p + t : t), this._events[t] && h(this, t)) : ((this._events = new n()), (this._eventsCount = 0)), this;
                            }),
                            (e.prototype.off = e.prototype.removeListener),
                            (e.prototype.addListener = e.prototype.on),
                            (e.prefixed = p),
                            (t.exports = e.EventEmitter = e);
                    },
                    729: (t, e, n) => {
                        (n = [n, e, n(548), n(498)]),
                            (e = function (t, e, n, i) {
                                "use strict";
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.AdType = e.AdEvents = e.ProviderTypes = e.GameDistributionBannerSize = e.GameDistributionAlignment = e.AdWrapper = void 0),
                                    Object.defineProperty(e, "AdWrapper", {
                                        enumerable: !0,
                                        get: function () {
                                            return n.AdWrapper;
                                        },
                                    }),
                                    Object.defineProperty(e, "GameDistributionAlignment", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.GameDistributionAlignment;
                                        },
                                    }),
                                    Object.defineProperty(e, "GameDistributionBannerSize", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.GameDistributionBannerSize;
                                        },
                                    }),
                                    Object.defineProperty(e, "ProviderTypes", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.ProviderTypes;
                                        },
                                    }),
                                    Object.defineProperty(e, "AdEvents", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.AdEvents;
                                        },
                                    }),
                                    Object.defineProperty(e, "AdType", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.AdType;
                                        },
                                    });
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    470: (t, e, n) => {
                        (n = [n, e, n(12)]),
                            (e = function (t, e, n) {
                                "use strict";
                                function i() {
                                    this.adsEnabled = !1;
                                }
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.JioAdProvider = void 0),
                                    (i.prototype.setManager = function (t) {
                                        (this.adManager = t), (this.jioGamesSP = null == (t = window._azerionJGSDK) ? void 0 : t.JioGamesSP);
                                    }),
                                    (i.prototype.showAd = function (t) {
                                        t === n.AdType.interstitial ? this.jioGamesSP.showAdMidRoll() : t === n.AdType.rewarded && this.jioGamesSP.showAdRewarded(), this.resumeGameplay();
                                    }),
                                    (i.prototype.resumeGameplay = function () {
                                        this.adManager.emit(n.AdEvents.CONTENT_RESUMED);
                                    }),
                                    (i.prototype.preloadAd = function (t) {
                                        (t = void 0 === t ? n.AdType.interstitial : t) === n.AdType.interstitial && this.jioGamesSP.cacheAdMidRoll(), t === n.AdType.rewarded && this.jioGamesSP.cacheAdRewarded();
                                    }),
                                    (i.prototype.destroyAd = function () {}),
                                    (i.prototype.hideAd = function () {}),
                                    (i.prototype.adAvailable = function (t) {
                                        return t === n.AdType.interstitial ? this.jioGamesSP.isMidrollAdAvailable() : t === n.AdType.rewarded && this.jioGamesSP.isRewardedAdAvailable();
                                    }),
                                    (e.JioAdProvider = i);
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    766: (t, e, n) => {
                        (n = [n, e, n(470)]),
                            (e = function (t, e, n) {
                                "use strict";
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.JioAdProvider = void 0),
                                    Object.defineProperty(e, "JioAdProvider", {
                                        enumerable: !0,
                                        get: function () {
                                            return n.JioAdProvider;
                                        },
                                    });
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    110: (t, e, n) => {
                        (n = [n, e, n(12)]),
                            (e = function (t, e, n) {
                                "use strict";
                                function i() {
                                    this.adsEnabled = !1;
                                }
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.AdFreeUntrackedProvider = void 0),
                                    (i.prototype.setManager = function (t) {
                                        this.adManager = t;
                                    }),
                                    (i.prototype.showAd = function (t) {
                                        void 0 === t && (t = n.AdType.interstitial), this.resumeGameplay();
                                    }),
                                    (i.prototype.resumeGameplay = function () {
                                        this.adManager.emit(n.AdEvents.CONTENT_RESUMED);
                                    }),
                                    (i.prototype.preloadAd = function (t) {
                                        void 0 === t && (t = n.AdType.interstitial);
                                    }),
                                    (i.prototype.destroyAd = function () {}),
                                    (i.prototype.hideAd = function () {}),
                                    (i.prototype.adAvailable = function (t) {
                                        return !0;
                                    }),
                                    (e.AdFreeUntrackedProvider = i);
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    592: (t, e, n) => {
                        (n = [n, e, n(260)]),
                            (e = function (t, e, i) {
                                "use strict";
                                function n(t) {
                                    var e = this;
                                    (this.scaleFactor = 1),
                                        (this.offsetX = 0),
                                        (this.offsetY = 0),
                                        (this.dummyBannerConfigList = [
                                            { sizeType: i.DummyBannerSize.LargeRectangle, width: 336, height: 280 },
                                            { sizeType: i.DummyBannerSize.MediumRectangle, width: 300, height: 250 },
                                            { sizeType: i.DummyBannerSize.Billboard, width: 970, height: 250 },
                                            { sizeType: i.DummyBannerSize.Leaderboard, width: 728, height: 90 },
                                            { sizeType: i.DummyBannerSize.Skyscraper, width: 120, height: 600 },
                                            { sizeType: i.DummyBannerSize.WideSkyscraper, width: 160, height: 600 },
                                        ]),
                                        (this.element = document.createElement("div")),
                                        (this.element.style.position = "absolute"),
                                        (this.element.style.top = "0px"),
                                        (this.element.style.left = "0px"),
                                        (this.element.id = "banner-".concat(Date.now()).concat((1e7 * Math.random()) | 0)),
                                        document.body.appendChild(this.element),
                                        this.setSize(t),
                                        (this.resizeListener = function () {
                                            return e.resize();
                                        }),
                                        window.addEventListener("resize", this.resizeListener),
                                        this.loadBanner().catch(function () {});
                                }
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.DummyBanner = void 0),
                                    (n.prototype.getBoundingClientRect = function () {
                                        return { left: 0, top: 0, width: window.innerWidth, height: window.innerHeight };
                                    }),
                                    (n.prototype.loadBanner = function () {
                                        var n = Math.floor(2 * Math.random());
                                        return new Promise(function (t, e) {
                                            1 === n ? e("No Dummy banner available") : t();
                                        });
                                    }),
                                    (n.prototype.destroy = function () {
                                        try {
                                            document.body.removeChild(this.element),
                                                this.resizeListener && (window.removeEventListener("resize", this.resizeListener), (this.resizeListener = null)),
                                                delete this.element,
                                                delete this.parent,
                                                delete this.alignment;
                                        } catch (t) {}
                                    }),
                                    (n.prototype.getUpdatedPosition = function () {
                                        var t = this.getBoundingClientRect(),
                                            e = 0,
                                            n = 0;
                                        switch (this.alignment) {
                                            case i.DummyAlignment.TopLeft:
                                                (e = t.left), (n = t.top);
                                                break;
                                            case i.DummyAlignment.TopCenter:
                                                (e = t.left + t.width / 2 - (this.width * this.scaleFactor) / 2), (n = t.top);
                                                break;
                                            case i.DummyAlignment.TopRight:
                                                (e = t.left + t.width - this.width * this.scaleFactor), (n = t.top);
                                                break;
                                            case i.DummyAlignment.CenterLeft:
                                                (e = t.left), (n = t.top + t.height / 2 - (this.height * this.scaleFactor) / 2);
                                                break;
                                            case i.DummyAlignment.Center:
                                                (e = t.left + t.width / 2 - (this.width * this.scaleFactor) / 2), (n = t.top + t.height / 2 - (this.height * this.scaleFactor) / 2);
                                                break;
                                            case i.DummyAlignment.CenterRight:
                                                (e = t.left + t.width - this.width * this.scaleFactor), (n = t.top + t.height / 2 - (this.height * this.scaleFactor) / 2);
                                                break;
                                            case i.DummyAlignment.BottomLeft:
                                                (e = t.left), (n = t.top + t.height - this.height * this.scaleFactor);
                                                break;
                                            case i.DummyAlignment.BottomCenter:
                                                (e = t.left + t.width / 2 - (this.width * this.scaleFactor) / 2), (n = t.top + t.height - this.height * this.scaleFactor);
                                                break;
                                            case i.DummyAlignment.BottomRight:
                                                (e = t.left + t.width - this.width * this.scaleFactor), (n = t.top + t.height - this.height * this.scaleFactor);
                                        }
                                        return { x: e, y: n };
                                    }),
                                    (n.prototype.alignIn = function (t) {
                                        this.alignment = t;
                                        t = this.getUpdatedPosition();
                                        (this.element.style.left = "".concat(t.x + this.offsetX, "px")), (this.element.style.top = "".concat(t.y + this.offsetY, "px"));
                                    }),
                                    (n.prototype.resize = function () {
                                        this.alignment && this.element && this.alignIn(this.alignment);
                                    }),
                                    (n.prototype.setSize = function (e) {
                                        var t = this.dummyBannerConfigList.filter(function (t) {
                                            return t.sizeType === e;
                                        });
                                        t &&
                                            0 < t.length &&
                                            ((t = t[0]), (this.width = t.width), (this.height = t.height), (this.element.style.width = "".concat(this.width, "px")), (this.element.style.height = "".concat(this.height, "px")));
                                    }),
                                    (e.DummyBanner = n);
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    670: (t, e, n) => {
                        (n = [n, e, n(12), n(592)]),
                            (e = function (t, e, i, n) {
                                "use strict";
                                function r() {
                                    this.adsEnabled = !1;
                                }
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.DummyProvider = void 0),
                                    (r.prototype.setManager = function (t) {
                                        (this.adManager = t), (this.adsEnabled = !0);
                                    }),
                                    (r.prototype.showAd = function (t) {
                                        var e = this,
                                            n = (void 0 === t && (t = i.AdType.interstitial), this.adManager.emit(i.AdEvents.CONTENT_PAUSED), Math.floor(2 * Math.random()));
                                        1 !== n &&
                                            t === i.AdType.rewarded &&
                                            setTimeout(function () {
                                                e.adManager.emit(i.AdEvents.AD_REWARDED);
                                            }, 100),
                                            setTimeout(function () {
                                                e.resumeGameplay();
                                            }, 200);
                                    }),
                                    (r.prototype.resumeGameplay = function () {
                                        this.adManager.emit(i.AdEvents.CONTENT_RESUMED);
                                    }),
                                    (r.prototype.preloadAd = function (t) {
                                        void 0 === t && (t = i.AdType.interstitial);
                                    }),
                                    (r.prototype.destroyAd = function () {}),
                                    (r.prototype.hideAd = function () {}),
                                    (r.prototype.adAvailable = function (t) {
                                        return !0;
                                    }),
                                    (r.prototype.getBanner = function (t) {
                                        return this.adsEnabled ? new n.DummyBanner(t) : null;
                                    }),
                                    (e.DummyProvider = r);
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    474: (t, e, n) => {
                        (n = [n, e, n(12), n(444)]),
                            (e = function (t, e, r, n) {
                                "use strict";
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.GameDistribution = e.GameDistributionAdType = void 0),
                                    ((o = i = e.GameDistributionAdType || (e.GameDistributionAdType = {})).interstitial = "interstitial"),
                                    (o.rewarded = "rewarded"),
                                    (o.display = "display"),
                                    (a.prototype.setManager = function (t) {
                                        (this.adManager = t), this.adManager.emit(r.AdEvents.AD_PROVIDER_LOADED);
                                    }),
                                    (a.prototype.sdkLoaded = function () {
                                        this.adsEnabled = !0;
                                    }),
                                    (a.prototype.showAd = function (t) {
                                        var e = this;
                                        this.adsEnabled
                                            ? void 0 === window.gdsdk || (window.gdsdk && void 0 === window.gdsdk.showAd)
                                                ? ((this.adsEnabled = !1), this.adManager.emit(r.AdEvents.CONTENT_RESUMED))
                                                : window.gdsdk.showAd(t === r.AdType.rewarded ? i.rewarded : i.interstitial).catch(function () {
                                                      t === r.AdType.rewarded && e.hasRewarded && (e.hasRewarded = !1), e.adManager.emit(r.AdEvents.CONTENT_RESUMED);
                                                  })
                                            : this.adManager.emit(r.AdEvents.CONTENT_RESUMED);
                                    }),
                                    (a.prototype.preloadAd = function (t) {
                                        var e = this;
                                        !this.hasRewarded &&
                                            this.adsEnabled &&
                                            t === r.AdType.rewarded &&
                                            window.gdsdk.preloadAd(i.rewarded).then(function () {
                                                (e.hasRewarded = !0), e.adManager.emit(r.AdEvents.AD_LOADED, t);
                                            });
                                    }),
                                    (a.prototype.adAvailable = function (t) {
                                        return t !== r.AdType.rewarded || this.hasRewarded;
                                    }),
                                    (a.prototype.destroyAd = function () {}),
                                    (a.prototype.hideAd = function () {}),
                                    (a.prototype.getBanner = function (t) {
                                        return this.adsEnabled ? ((t = new n.GameDistributionBanner(t)).loadBanner().catch(function () {}), t) : null;
                                    });
                                var i,
                                    o = a;
                                function a(t) {
                                }
                                e.GameDistribution = o;
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    444: (t, e, n) => {
                        (n = [n, e, n(474), n(869)]),
                            (e = function (t, e, n, i) {
                                "use strict";
                                function r(t) {
                                    (this.scaleFactor = 1),
                                        (this.offsetX = 0),
                                        (this.offsetY = 0),
                                        (this.element = document.createElement("div")),
                                        (this.element.style.position = "absolute"),
                                        (this.element.style.top = "0px"),
                                        (this.element.style.left = "0px"),
                                        (this.element.id = "banner-".concat(Date.now()).concat((1e7 * Math.random()) | 0)),
                                        this.setSize(t),
                                        document.body.appendChild(this.element);
                                }
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.GameDistributionBanner = void 0),
                                    (r.prototype.getBoundingClientRect = function () {
                                        return { left: 0, top: 0, width: window.innerWidth, height: window.innerHeight };
                                    }),
                                    (r.prototype.loadBanner = function () {
                                        return void 0 === window.gdsdk ? Promise.reject("GD Sdk not available, probably due to adblocker") : window.gdsdk.showAd(n.GameDistributionAdType.display, { containerId: this.element.id });
                                    }),
                                    (r.prototype.destroy = function () {
                                        document.body.removeChild(this.element), this.resizeListener && window.removeEventListener("resize", this.resizeListener), delete this.element, delete this.parent, delete this.alignment;
                                    }),
                                    (r.prototype.alignIn = function (t) {
                                        var e = this;
                                        this.parent ||
                                            ((this.parent = this.getBoundingClientRect()),
                                            (this.alignment = t),
                                            (this.resizeListener = function () {
                                                return e.resize();
                                            }),
                                            window.addEventListener("resize", this.resizeListener),
                                            this.resize());
                                    }),
                                    (r.prototype.setOffset = function (t, e) {
                                        void 0 === e && (e = 0), (this.offsetX = t = void 0 === t ? 0 : t), (this.offsetY = e), this.resize();
                                    }),
                                    (r.prototype.resize = function () {
                                        if (this.parent) {
                                            var t = this.parent;
                                            switch (this.alignment) {
                                                case i.GameDistributionAlignment.TopLeft:
                                                    this.position(t.left, t.top);
                                                    break;
                                                case i.GameDistributionAlignment.TopCenter:
                                                    this.position(t.left + t.width / 2 - (this.width * this.scaleFactor) / 2, t.top);
                                                    break;
                                                case i.GameDistributionAlignment.TopRight:
                                                    this.position(t.left + t.width - this.width * this.scaleFactor, t.top);
                                                    break;
                                                case i.GameDistributionAlignment.CenterLeft:
                                                    this.position(t.left, t.top + t.height / 2 - (this.height * this.scaleFactor) / 2);
                                                    break;
                                                case i.GameDistributionAlignment.Center:
                                                    this.position(t.left + t.width / 2 - (this.width * this.scaleFactor) / 2, t.top + t.height / 2 - (this.height * this.scaleFactor) / 2);
                                                    break;
                                                case i.GameDistributionAlignment.CenterRight:
                                                    this.position(t.left + t.width - this.width * this.scaleFactor, t.top + t.height / 2 - (this.height * this.scaleFactor) / 2);
                                                    break;
                                                case i.GameDistributionAlignment.BottomLeft:
                                                    this.position(t.left, t.top + t.height - this.height * this.scaleFactor);
                                                    break;
                                                case i.GameDistributionAlignment.BottomCenter:
                                                    this.position(t.left + t.width / 2 - (this.width * this.scaleFactor) / 2, t.top + t.height - this.height * this.scaleFactor);
                                                    break;
                                                case i.GameDistributionAlignment.BottomRight:
                                                    this.position(t.left + t.width - this.width * this.scaleFactor, t.top + t.height - this.height * this.scaleFactor);
                                            }
                                        }
                                    }),
                                    (r.prototype.setSize = function (t) {
                                        var e, n;
                                        switch (t) {
                                            default:
                                            case i.GameDistributionBannerSize.LargeRectangle:
                                                (e = 336), (n = 280);
                                                break;
                                            case i.GameDistributionBannerSize.MediumRectangle:
                                                (e = 300), (n = 250);
                                                break;
                                            case i.GameDistributionBannerSize.Billboard:
                                                (e = 970), (n = 250);
                                                break;
                                            case i.GameDistributionBannerSize.Leaderboard:
                                                (e = 728), (n = 90);
                                                break;
                                            case i.GameDistributionBannerSize.Skyscraper:
                                                (e = 120), (n = 600);
                                                break;
                                            case i.GameDistributionBannerSize.WideSkyscraper:
                                                (e = 160), (n = 600);
                                        }
                                        (this.width = e), (this.height = n), (this.element.style.width = "".concat(e, "px")), (this.element.style.height = "".concat(n, "px"));
                                    }),
                                    (r.prototype.position = function (t, e) {
                                        (this.element.style.left = "".concat(t + this.offsetX, "px")), (this.element.style.top = "".concat(e + this.offsetY, "px"));
                                    }),
                                    (r.prototype.scale = function (t) {
                                        (this.element.style.transformOrigin = "left top"), (this.scaleFactor = t), (this.element.style.transform = "scale(".concat(t, ")"));
                                    }),
                                    (e.GameDistributionBanner = r);
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    654: (t, e, n) => {
                        (n = [n, e, n(12)]),
                            (e = function (t, e, i) {
                                "use strict";
                                function n(t) {
                                    var e,
                                        n,
                                        i,
                                        r = this;
                                    (this.adsEnabled = !1),
                                        (e = document),
                                        (n = "yandex-jssdk"),
                                        (i = e.getElementsByTagName("script")[0]),
                                        e.getElementById(n) ||
                                            ((e = e.createElement("script")).addEventListener("load", function () {
                                                r.initialize();
                                            }),
                                            (e.id = n),
                                            (e.src = "//yandex.ru/games/sdk/v2"),
                                            i.parentNode.insertBefore(e, i));
                                }
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.YandexAdProvider = void 0),
                                    (n.prototype.setManager = function (t) {
                                        this.adManager = t;
                                    }),
                                    (n.prototype.showAd = function (t) {
                                        var e,
                                            n = this;
                                        void 0 === t && (t = i.AdType.interstitial),
                                            this.adsEnabled && window.hasOwnProperty("_YaSDK")
                                                ? (t === i.AdType.interstitial && null != (e = null == (e = window._YaSDK) ? void 0 : e.adv) && e.adOpened) ||
                                                  (t === i.AdType.rewarded
                                                      ? null != (e = null == (t = null == (e = window._YaSDK) ? void 0 : e.adv) ? void 0 : t.showRewardedVideo) &&
                                                        e.call(t, {
                                                            callbacks: {
                                                                onOpen: function () {
                                                                    n.adManager.emit(i.AdEvents.CONTENT_PAUSED);
                                                                },
                                                                onRewarded: function () {
                                                                    n.adManager.emit(i.AdEvents.AD_REWARDED);
                                                                },
                                                                onClose: function () {
                                                                    n.resumeGameplay();
                                                                },
                                                                onError: function (t) {
                                                                    n.resumeGameplay();
                                                                },
                                                            },
                                                        })
                                                      : null != (e = null == (t = null == (e = window._YaSDK) ? void 0 : e.adv) ? void 0 : t.showFullscreenAdv) &&
                                                        e.call(t, {
                                                            callbacks: {
                                                                onOpen: function () {
                                                                    n.adManager.emit(i.AdEvents.CONTENT_PAUSED);
                                                                },
                                                                onClose: function () {
                                                                    n.resumeGameplay();
                                                                },
                                                                onError: function () {
                                                                    n.resumeGameplay();
                                                                },
                                                            },
                                                        }))
                                                : this.resumeGameplay();
                                    }),
                                    (n.prototype.initialize = function () {
                                        var e = this;
                                        window.YaGames.init().then(function (t) {
                                            (window._YaSDK = t), (e.adsEnabled = !0);
                                        });
                                    }),
                                    (n.prototype.resumeGameplay = function () {
                                        this.adManager.emit(i.AdEvents.CONTENT_RESUMED);
                                    }),
                                    (n.prototype.preloadAd = function (t) {
                                        void 0 === t && (t = i.AdType.interstitial), this.adManager.emit(i.AdEvents.AD_LOADED, t);
                                    }),
                                    (n.prototype.destroyAd = function () {}),
                                    (n.prototype.hideAd = function () {}),
                                    (n.prototype.adAvailable = function (t) {
                                        return !0;
                                    }),
                                    (e.YandexAdProvider = n);
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    563: (t, e, n) => {
                        (n = [n, e, n(110), n(670), n(474), n(444), n(654)]),
                            (e = function (t, e, n, i, r, o, a) {
                                "use strict";
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.YandexAdProvider = e.GameDistributionBanner = e.GameDistribution = e.DummyProvider = e.AdFreeUntrackedProvider = void 0),
                                    Object.defineProperty(e, "AdFreeUntrackedProvider", {
                                        enumerable: !0,
                                        get: function () {
                                            return n.AdFreeUntrackedProvider;
                                        },
                                    }),
                                    Object.defineProperty(e, "DummyProvider", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.DummyProvider;
                                        },
                                    }),
                                    Object.defineProperty(e, "GameDistribution", {
                                        enumerable: !0,
                                        get: function () {
                                            return r.GameDistribution;
                                        },
                                    }),
                                    Object.defineProperty(e, "GameDistributionBanner", {
                                        enumerable: !0,
                                        get: function () {
                                            return o.GameDistributionBanner;
                                        },
                                    }),
                                    Object.defineProperty(e, "YandexAdProvider", {
                                        enumerable: !0,
                                        get: function () {
                                            return a.YandexAdProvider;
                                        },
                                    });
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    260: (t, e, n) => {
                        n = function (t, e) {
                            "use strict";
                            var n;
                            Object.defineProperty(e, "__esModule", { value: !0 }),
                                (e.DummyAlignment = e.DummyBannerSize = void 0),
                                ((n = e.DummyBannerSize || (e.DummyBannerSize = {}))[(n.LargeRectangle = 0)] = "LargeRectangle"),
                                (n[(n.MediumRectangle = 1)] = "MediumRectangle"),
                                (n[(n.Billboard = 2)] = "Billboard"),
                                (n[(n.Leaderboard = 3)] = "Leaderboard"),
                                (n[(n.Skyscraper = 4)] = "Skyscraper"),
                                (n[(n.WideSkyscraper = 5)] = "WideSkyscraper"),
                                ((n = e.DummyAlignment || (e.DummyAlignment = {}))[(n.TopLeft = 0)] = "TopLeft"),
                                (n[(n.TopCenter = 1)] = "TopCenter"),
                                (n[(n.TopRight = 2)] = "TopRight"),
                                (n[(n.CenterLeft = 3)] = "CenterLeft"),
                                (n[(n.Center = 4)] = "Center"),
                                (n[(n.CenterRight = 5)] = "CenterRight"),
                                (n[(n.BottomLeft = 6)] = "BottomLeft"),
                                (n[(n.BottomCenter = 7)] = "BottomCenter"),
                                (n[(n.BottomRight = 8)] = "BottomRight");
                        }.apply(e, [n, e]);
                        void 0 !== n && (t.exports = n);
                    },
                    869: (t, e, n) => {
                        n = function (t, e) {
                            "use strict";
                            var n;
                            Object.defineProperty(e, "__esModule", { value: !0 }),
                                (e.GameDistributionAlignment = e.GameDistributionBannerSize = void 0),
                                ((n = e.GameDistributionBannerSize || (e.GameDistributionBannerSize = {}))[(n.LargeRectangle = 0)] = "LargeRectangle"),
                                (n[(n.MediumRectangle = 1)] = "MediumRectangle"),
                                (n[(n.Billboard = 2)] = "Billboard"),
                                (n[(n.Leaderboard = 3)] = "Leaderboard"),
                                (n[(n.Skyscraper = 4)] = "Skyscraper"),
                                (n[(n.WideSkyscraper = 5)] = "WideSkyscraper"),
                                ((n = e.GameDistributionAlignment || (e.GameDistributionAlignment = {}))[(n.TopLeft = 0)] = "TopLeft"),
                                (n[(n.TopCenter = 1)] = "TopCenter"),
                                (n[(n.TopRight = 2)] = "TopRight"),
                                (n[(n.CenterLeft = 3)] = "CenterLeft"),
                                (n[(n.Center = 4)] = "Center"),
                                (n[(n.CenterRight = 5)] = "CenterRight"),
                                (n[(n.BottomLeft = 6)] = "BottomLeft"),
                                (n[(n.BottomCenter = 7)] = "BottomCenter"),
                                (n[(n.BottomRight = 8)] = "BottomRight");
                        }.apply(e, [n, e]);
                        void 0 !== n && (t.exports = n);
                    },
                    498: (t, e, n) => {
                        (n = [n, e, n(12), n(869)]),
                            (e = function (t, e, n, i) {
                                "use strict";
                                Object.defineProperty(e, "__esModule", { value: !0 }),
                                    (e.GameDistributionAlignment = e.GameDistributionBannerSize = e.ProviderTypes = e.AdType = e.AdEvents = void 0),
                                    Object.defineProperty(e, "AdEvents", {
                                        enumerable: !0,
                                        get: function () {
                                            return n.AdEvents;
                                        },
                                    }),
                                    Object.defineProperty(e, "AdType", {
                                        enumerable: !0,
                                        get: function () {
                                            return n.AdType;
                                        },
                                    }),
                                    Object.defineProperty(e, "ProviderTypes", {
                                        enumerable: !0,
                                        get: function () {
                                            return n.ProviderTypes;
                                        },
                                    }),
                                    Object.defineProperty(e, "GameDistributionBannerSize", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.GameDistributionBannerSize;
                                        },
                                    }),
                                    Object.defineProperty(e, "GameDistributionAlignment", {
                                        enumerable: !0,
                                        get: function () {
                                            return i.GameDistributionAlignment;
                                        },
                                    });
                            }.apply(e, n));
                        void 0 !== e && (t.exports = e);
                    },
                    12: (t, e, n) => {
                        n = function (t, e) {
                            "use strict";
                            var n;
                            Object.defineProperty(e, "__esModule", { value: !0 }),
                                (e.ProviderTypes = e.AdType = e.AdEvents = void 0),
                                ((n = e.AdEvents || (e.AdEvents = {})).CONTENT_PAUSED = "onContentPaused"),
                                (n.CONTENT_RESUMED = "onContentResumed"),
                                (n.AD_PROGRESSION = "onAdProgression"),
                                (n.AD_DISABLED = "onAdsDisabled"),
                                (n.AD_CLICKED = "onAdClicked"),
                                (n.AD_REWARDED = "onAdRewardGranted"),
                                (n.BANNER_SHOWN = "onBannerShown"),
                                (n.BANNER_HIDDEN = "onBannerHidden"),
                                (n.AD_LOADED = "onAdLoaded"),
                                (n.AD_PROVIDER_LOADED = "onAdProviderLoaded"),
                                ((n = e.AdType || (e.AdType = {}))[(n.interstitial = 0)] = "interstitial"),
                                (n[(n.rewarded = 1)] = "rewarded"),
                                (n[(n.banner = 2)] = "banner"),
                                ((n = e.ProviderTypes || (e.ProviderTypes = {})).Yandex = "yx"),
                                (n.Dummy = "dm"),
                                (n.AdFree = "af"),
                                (n.GD = "gd"),
                                (n.GDBanner = "gdb"),
                                (n.Jio = "jio");
                        }.apply(e, [n, e]);
                        void 0 !== n && (t.exports = n);
                    },
                    548: function (t, e, n) {
                        var i,
                            h =
                                (this && this.__extends) ||
                                ((i = function (t, e) {
                                    return (i =
                                        Object.setPrototypeOf ||
                                        ({ __proto__: [] } instanceof Array &&
                                            function (t, e) {
                                                t.__proto__ = e;
                                            }) ||
                                        function (t, e) {
                                            for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
                                        })(t, e);
                                }),
                                function (t, e) {
                                    if ("function" != typeof e && null !== e) throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
                                    function n() {
                                        this.constructor = t;
                                    }
                                    i(t, e), (t.prototype = null === e ? Object.create(e) : ((n.prototype = e.prototype), new n()));
                                }),
                            l =
                                (this && this.__importDefault) ||
                                function (t) {
                                    return t && t.__esModule ? t : { default: t };
                                },
                            n = [n, e, n(34), n(12), n(563), n(766)],
                            e = function (t, e, n, i, r, o) {
                                "use strict";
                                Object.defineProperty(e, "__esModule", { value: !0 }), (e.AdWrapper = void 0), (n = l(n));
                                (a = n.default),
                                    h(s, a),
                                    (s.prototype.showAd = function (t) {
                                        for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                                        if (null === this.provider) throw new Error("Can not request an ad without an provider, please attach an ad provider!");
                                        e.unshift(t), this.provider.showAd.apply(this.provider, e);
                                    }),
                                    (s.prototype.getBanner = function () {
                                        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
                                        if (null === this.provider) throw new Error("Can not load a banner without an provider, please attach an ad provider!");
                                        return "function" == typeof this.provider.getBanner ? this.provider.getBanner.apply(this.provider, t) : null;
                                    }),
                                    (s.prototype.preloadAd = function (t) {
                                        for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                                        if (null === this.provider) throw new Error("Can not preload an ad without an provider, please attach an ad provider!");
                                        e.unshift(t), this.provider.preloadAd.apply(this.provider, e);
                                    }),
                                    (s.prototype.destroyAd = function (t) {
                                        for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                                        if (null === this.provider) throw new Error("Can not destroy an ad without an provider, please attach an ad provider!");
                                        e.unshift(t), this.provider.destroyAd.apply(this.provider, e);
                                    }),
                                    (s.prototype.hideAd = function (t) {
                                        for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                                        if (null === this.provider) throw new Error("Can not hide an ad without an provider, please attach an ad provider!");
                                        e.unshift(t), this.provider.hideAd.apply(this.provider, e);
                                    }),
                                    (s.prototype.adsEnabled = function () {
                                        if (null === this.provider) throw new Error("Can not hide an ad without an provider, please attach an ad provider!");
                                        return this.provider.adsEnabled;
                                    }),
                                    (s.prototype.adAvailable = function (t) {
                                        for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                                        if (null === this.provider) throw new Error("Can not hide an ad without an provider, please attach an ad provider!");
                                        return e.unshift(t), this.provider.adAvailable.apply(this.provider, e);
                                    });
                                var a,
                                    n = s;
                                function s(t, e) {
                                    var n = a.call(this) || this;
                                    switch (((n.bannerActive = !1), (n.provider = null), t)) {
                                        case i.ProviderTypes.AdFree:
                                            n.provider = new r.AdFreeUntrackedProvider();
                                            break;
                                        case i.ProviderTypes.Dummy:
                                            n.provider = new r.DummyProvider();
                                            break;
                                        case i.ProviderTypes.Yandex:
                                            n.provider = new r.YandexAdProvider();
                                            break;
                                        case i.ProviderTypes.Jio:
                                            n.provider = new o.JioAdProvider();
                                            break;
                                        default:
                                        case i.ProviderTypes.GD:
                                            n.provider = new r.GameDistribution(e);
                                    }
                                    return n.provider.setManager(n), n;
                                }
                                e.AdWrapper = n;
                            }.apply(e, n);
                        void 0 !== e && (t.exports = e);
                    },
                },
                r = {};
            var t = (function t(e) {
                var n = r[e];
                return void 0 === n && ((n = r[e] = { exports: {} }), i[e].call(n.exports, n, n.exports, t)), n.exports;
            })(729);
            self.h5ads = t;
        })(),
        !(function (t, e) {
            "object" == typeof exports && "undefined" != typeof module
                ? e(exports)
                : "function" == typeof define && define.amd
                ? define(["exports"], e)
                : e(((t = "undefined" != typeof globalThis ? globalThis : t || self).h5branding = t.h5branding || {}));
        })(this, function (o) {
            "use strict";
            var it = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
            function rt() {
                throw new Error("Dynamic requires are not currently supported by rollup-plugin-commonjs");
            }
            function t(t, e) {
                return t((e = { exports: {} }), e.exports), e.exports;
            }
            t(function (t, e) {
                t.exports = (function () {
                    function i(t) {
                        var e = typeof t;
                        return t !== null && (e === "object" || e === "function");
                    }
                    function h(t) {
                        return typeof t === "function";
                    }
                    var t = void 0;
                    if (Array.isArray) t = Array.isArray;
                    else
                        t = function (t) {
                            return Object.prototype.toString.call(t) === "[object Array]";
                        };
                    var n = t,
                        r = 0,
                        e = void 0,
                        o = void 0,
                        a = function t(e, n) {
                            g[r] = e;
                            g[r + 1] = n;
                            r += 2;
                            if (r === 2)
                                if (o) o(y);
                                else v();
                        };
                    function s(t) {
                        o = t;
                    }
                    function l(t) {
                        a = t;
                    }
                    var u = typeof window !== "undefined" ? window : undefined,
                        c = u || {},
                        d = c.MutationObserver || c.WebKitMutationObserver,
                        p = typeof self === "undefined" && typeof process !== "undefined" && {}.toString.call(process) === "[object process]",
                        f = typeof Uint8ClampedArray !== "undefined" && typeof importScripts !== "undefined" && typeof MessageChannel !== "undefined";
                    function F() {
                        return function () {
                            return process.nextTick(y);
                        };
                    }
                    function R() {
                        if (typeof e !== "undefined")
                            return function () {
                                e(y);
                            };
                        return m();
                    }
                    function N() {
                        var t = 0;
                        var e = new d(y);
                        var n = document.createTextNode("");
                        e.observe(n, { characterData: true });
                        return function () {
                            n.data = t = ++t % 2;
                        };
                    }
                    function j() {
                        var t = new MessageChannel();
                        t.port1.onmessage = y;
                        return function () {
                            return t.port2.postMessage(0);
                        };
                    }
                    function m() {
                        var t = setTimeout;
                        return function () {
                            return t(y, 1);
                        };
                    }
                    var g = new Array(1e3);
                    function y() {
                        for (var t = 0; t < r; t += 2) {
                            var e = g[t];
                            var n = g[t + 1];
                            e(n);
                            g[t] = undefined;
                            g[t + 1] = undefined;
                        }
                        r = 0;
                    }
                    function U() {
                        try {
                            var t = Function("return this")().require("vertx");
                            e = t.runOnLoop || t.runOnContext;
                            return R();
                        } catch (t) {
                            return m();
                        }
                    }
                    var v = void 0;
                    if (p) v = F();
                    else if (d) v = N();
                    else if (f) v = j();
                    else if (u === undefined && typeof rt === "function") v = U();
                    else v = m();
                    function w(t, e) {
                        var n = this;
                        var i = new this.constructor(A);
                        if (i[S] === undefined) B(i);
                        var r = n._state;
                        if (r) {
                            var o = arguments[r - 1];
                            a(function () {
                                return E(r, i, o, n._result);
                            });
                        } else D(n, i, t, e);
                        return i;
                    }
                    function b(t) {
                        var e = this;
                        if (t && typeof t === "object" && t.constructor === e) return t;
                        var n = new e(A);
                        P(n, t);
                        return n;
                    }
                    var S = Math.random().toString(36).substring(2);
                    function A() {}
                    var x = void 0,
                        _ = 1,
                        k = 2;
                    function z() {
                        return new TypeError("You cannot resolve a promise with itself");
                    }
                    function W() {
                        return new TypeError("A promises callback cannot return that same promise.");
                    }
                    function Y(t, e, n, i) {
                        try {
                            t.call(e, n, i);
                        } catch (t) {
                            return t;
                        }
                    }
                    function G(t, i, r) {
                        a(function (e) {
                            var n = false;
                            var t = Y(
                                r,
                                i,
                                function (t) {
                                    if (n) return;
                                    n = true;
                                    if (i !== t) P(e, t);
                                    else C(e, t);
                                },
                                function (t) {
                                    if (n) return;
                                    n = true;
                                    O(e, t);
                                },
                                "Settle: " + (e._label || " unknown promise")
                            );
                            if (!n && t) {
                                n = true;
                                O(e, t);
                            }
                        }, t);
                    }
                    function X(e, t) {
                        if (t._state === _) C(e, t._result);
                        else if (t._state === k) O(e, t._result);
                        else
                            D(
                                t,
                                undefined,
                                function (t) {
                                    return P(e, t);
                                },
                                function (t) {
                                    return O(e, t);
                                }
                            );
                    }
                    function T(t, e, n) {
                        if (e.constructor === t.constructor && n === w && e.constructor.resolve === b) X(t, e);
                        else if (n === undefined) C(t, e);
                        else if (h(n)) G(t, e, n);
                        else C(t, e);
                    }
                    function P(e, t) {
                        if (e === t) O(e, z());
                        else if (i(t)) {
                            var n = void 0;
                            try {
                                n = t.then;
                            } catch (t) {
                                O(e, t);
                                return;
                            }
                            T(e, t, n);
                        } else C(e, t);
                    }
                    function V(t) {
                        if (t._onerror) t._onerror(t._result);
                        M(t);
                    }
                    function C(t, e) {
                        if (t._state !== x) return;
                        t._result = e;
                        t._state = _;
                        if (t._subscribers.length !== 0) a(M, t);
                    }
                    function O(t, e) {
                        if (t._state !== x) return;
                        t._state = k;
                        t._result = e;
                        a(V, t);
                    }
                    function D(t, e, n, i) {
                        var r = t._subscribers;
                        var o = r.length;
                        t._onerror = null;
                        r[o] = e;
                        r[o + _] = n;
                        r[o + k] = i;
                        if (o === 0 && t._state) a(M, t);
                    }
                    function M(t) {
                        var e = t._subscribers;
                        var n = t._state;
                        if (e.length === 0) return;
                        var i = void 0,
                            r = void 0,
                            o = t._result;
                        for (var a = 0; a < e.length; a += 3) {
                            i = e[a];
                            r = e[a + n];
                            if (i) E(n, i, r, o);
                            else r(o);
                        }
                        t._subscribers.length = 0;
                    }
                    function E(t, e, n, i) {
                        var r = h(n),
                            o = void 0,
                            a = void 0,
                            s = true;
                        if (r) {
                            try {
                                o = n(i);
                            } catch (t) {
                                s = false;
                                a = t;
                            }
                            if (e === o) {
                                O(e, W());
                                return;
                            }
                        } else o = i;
                        if (e._state !== x);
                        else if (r && s) P(e, o);
                        else if (s === false) O(e, a);
                        else if (t === _) C(e, o);
                        else if (t === k) O(e, o);
                    }
                    function H(n, t) {
                        try {
                            t(
                                function t(e) {
                                    P(n, e);
                                },
                                function t(e) {
                                    O(n, e);
                                }
                            );
                        } catch (t) {
                            O(n, t);
                        }
                    }
                    var I = 0;
                    function q() {
                        return I++;
                    }
                    function B(t) {
                        t[S] = I++;
                        t._state = undefined;
                        t._result = undefined;
                        t._subscribers = [];
                    }
                    function K() {
                        return new Error("Array Methods must be provided an Array");
                    }
                    var J = (function () {
                        function t(t, e) {
                            this._instanceConstructor = t;
                            this.promise = new t(A);
                            if (!this.promise[S]) B(this.promise);
                            if (n(e)) {
                                this.length = e.length;
                                this._remaining = e.length;
                                this._result = new Array(this.length);
                                if (this.length === 0) C(this.promise, this._result);
                                else {
                                    this.length = this.length || 0;
                                    this._enumerate(e);
                                    if (this._remaining === 0) C(this.promise, this._result);
                                }
                            } else O(this.promise, K());
                        }
                        t.prototype._enumerate = function t(e) {
                            for (var n = 0; this._state === x && n < e.length; n++) this._eachEntry(e[n], n);
                        };
                        t.prototype._eachEntry = function t(e, n) {
                            var i = this._instanceConstructor;
                            var r = i.resolve;
                            if (r === b) {
                                var o = void 0;
                                var a = void 0;
                                var s = false;
                                try {
                                    o = e.then;
                                } catch (t) {
                                    s = true;
                                    a = t;
                                }
                                if (o === w && e._state !== x) this._settledAt(e._state, n, e._result);
                                else if (typeof o !== "function") {
                                    this._remaining--;
                                    this._result[n] = e;
                                } else if (i === L) {
                                    var h = new i(A);
                                    if (s) O(h, a);
                                    else T(h, e, o);
                                    this._willSettleAt(h, n);
                                } else
                                    this._willSettleAt(
                                        new i(function (t) {
                                            return t(e);
                                        }),
                                        n
                                    );
                            } else this._willSettleAt(r(e), n);
                        };
                        t.prototype._settledAt = function t(e, n, i) {
                            var r = this.promise;
                            if (r._state === x) {
                                this._remaining--;
                                if (e === k) O(r, i);
                                else this._result[n] = i;
                            }
                            if (this._remaining === 0) C(r, this._result);
                        };
                        t.prototype._willSettleAt = function t(e, n) {
                            var i = this;
                            D(
                                e,
                                undefined,
                                function (t) {
                                    return i._settledAt(_, n, t);
                                },
                                function (t) {
                                    return i._settledAt(k, n, t);
                                }
                            );
                        };
                        return t;
                    })();
                    function Z(t) {
                        return new J(this, t).promise;
                    }
                    function Q(r) {
                        var o = this;
                        if (!n(r))
                            return new o(function (t, e) {
                                return e(new TypeError("You must pass an array to race."));
                            });
                        else
                            return new o(function (t, e) {
                                var n = r.length;
                                for (var i = 0; i < n; i++) o.resolve(r[i]).then(t, e);
                            });
                    }
                    function $(t) {
                        var e = this;
                        var n = new e(A);
                        O(n, t);
                        return n;
                    }
                    function tt() {
                        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                    }
                    function et() {
                        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                    }
                    var L = (function () {
                        function e(t) {
                            this[S] = q();
                            this._result = this._state = undefined;
                            this._subscribers = [];
                            if (A !== t) {
                                typeof t !== "function" && tt();
                                this instanceof e ? H(this, t) : et();
                            }
                        }
                        e.prototype.catch = function t(e) {
                            return this.then(null, e);
                        };
                        e.prototype.finally = function t(e) {
                            var n = this;
                            var i = n.constructor;
                            if (h(e))
                                return n.then(
                                    function (t) {
                                        return i.resolve(e()).then(function () {
                                            return t;
                                        });
                                    },
                                    function (t) {
                                        return i.resolve(e()).then(function () {
                                            throw t;
                                        });
                                    }
                                );
                            return n.then(e, e);
                        };
                        return e;
                    })();
                    function nt() {
                        var t = void 0;
                        if (typeof it !== "undefined") t = it;
                        else if (typeof self !== "undefined") t = self;
                        else
                            try {
                                t = Function("return this")();
                            } catch (t) {
                                throw new Error("polyfill failed because global object is unavailable in this environment");
                            }
                        var e = t.Promise;
                        if (e) {
                            var n = null;
                            try {
                                n = Object.prototype.toString.call(e.resolve());
                            } catch (t) {}
                            if (n === "[object Promise]" && !e.cast) return;
                        }
                        t.Promise = L;
                    }
                    return (L.prototype.then = w), (L.all = Z), (L.race = Q), (L.resolve = b), (L.reject = $), (L._setScheduler = s), (L._setAsap = l), (L._asap = a), (L.polyfill = nt), (L.Promise = L);
                })();
            }).polyfill(),
                (e.has = function (t) {
                    var e,
                        n,
                        i = t.lastIndexOf(".");
                    return !(i <= 0 || i >= t.length - 1) && !((e = t.lastIndexOf(".", i - 1)) <= 0 || i - 1 <= e) && !!(n = r[t.slice(i + 1)]) && 0 <= n.indexOf(" " + t.slice(e + 1, i) + " ");
                }),
                (e.is = function (t) {
                    var e,
                        n = t.lastIndexOf(".");
                    return !(n <= 0 || n >= t.length - 1) && !(0 <= t.lastIndexOf(".", n - 1)) && !!(e = r[t.slice(n + 1)]) && 0 <= e.indexOf(" " + t.slice(0, n) + " ");
                }),
                (e.get = function (t) {
                    var e,
                        n,
                        i = t.lastIndexOf(".");
                    return i <= 0 || i >= t.length - 1 || (e = t.lastIndexOf(".", i - 1)) <= 0 || i - 1 <= e || !(n = r[t.slice(i + 1)]) || n.indexOf(" " + t.slice(e + 1, i) + " ") < 0 ? null : t.slice(e + 1);
                });
            var r,
                n = e;
            function e() {}
            (a.setList = function (t) {
                r = t || {};
            }),
                (a.getDomain = function (t) {
                    var e;
                    return r ? ((e = t.match(/\./g)) && e.length < 2 ? t : (e = this.getTld(t)) ? ((e = t.length - e.length - 1), (e = t.lastIndexOf(".", e - 1) + 1), t.substring(e) || "") : null) : null;
                }),
                (a.getTld = function (t) {
                    var e;
                    return r ? ((e = t.lastIndexOf(".")), (e = t.substring(e + 1)), (r[e.toLowerCase()] && n.get(t)) || e) : "";
                }),
                (a.KEY = "Domains");
            var i = a;
            function a() {}
            Object.defineProperty(h, "instance", {
                get: function () {
                    return (h.classInstance = void 0 === h.classInstance ? new h() : h.classInstance);
                },
                enumerable: !1,
                configurable: !0,
            }),
                (h.prototype.load = function (e, t, n) {
                    var i = this;
                    return this.contains(e)
                        ? Promise.reject("Already in cache.")
                        : ((this.cache[e] = { url: t, data: null }),
                          this.requestXhr(t, n)
                              .then(function (t) {
                                  return i.loadComplete(e, t);
                              })
                              .catch(function (t) {
                                  return i.remove(e), Promise.reject(t);
                              }));
                }),
                (h.prototype.loadComplete = function (t, e) {
                    if (!this.contains(t)) return Promise.reject("Item was removed from cache before loading was complete.");
                    try {
                        var n = JSON.parse(e);
                        return (this.cache[t].data = n), Promise.resolve(n);
                    } catch (t) {
                        return Promise.reject("There was an error parsing JSON file.");
                    }
                }),
                (h.prototype.remove = function (t) {
                    this.contains(t) && delete this.cache[t];
                }),
                (h.prototype.get = function (t) {
                    return this.contains(t) ? this.cache[t].data : null;
                }),
                (h.prototype.contains = function (t) {
                    return this.cache.hasOwnProperty(t);
                }),
                (h.prototype.isLoading = function (t) {
                    return this.contains(t) && null === this.cache[t].data;
                }),
                (h.prototype.isLoaded = function (t) {
                    return this.contains(t) && null !== this.cache[t].data;
                }),
                (h.prototype.loadScript = function (i, t, r) {
                    return new Promise(function (t, e) {
                        var n = document.createElement("script");
                        (n.src = i),
                            (n.async = !1),
                            (n.onload = function () {
                                "function" == typeof r && r(), t();
                            }),
                            document.head.appendChild(n);
                    });
                }),
                (h.prototype.requestXhr = function (n, i) {
                    var r;
                    return (
                        void 0 === i && (i = "application/json"),
                        window.XMLHttpRequest
                            ? ((r = new XMLHttpRequest()),
                              new Promise(function (t, e) {
                                  r.onreadystatechange = function () {
                                      4 === r.readyState &&
                                          (200 === r.status ? (t(r.responseText), (r.onreadystatechange = null)) : 0 < r.status && (e("There was a problem with the request: status ".concat(r.status)), (r.onreadystatechange = null)));
                                  };
                                  try {
                                      r.open("GET", n, !0), r.setRequestHeader("Content-Type", i), r.send();
                                  } catch (t) {
                                      e("Error: Unable to send request, CORS not allowed.");
                                  }
                              }))
                            : Promise.reject("Unable to send request, XMLHttpRequest not supported.")
                    );
                });
            var s = h;
            function h() {
                this.cache = {};
            }
            function l(o, a, s, h) {
                return new (s = s || Promise)(function (t, e) {
                    function n(t) {
                        try {
                            r(h.next(t));
                        } catch (t) {
                            e(t);
                        }
                    }
                    function i(t) {
                        try {
                            r(h.throw(t));
                        } catch (t) {
                            e(t);
                        }
                    }
                    function r(e) {
                        e.done
                            ? t(e.value)
                            : new s(function (t) {
                                  t(e.value);
                              }).then(n, i);
                    }
                    r((h = h.apply(o, a || [])).next());
                });
            }
            function u(i, r) {
                var o,
                    a,
                    s,
                    h = {
                        label: 0,
                        sent: function () {
                            if (1 & s[0]) throw s[1];
                            return s[1];
                        },
                        trys: [],
                        ops: [],
                    },
                    t = { next: e(0), throw: e(1), return: e(2) };
                return (
                    "function" == typeof Symbol &&
                        (t[Symbol.iterator] = function () {
                            return this;
                        }),
                    t
                );
                function e(n) {
                    return function (t) {
                        var e = [n, t];
                        if (o) throw new TypeError("Generator is already executing.");
                        for (; h; )
                            try {
                                if (((o = 1), a && (s = 2 & e[0] ? a.return : e[0] ? a.throw || ((s = a.return) && s.call(a), 0) : a.next) && !(s = s.call(a, e[1])).done)) return s;
                                switch (((a = 0), (e = s ? [2 & e[0], s.value] : e)[0])) {
                                    case 0:
                                    case 1:
                                        s = e;
                                        break;
                                    case 4:
                                        return h.label++, { value: e[1], done: !1 };
                                    case 5:
                                        h.label++, (a = e[1]), (e = [0]);
                                        continue;
                                    case 7:
                                        (e = h.ops.pop()), h.trys.pop();
                                        continue;
                                    default:
                                        if (!(s = 0 < (s = h.trys).length && s[s.length - 1]) && (6 === e[0] || 2 === e[0])) {
                                            h = 0;
                                            continue;
                                        }
                                        if (3 === e[0] && (!s || (e[1] > s[0] && e[1] < s[3]))) h.label = e[1];
                                        else if (6 === e[0] && h.label < s[1]) (h.label = s[1]), (s = e);
                                        else {
                                            if (!(s && h.label < s[2])) {
                                                s[2] && h.ops.pop(), h.trys.pop();
                                                continue;
                                            }
                                            (h.label = s[2]), h.ops.push(e);
                                        }
                                }
                                e = r.call(i, h);
                            } catch (t) {
                                (e = [6, t]), (a = 0);
                            } finally {
                                o = s = 0;
                            }
                        if (5 & e[0]) throw e[1];
                        return { value: e[0] ? e[1] : void 0, done: !0 };
                    };
                }
            }
            (o.BrandingDomain = void 0),
                ((P = o.BrandingDomain || (o.BrandingDomain = {}))[(P.Neutral = 0)] = "Neutral"),
                (P[(P.Yepi = 1)] = "Yepi"),
                (P[(P.Spele = 2)] = "Spele"),
                (P[(P.Funnygames = 3)] = "Funnygames"),
                (P[(P.Kizi = 4)] = "Kizi"),
                (P[(P.PlayCell = 5)] = "PlayCell"),
                (P[(P.GameCell = 6)] = "GameCell"),
                (P[(P.Bild = 7)] = "Bild"),
                (P[(P.AGame = 8)] = "AGame"),
                (P[(P.Admeen = 9)] = "Admeen"),
                (P[(P.PlayTime = 10)] = "PlayTime"),
                (P[(P.Zigiz = 11)] = "Zigiz");
            (d.isBip = function () {
                return -1 !== window.location.search.indexOf("bipgaming") || "bip.fbrq.io" === window.location.host;
            }),
                (d.isPlaycellApp = function () {
                    return -1 !== window.location.search.indexOf("playcellApp");
                }),
                (d.isAGame = function () {
                    return -1 !== window.location.search.indexOf("agame");
                }),
                (d.isAirfi = function () {
                    return !!window.hasOwnProperty("airfi") && window.airfi;
                }),
                (d.isPlaytime = function () {
                    return -1 !== window.location.host.indexOf("playtime.nl");
                }),
                (d.isBild = function () {
                    return "bild.fbrq.io" === window.location.host || -1 !== window.location.host.indexOf("contentfleet.com");
                }),
                (d.isYandex = function () {
                    return window.hasOwnProperty("_YaSDK") || window.hasOwnProperty("YaGames");
                }),
                (d.getYandexBaseURL = function () {
                    var t;
                    if (null != (t = null == (t = window.YandexGamesSDKEnvironment) ? void 0 : t.browser) && t.lang && "en" === window.YandexGamesSDKEnvironment.browser.lang) return "yandex.com";
                    return "yandex.ru";
                }),
                (d.isLagged = function (t, e) {
                    var n = new RegExp(e);
                    try {
                        var i = t.match(n);
                        if (i && 0 < i.length) return i[0] === e;
                    } catch (t) {}
                    return !1;
                }),
                (d.isSpecificPartner = function (t, e, n) {
                    var i = !1;
                    try {
                        var r = new URLSearchParams(t).get(e);
                        r && -1 !== r.indexOf(n) && (i = !0);
                    } catch (t) {}
                    return i;
                });
            var c = d;
            function d() {}
            (o.UtmTargets = void 0),
                ((P = o.UtmTargets || (o.UtmTargets = {}))[(P.splashscreen = 0)] = "splashscreen"),
                (P[(P.logo = 1)] = "logo"),
                (P[(P.facebook = 2)] = "facebook"),
                (P[(P.twitter = 3)] = "twitter"),
                (P[(P.playstore = 4)] = "playstore"),
                (P[(P.appstore = 5)] = "appstore"),
                (P[(P.more_games = 6)] = "more_games"),
                (P[(P.download_game = 7)] = "download_game"),
                (P[(P.walkthrough = 8)] = "walkthrough"),
                (P[(P.disclaimer = 9)] = "disclaimer"),
                (P[(P.highscores = 10)] = "highscores");
            (f.getProtocol = function (t) {
                return t ? "https://" : "//";
            }),
                (f.getUtmContent = function (t) {
                    return "string" == typeof t ? t : o.UtmTargets[t];
                }),
                (f.getDomainURL = function (t, e) {
                    var n;
                    switch (t) {
                        case o.BrandingDomain.Spele:
                            n = e + "www.spele.nl";
                            break;
                        case o.BrandingDomain.Yepi:
                            n = e + "www.yepi.com";
                            break;
                        case o.BrandingDomain.Admeen:
                            n = "https://media.admeen.com/branding/link.php";
                            break;
                        case o.BrandingDomain.PlayCell:
                            n = e + "www.playcell.com";
                            break;
                        case o.BrandingDomain.GameCell:
                            n = e + "www.gamecell.com";
                            break;
                        case o.BrandingDomain.Kizi:
                            n = e + "www.kizi.com";
                            break;
                        case o.BrandingDomain.Bild:
                            n = e + "www.bildspielt.de";
                            break;
                        case o.BrandingDomain.Funnygames:
                            n = e + "www.funnygames.nu";
                            break;
                        case o.BrandingDomain.PlayTime:
                            n = e + "playtime.nl";
                            break;
                        default:
                        case o.BrandingDomain.AGame:
                            n = e + "www.agame.com";
                            break;
                        case o.BrandingDomain.Zigiz:
                            n = e + "m.zigiz.com";
                    }
                    return n;
                }),
                (f.getPromoURL = function (t, e, n, i, r) {
                    return window.hasOwnProperty("_YaSDK") || window.hasOwnProperty("YaGames")
                        ? "https://".concat(c.getYandexBaseURL(), "/games/developer?name=Azerion")
                        : t === o.BrandingDomain.Admeen
                        ? "https://media.admeen.com/branding/link.php"
                        : t === o.BrandingDomain.Bild
                        ? e
                        : e + "/?utm_source=" + n + "&utm_medium=html5&utm_term=" + i + "&utm_content=" + r + "&utm_campaign=Gamedistribution";
                });
            var p = f;
            function f() {}
            function m(t, e, n) {
                var i = document.createElement("script");
                i.setAttribute("src", t + "?v=" + e), "function" == typeof n && (i.onload = n), document.body.appendChild(i);
            }
            y.loadPortalScript = function (t) {
                t &&
                    t.hasOwnProperty("minijuegos") &&
                    -1 !== t.minijuegos.indexOf(A.getSourceSite()) &&
                    (void 0 !== window.mpConfig ? (window.mpConfig.partner = "orange-games") : (window.mpConfig = { partner: "orange-games" }), m("https://ext.minijuegosgratis.com/external-host/main.js", Date.now() / 1e3)),
                    t &&
                        t.hasOwnProperty("kongregate") &&
                        -1 !== t.kongregate.indexOf(A.getSourceSite()) &&
                        m("https://cdn1.kongregate.com/javascripts/kongregate_api.js", Date.now() / 1e3, function () {
                            "undefined" != typeof kongregateAPI &&
                                kongregateAPI.loadAPI(function () {
                                    window.kongregate = kongregateAPI.getAPI();
                                });
                        }),
                    t && t.hasOwnProperty("newgrounds") && -1 !== t.newgrounds.indexOf(A.getSourceSite()) && m("https://cdn.fbrq.io/@azerion/splash/assets/scripts/newgroundsio.min.js", Date.now() / 1e3);
            };
            var g = y;
            function y() {}
            (w.isStandAlone = function () {
                var t;
                return null != (t = window._azerionIntegration) && t.sa ? (null == (t = window._azerionIntegration) ? void 0 : t.sa) : !!window.hasOwnProperty("fbrqSA") && window.fbrqSA;
            }),
                (w.hasDomainForCustomBuild = function () {
                    var t;
                    return (null == (t = window._azerionIntegration) ? void 0 : t.bd) || window.hasOwnProperty("fbrqBD");
                }),
                (w.getDomainForCustomBuild = function () {
                    var t;
                    return null != (t = window._azerionIntegration) && t.bd && (null == (t = window._azerionIntegration) ? void 0 : t.bd) in o.BrandingDomain
                        ? null == (t = window._azerionIntegration)
                            ? void 0
                            : t.bd
                        : window.hasOwnProperty("fbrqBD") && window.fbrqBD in o.BrandingDomain
                        ? window.fbrqBD
                        : void 0;
                }),
                (w.hasLinksSettingsForCustomBuild = function () {
                    var t;
                    return (null == (t = window._azerionIntegration) ? void 0 : t.la) || window.hasOwnProperty("fbrqLA");
                }),
                (w.getLinkSettingsForCustomBuild = function () {
                    var t;
                    return null != (t = window._azerionIntegration) && t.la ? (null == (t = window._azerionIntegration) ? void 0 : t.la) : window.hasOwnProperty("fbrqLA") ? window.hasOwnProperty("fbrqLA") : void 0;
                });
            var v = w;
            function w() {}
            (S.preload = function (t) {
                var e = Promise.all([
                    s.instance.load(i.KEY, "".concat(A.ASSET_LOCATION, "json/domains.json?v=").concat(t), "text/plain"),
                    s.instance.load(S.SITELOCK_PORTALS, "".concat(A.ASSET_LOCATION, "json/sitelock.json?v=").concat(t), "text/plain"),
                ]);
                return (
                    Promise.all([
                        s.instance.load(S.INTERNAL_PORTALS_KEY, "".concat(A.ASSET_LOCATION, "json/internal.json?v=").concat(t), "text/plain"),
                        s.instance.load(S.CONTRACTED_PORTALS_KEY, "".concat(A.ASSET_LOCATION, "json/contracted.json?v=").concat(t), "text/plain"),
                        s.instance.load(S.SPECIAL_PORTALS_KEY, "".concat(A.ASSET_LOCATION, "json/special.json?v=").concat(t), "text/plain"),
                    ]),
                    e
                        .then(function (t) {
                            var e = t[0],
                                t = t[1];
                            i.setList(e), g.loadPortalScript(t), S.setSiteLock(t);
                        })
                        .catch(function () {})
                );
            }),
                (S.setSiteLock = function (t) {
                    S.siteLocks = t;
                }),
                Object.defineProperty(S, "brandingLogoUrl", {
                    get: function () {
                        var t;
                        switch (
                            (A.isOnDevice() || c.isAirfi() ? (A.ASSET_LOCATION = "assets/") : "fbrq.io" === A.getSourceSite(!0) && (A.ASSET_LOCATION = "https://" + window.location.host + "/@azerion/splash/assets/"), A.getBrandingDomain())
                        ) {
                            case o.BrandingDomain.Spele:
                                t = "spele";
                                break;
                            case o.BrandingDomain.PlayCell:
                                t = "playcell";
                                break;
                            case o.BrandingDomain.GameCell:
                                t = "gamecell";
                                break;
                            case o.BrandingDomain.Yepi:
                                t = "yepi";
                                break;
                            case o.BrandingDomain.Admeen:
                                t = "admeen";
                                break;
                            case o.BrandingDomain.Bild:
                                t = "bild";
                                break;
                            case o.BrandingDomain.Kizi:
                                t = "kizi";
                                break;
                            case o.BrandingDomain.Funnygames:
                                t = "funnygames";
                                break;
                            case o.BrandingDomain.PlayTime:
                                t = "playtime";
                                break;
                            default:
                            case o.BrandingDomain.AGame:
                                t = "agame";
                                break;
                            case o.BrandingDomain.Zigiz:
                                t = "zigiz";
                        }
                        return A.ASSET_LOCATION + "images/branding_logo_" + t + "_small.png";
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                Object.defineProperty(S, "brandingBackgroundColor", {
                    get: function () {
                        var t;
                        switch (A.getBrandingDomain()) {
                            case o.BrandingDomain.Spele:
                                t = "#4a72ad";
                                break;
                            case o.BrandingDomain.PlayCell:
                                t = "#52a1e1";
                                break;
                            case o.BrandingDomain.GameCell:
                                t = "#c600b2";
                                break;
                            case o.BrandingDomain.Yepi:
                                t = "#0573a7";
                                break;
                            case o.BrandingDomain.AGame:
                                t = "#0C486C";
                                break;
                            case o.BrandingDomain.Admeen:
                                t = "#4267B2";
                                break;
                            case o.BrandingDomain.Bild:
                                t = "#de0000";
                                break;
                            default:
                            case o.BrandingDomain.Kizi:
                                t = "#012f50";
                                break;
                            case o.BrandingDomain.Funnygames:
                                t = "#33b0ff";
                                break;
                            case o.BrandingDomain.PlayTime:
                            case o.BrandingDomain.Zigiz:
                                t = "#023a63";
                        }
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (S.blockedDomain = function () {
                    return A.isOnDevice() || S.isSpecial();
                }),
                (S.createCampaignURL = function (t, e) {
                    var n = A.getSourceSite(),
                        i = A.getBrandingDomain(),
                        r = p.getProtocol(A.isOnDevice()),
                        r = p.getDomainURL(i, r),
                        e = p.getUtmContent(e);
                    return p.getPromoURL(i, r, n, t, e);
                }),
                (S.openCampaignLink = function (t, e) {
                    t = S.createCampaignURL(t, e);
                    S.blockedDomain() || ((e = window.open(t)) && e.focus && e.focus());
                }),
                (S.isInternal = function () {
                    return S.hostMatchesList(s.instance.get(S.INTERNAL_PORTALS_KEY));
                }),
                (S.isContracted = function () {
                    return S.hostMatchesList(s.instance.get(S.CONTRACTED_PORTALS_KEY));
                }),
                (S.isSpecial = function () {
                    return S.hostMatchesList(s.instance.get(S.SPECIAL_PORTALS_KEY));
                }),
                (S.isAdmeen = function () {
                    var t;
                    return !(!S.siteLocks || !S.siteLocks.hasOwnProperty("admeen")) && ((t = S.siteLocks.admeen), S.hostMatchesList(t));
                }),
                (S.isKongregate = function () {
                    var t;
                    return !(!S.siteLocks || !S.siteLocks.hasOwnProperty("kongregate")) && ((t = S.siteLocks.kongregate), S.hostMatchesList(t));
                }),
                (S.isNewgrounds = function () {
                    var t;
                    return !(!S.siteLocks || !S.siteLocks.hasOwnProperty("newgrounds")) && ((t = S.siteLocks.newgrounds), S.hostMatchesList(t));
                }),
                (S.crossPromoAllowed = function () {
                    var t = S.siteLocks.yandex;
                    return S.hostMatchesList(t);
                }),
                (S.outGoingLinksAllowed = function () {
                    return !(c.isAirfi() || S.isSpecial() || S.isContracted()) && (!v.hasLinksSettingsForCustomBuild() || v.getLinkSettingsForCustomBuild());
                }),
                (S.hostMatchesList = function (t) {
                    t = t || [];
                    for (var e = A.getSourceSite(), n = 0; n < t.length; n++) if (e === t[n]) return !0;
                    return !1;
                }),
                (S.LOGO_KEY = "branding_logo"),
                (S.INTERNAL_PORTALS_KEY = "branding_portals"),
                (S.CONTRACTED_PORTALS_KEY = "branding_contracted"),
                (S.SPECIAL_PORTALS_KEY = "branding_special"),
                (S.SITELOCK_PORTALS = "sitelock_portals"),
                (S.DOMAIN_OVERWRITE = null),
                (S.analyticsEnabled = !0);
            var b = S;
            function S() {}
            (x.loadHost = function () {
                return l(this, void 0, void 0, function () {
                    var e, n;
                    return u(this, function (t) {
                        switch (t.label) {
                            case 0:
                                if (((e = document.referrer || window.location.host), !window.hasOwnProperty("gdsdk"))) return [3, 4];
                                t.label = 1;
                            case 1:
                                return t.trys.push([1, 3, , 4]), [4, window.gdsdk.getSession()];
                            case 2:
                                return (n = t.sent()), (e = n.location.parentDomain), [3, 4];
                            case 3:
                                return t.sent(), [3, 4];
                            case 4:
                                return (x.HOST = e), [2];
                        }
                    });
                });
            }),
                (x.getSourceSite = function (t) {
                    var e = x.HOST;
                    return (
                        -1 !== (e = (t = void 0 === t ? !1 : t) ? window.location.host : e).indexOf("embed.gamedistribution.com") &&
                            -1 !== window.location.search.indexOf("gd_sdk_referrer_url") &&
                            (e = x.getUrlParameter("gd_sdk_referrer_url") || e),
                        (e = decodeURIComponent(e)),
                        c.isBild()
                            ? "bildspielt.de"
                            : c.isBip()
                            ? "bipgaming.com"
                            : ((e = (e = -1 < e.indexOf("://") ? e.split("/")[2] : e.split("/")[0]).split(":")[0]), null !== (t = i.getDomain(e)) ? t : 3 === e.split(".").length ? e.substr(e.indexOf(".") + 1) : e)
                    );
                }),
                (x.getBrandingDomain = function () {
                    if (v.hasDomainForCustomBuild()) return v.getDomainForCustomBuild();
                    if (b.DOMAIN_OVERWRITE) return b.DOMAIN_OVERWRITE;
                    var t = x.getSourceSite();
                    if (b.isAdmeen()) return o.BrandingDomain.Admeen;
                    if (c.isPlaycellApp() || c.isBip()) return o.BrandingDomain.PlayCell;
                    switch (t) {
                        case "spele.nl":
                            return o.BrandingDomain.Spele;
                        case "yepi.com":
                            return o.BrandingDomain.Yepi;
                        case "oyunskor.com":
                        case "barbioyunu.com.tr":
                        case "bebekoyunu.com.tr":
                        case "oyunkolu.com":
                        case "oyungemisi.com":
                        case "oyunlar1.com":
                        case "oyunkuzusu.com":
                        case "kraloyun.com":
                        case "rekoroyun.com":
                        case "oyundedem.com":
                        case "oyunoyna.com":
                        case "pastaoyunu.com.tr":
                        case "playcell.com":
                            return o.BrandingDomain.PlayCell;
                        case "gamecell.com":
                            return o.BrandingDomain.GameCell;
                        case "playxl.com":
                            return o.BrandingDomain.Admeen;
                        case "kizi.com":
                            return o.BrandingDomain.Kizi;
                        case "bildspielt.de":
                            return o.BrandingDomain.Bild;
                        case "funnygames.nl":
                            return o.BrandingDomain.Funnygames;
                        case "playtime.nl":
                            return o.BrandingDomain.PlayTime;
                        default:
                        case "agame.com":
                            return o.BrandingDomain.AGame;
                        case "gmbl.nl":
                        case "zigiz.com":
                            return o.BrandingDomain.Zigiz;
                        case "coolmathgames.com":
                            return o.BrandingDomain.Neutral;
                    }
                }),
                (x.getReferrer = function (t) {
                    return -1 !== t.indexOf("?ref=") ? t.substr(t.indexOf("?ref=") + 5) : t;
                }),
                (x.inIframe = function () {
                    try {
                        return window.self !== window.top;
                    } catch (t) {
                        return !0;
                    }
                }),
                (x.inGDGameZone = function () {
                    return -1 !== document.referrer.indexOf("html5.gamedistribution.com");
                }),
                (x.getDomain = function (t) {
                    var e = document.createElement("a");
                    return (e.href = t), e.origin;
                }),
                (x.isOnDevice = function () {
                    return void 0 !== window.cordova && !/(gamedistribution\.com)/.test(window.location.hostname);
                }),
                (x.isTc = function () {
                    return /(teamcity\.azerdev\.com)/.test(window.location.host);
                }),
                (x.getRandomRange = function (t, e) {
                    return (Math.random() * (e - t) + t) | 0;
                }),
                (x.getUrlParameter = function (t) {
                    t = t.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                    t = new RegExp("[\\?&]" + t + "=([^&#]*)").exec(location.search);
                    return null === t ? "" : decodeURIComponent(t[1].replace(/\+/g, " "));
                }),
                (x.intTimeToString = function (t) {
                    var e = Math.floor(t / 3600),
                        n = Math.floor((t % 3600) / 60),
                        t = t % 60;
                    return (e < 10 ? "0" + e : e.toString()) + ":" + (n < 10 ? "0" + n : n.toString()) + ":" + (t < 10 ? "0" + t : t.toString());
                }),
                (x.LANGUAGE = "en"),
                (x.HOST = document.referrer || window.location.host),
                (x.ASSET_LOCATION = v.isStandAlone() ? "assets/" : "https://cdn.fbrq.io/@azerion/splash/assets/");
            var A = x;
            function x() {}
            (k.getUrlParams = function (t, e) {
                var n = null;
                try {
                    n = new URLSearchParams(e).get(t);
                } catch (t) {}
                return n;
            }),
                (k.hasBooleanValue = function (t, e) {
                    t = k.getUrlParams(t, e);
                    return !!t && "true" === t;
                }),
                (k.enableDebugMode = function () {
                    return k.hasBooleanValue("azerionIntegrationDebug", k.search);
                }),
                (k.showVersioning = function () {
                    return k.hasBooleanValue("showAzVersion", k.search);
                }),
                (k.getBuildInfo = function (t) {
                    var e = { build: { version: "", commit: "", timeStamp: new Date() }, gdId: "" };
                    try {
                        var n = t.build,
                            i = t.gdId;
                        (e.build = n || e.build), (e.gdId = i);
                    } catch (t) {}
                    return e;
                }),
                (k.showBuildInfo = function (t) {
                    var e, n;
                    (k.search = t),
                        k.enableDebugMode() &&
                            k.showVersioning() &&
                            (((t = document.createElement("div")).id = "az-debug-box"),
                            (t.style.position = "absolute"),
                            (t.style.top = "90%"),
                            (t.style.left = "10px"),
                            (t.style.width = "50vw"),
                            (t.style.height = "60px"),
                            (t.style.zIndex = "999"),
                            (t.style.padding = "5px 5px"),
                            (t.style.borderRadius = "5px"),
                            (t.style.backgroundColor = "rgba(255, 255, 255, 0.4)"),
                            (t.style.display = "flex"),
                            (t.style.flexDirection = "column"),
                            (t.style.justifyContent = "space-between"),
                            (t.style.color = "black"),
                            (t.style.fontSize = "14px"),
                            document.body.append(t),
                            (e = k.getBuildInfo(window._azerionIntegration)),
                            ((n = document.createElement("div")).id = "az-version"),
                            (n.textContent = "Build version:: ".concat(e.build.version)),
                            t.appendChild(n),
                            ((n = document.createElement("div")).id = "az-date"),
                            (n.textContent = "Build creation date:: ".concat(new Date(e.build.timeStamp).toDateString())),
                            t.appendChild(n),
                            ((n = document.createElement("div")).id = "az-gdId"),
                            (n.textContent = "GD Id:: ".concat(e.gdId)),
                            t.appendChild(n));
                });
            var _ = k;
            function k() {}
            var T = t(function (t, e) {
                t.exports = (function e(i, r, o) {
                    function a(n, t) {
                        if (!r[n]) {
                            if (!i[n]) {
                                if (!t && rt) return rt();
                                if (s) return s(n, !0);
                                t = new Error("Cannot find module '" + n + "'");
                                throw ((t.code = "MODULE_NOT_FOUND"), t);
                            }
                            t = r[n] = { exports: {} };
                            i[n][0].call(
                                t.exports,
                                function (t) {
                                    var e = i[n][1][t];
                                    return a(e || t);
                                },
                                t,
                                t.exports,
                                e,
                                i,
                                r,
                                o
                            );
                        }
                        return r[n].exports;
                    }
                    for (var s = rt, t = 0; t < o.length; t++) a(o[t]);
                    return a;
                })(
                    {
                        1: [
                            function (t, U, z) {
                                !function () {
                                    var u,
                                        n,
                                        c,
                                        d,
                                        p,
                                        t,
                                        f,
                                        s,
                                        l,
                                        a,
                                        h,
                                        o,
                                        r,
                                        m,
                                        i,
                                        g,
                                        e,
                                        y,
                                        v = this || Function("return this")(),
                                        w =
                                            ((t =
                                                Date.now ||
                                                function () {
                                                    return +new Date();
                                                }),
                                            (f = "undefined" != typeof SHIFTY_DEBUG_NOW ? SHIFTY_DEBUG_NOW : t),
                                            (n =
                                                ("undefined" != typeof window &&
                                                    (window.requestAnimationFrame ||
                                                        window.webkitRequestAnimationFrame ||
                                                        window.oRequestAnimationFrame ||
                                                        window.msRequestAnimationFrame ||
                                                        (window.mozCancelRequestAnimationFrame && window.mozRequestAnimationFrame))) ||
                                                setTimeout),
                                            (O.prototype.tween = function (t) {
                                                return this._isTweening ? this : ((void 0 === t && this._configured) || this.setConfig(t), (this._timestamp = f()), this._start(this.get(), this._attachment), this.resume());
                                            }),
                                            (O.prototype.setConfig = function (t) {
                                                (t = t || {}),
                                                    (this._configured = !0),
                                                    (this._attachment = t.attachment),
                                                    (this._pausedAtTime = null),
                                                    (this._scheduleId = null),
                                                    (this._delay = t.delay || 0),
                                                    (this._start = t.start || b),
                                                    (this._step = t.step || b),
                                                    (this._finish = t.finish || b),
                                                    (this._duration = t.duration || 500),
                                                    (this._currentState = A({}, t.from || this.get())),
                                                    (this._originalState = this.get()),
                                                    (this._targetState = A({}, t.to || this.get()));
                                                var e = this,
                                                    n =
                                                        ((this._timeoutHandler = function () {
                                                            P(e, e._timestamp, e._delay, e._duration, e._currentState, e._originalState, e._targetState, e._easing, e._step, e._scheduleFunction);
                                                        }),
                                                        this._currentState),
                                                    i = this._targetState;
                                                return x(i, n), (this._easing = C(n, t.easing || "linear")), (this._filterArgs = [n, this._originalState, i, this._easing]), T(this, "tweenCreated"), this;
                                            }),
                                            (O.prototype.get = function () {
                                                return A({}, this._currentState);
                                            }),
                                            (O.prototype.set = function (t) {
                                                this._currentState = t;
                                            }),
                                            (O.prototype.pause = function () {
                                                return (this._pausedAtTime = f()), (this._isPaused = !0), this;
                                            }),
                                            (O.prototype.resume = function () {
                                                return this._isPaused && (this._timestamp += f() - this._pausedAtTime), (this._isPaused = !1), (this._isTweening = !0), this._timeoutHandler(), this;
                                            }),
                                            (O.prototype.seek = function (t) {
                                                t = Math.max(t, 0);
                                                var e = f();
                                                return (
                                                    this._timestamp + t !== 0 &&
                                                        ((this._timestamp = e - t),
                                                        this.isPlaying() ||
                                                            ((this._isTweening = !0),
                                                            (this._isPaused = !1),
                                                            P(this, this._timestamp, this._delay, this._duration, this._currentState, this._originalState, this._targetState, this._easing, this._step, this._scheduleFunction, e),
                                                            this.pause())),
                                                    this
                                                );
                                            }),
                                            (O.prototype.stop = function (t) {
                                                return (
                                                    (this._isTweening = !1),
                                                    (this._isPaused = !1),
                                                    (this._timeoutHandler = b),
                                                    (v.cancelAnimationFrame || v.webkitCancelAnimationFrame || v.oCancelAnimationFrame || v.msCancelAnimationFrame || v.mozCancelRequestAnimationFrame || v.clearTimeout)(this._scheduleId),
                                                    t &&
                                                        (T(this, "beforeTween"),
                                                        _(1, this._currentState, this._originalState, this._targetState, 1, 0, this._easing),
                                                        T(this, "afterTween"),
                                                        T(this, "afterTweenEnd"),
                                                        this._finish.call(this, this._currentState, this._attachment)),
                                                    this
                                                );
                                            }),
                                            (O.prototype.isPlaying = function () {
                                                return this._isTweening && !this._isPaused;
                                            }),
                                            (O.prototype.setScheduleFunction = function (t) {
                                                this._scheduleFunction = t;
                                            }),
                                            (O.prototype.dispose = function () {
                                                for (var t in this) this.hasOwnProperty(t) && delete this[t];
                                            }),
                                            (O.prototype.filter = {}),
                                            (u = O.prototype.formula = {
                                                linear: function (t) {
                                                    return t;
                                                },
                                            }),
                                            A(O, { now: f, each: S, tweenProps: _, tweenProp: k, applyFilter: T, shallowCopy: A, defaults: x, composeEasingObject: C }),
                                            "function" == typeof SHIFTY_DEBUG_NOW && (v.timeoutHandler = P),
                                            "object" == typeof z ? (U.exports = O) : void 0 === v.Tweenable && (v.Tweenable = O),
                                            O);
                                    function b() {}
                                    function S(t, e) {
                                        for (var n in t) Object.hasOwnProperty.call(t, n) && e(n);
                                    }
                                    function A(e, n) {
                                        return (
                                            S(n, function (t) {
                                                e[t] = n[t];
                                            }),
                                            e
                                        );
                                    }
                                    function x(e, n) {
                                        S(n, function (t) {
                                            void 0 === e[t] && (e[t] = n[t]);
                                        });
                                    }
                                    function _(t, e, n, i, r, o, a) {
                                        var s,
                                            h,
                                            l = t < o ? 0 : (t - o) / r;
                                        for (s in e) e.hasOwnProperty(s) && ((h = "function" == typeof (h = a[s]) ? h : u[h]), (e[s] = k(n[s], i[s], h, l)));
                                        return e;
                                    }
                                    function k(t, e, n, i) {
                                        return t + (e - t) * n(i);
                                    }
                                    function T(e, n) {
                                        var i = O.prototype.filter,
                                            r = e._filterArgs;
                                        S(i, function (t) {
                                            void 0 !== i[t][n] && i[t][n].apply(e, r);
                                        });
                                    }
                                    function P(t, e, n, i, r, o, a, s, h, l, u) {
                                        (p = e + n + i),
                                            (c = Math.min(u || f(), p)),
                                            (d = p <= c),
                                            (p = i - (p - c)),
                                            t.isPlaying() &&
                                                (d
                                                    ? (h(a, t._attachment, p), t.stop(!0))
                                                    : ((t._scheduleId = l(t._timeoutHandler, 1e3 / 60)), T(t, "beforeTween"), c < e + n ? _(1, r, o, a, 1, 1, s) : _(c, r, o, a, i, e + n, s), T(t, "afterTween"), h(r, t._attachment, p)));
                                    }
                                    function C(t, e) {
                                        var n = {},
                                            i = typeof e;
                                        return (
                                            S(
                                                t,
                                                "string" == i || "function" == i
                                                    ? function (t) {
                                                          n[t] = e;
                                                      }
                                                    : function (t) {
                                                          n[t] || (n[t] = e[t] || "linear");
                                                      }
                                            ),
                                            n
                                        );
                                    }
                                    function O(t, e) {
                                        (this._currentState = t || {}), (this._configured = !1), (this._scheduleFunction = n), void 0 !== e && this.setConfig(e);
                                    }
                                    function F(t, e, n, i, r, o) {
                                        var h = 0,
                                            l = 0,
                                            u = 0,
                                            a = 0,
                                            s = 0,
                                            c = 0;
                                        function d(t) {
                                            return ((h * t + l) * t + u) * t;
                                        }
                                        function p(t) {
                                            return 0 <= t ? t : 0 - t;
                                        }
                                        return (
                                            (h = 1 - (u = 3 * e) - (l = 3 * (i - e) - u)),
                                            (a = 1 - (c = 3 * n) - (s = 3 * (r - n) - c)),
                                            (i = (function (t, e) {
                                                var n, i, r, o, a, s;
                                                for (r = t, s = 0; s < 8; s++) {
                                                    if (p((o = d(r) - t)) < e) return r;
                                                    if (
                                                        p(
                                                            (a = (function (t) {
                                                                return (3 * h * t + 2 * l) * t + u;
                                                            })(r))
                                                        ) < 1e-6
                                                    )
                                                        break;
                                                    r -= o / a;
                                                }
                                                if (((i = 1), (r = t) < (n = 0))) return n;
                                                if (i < r) return i;
                                                for (; n < i; ) {
                                                    if (p((o = d(r)) - t) < e) return r;
                                                    o < t ? (n = r) : (i = r), (r = 0.5 * (i - n) + n);
                                                }
                                                return r;
                                            })((i = t), 1 / (200 * o))),
                                            ((a * i + s) * i + c) * i
                                        );
                                    }
                                    function D(n) {
                                        l.each(n, function (t) {
                                            var e = n[t];
                                            "string" == typeof e && e.match(i) && (n[t] = E(i, e, R));
                                        });
                                    }
                                    function R(t) {
                                        t = (function (t) {
                                            3 === (t = t.replace(/#/, "")).length && (t = (t = t.split(""))[0] + t[0] + t[1] + t[1] + t[2] + t[2]);
                                            return (e[0] = M(t.substr(0, 2))), (e[1] = M(t.substr(2, 2))), (e[2] = M(t.substr(4, 2))), e;
                                        })(t);
                                        return "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")";
                                    }
                                    function M(t) {
                                        return parseInt(t, 16);
                                    }
                                    function E(t, e, n) {
                                        var i = e.match(t),
                                            r = e.replace(t, g);
                                        if (i) for (var o, a = i.length, s = 0; s < a; s++) (o = i.shift()), (r = r.replace(g, n(o)));
                                        return r;
                                    }
                                    function N(t) {
                                        for (var e = t.match(o), n = e.length, i = t.match(m)[0], r = 0; r < n; r++) i += parseInt(e[r], 10) + ",";
                                        return (i = i.slice(0, -1) + ")");
                                    }
                                    function j(r) {
                                        var o = {};
                                        return (
                                            l.each(r, function (t) {
                                                var e,
                                                    n,
                                                    i = r[t];
                                                "string" == typeof i &&
                                                    ((e = L(i)),
                                                    (o[t] = {
                                                        formatString: ((n = (i = i).match(h)) ? (1 !== n.length && !i.charAt(0).match(a)) || n.unshift("") : (n = ["", ""]), n.join(g)),
                                                        chunkNames: (function (t, e) {
                                                            for (var n = [], i = t.length, r = 0; r < i; r++) n.push("_" + e + "_" + r);
                                                            return n;
                                                        })(e, t),
                                                    }));
                                            }),
                                            o
                                        );
                                    }
                                    function I(r, o) {
                                        l.each(o, function (t) {
                                            for (var e = L(r[t]), n = e.length, i = 0; i < n; i++) r[o[t].chunkNames[i]] = +e[i];
                                            delete r[t];
                                        });
                                    }
                                    function B(n, i) {
                                        l.each(i, function (t) {
                                            n[t];
                                            var e = (function (t, e) {
                                                    y.length = 0;
                                                    for (var n = e.length, i = 0; i < n; i++) y.push(t[e[i]]);
                                                    return y;
                                                })(
                                                    (function (t, e) {
                                                        for (var n, i = {}, r = e.length, o = 0; o < r; o++) (n = e[o]), (i[n] = t[n]), delete t[n];
                                                        return i;
                                                    })(n, i[t].chunkNames),
                                                    i[t].chunkNames
                                                ),
                                                e = (function (t, e) {
                                                    for (var n = t, i = e.length, r = 0; r < i; r++) n = n.replace(g, +e[r].toFixed(4));
                                                    return n;
                                                })(i[t].formatString, e);
                                            n[t] = E(r, e, N);
                                        });
                                    }
                                    function L(t) {
                                        return t.match(o);
                                    }
                                    w.shallowCopy(w.prototype.formula, {
                                        easeInQuad: function (t) {
                                            return Math.pow(t, 2);
                                        },
                                        easeOutQuad: function (t) {
                                            return -(Math.pow(t - 1, 2) - 1);
                                        },
                                        easeInOutQuad: function (t) {
                                            return (t /= 0.5) < 1 ? 0.5 * Math.pow(t, 2) : -0.5 * ((t -= 2) * t - 2);
                                        },
                                        easeInCubic: function (t) {
                                            return Math.pow(t, 3);
                                        },
                                        easeOutCubic: function (t) {
                                            return Math.pow(t - 1, 3) + 1;
                                        },
                                        easeInOutCubic: function (t) {
                                            return (t /= 0.5) < 1 ? 0.5 * Math.pow(t, 3) : 0.5 * (Math.pow(t - 2, 3) + 2);
                                        },
                                        easeInQuart: function (t) {
                                            return Math.pow(t, 4);
                                        },
                                        easeOutQuart: function (t) {
                                            return -(Math.pow(t - 1, 4) - 1);
                                        },
                                        easeInOutQuart: function (t) {
                                            return (t /= 0.5) < 1 ? 0.5 * Math.pow(t, 4) : -0.5 * ((t -= 2) * Math.pow(t, 3) - 2);
                                        },
                                        easeInQuint: function (t) {
                                            return Math.pow(t, 5);
                                        },
                                        easeOutQuint: function (t) {
                                            return Math.pow(t - 1, 5) + 1;
                                        },
                                        easeInOutQuint: function (t) {
                                            return (t /= 0.5) < 1 ? 0.5 * Math.pow(t, 5) : 0.5 * (Math.pow(t - 2, 5) + 2);
                                        },
                                        easeInSine: function (t) {
                                            return 1 - Math.cos(t * (Math.PI / 2));
                                        },
                                        easeOutSine: function (t) {
                                            return Math.sin(t * (Math.PI / 2));
                                        },
                                        easeInOutSine: function (t) {
                                            return -0.5 * (Math.cos(Math.PI * t) - 1);
                                        },
                                        easeInExpo: function (t) {
                                            return 0 === t ? 0 : Math.pow(2, 10 * (t - 1));
                                        },
                                        easeOutExpo: function (t) {
                                            return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
                                        },
                                        easeInOutExpo: function (t) {
                                            return 0 === t ? 0 : 1 === t ? 1 : (t /= 0.5) < 1 ? 0.5 * Math.pow(2, 10 * (t - 1)) : 0.5 * (2 - Math.pow(2, -10 * --t));
                                        },
                                        easeInCirc: function (t) {
                                            return -(Math.sqrt(1 - t * t) - 1);
                                        },
                                        easeOutCirc: function (t) {
                                            return Math.sqrt(1 - Math.pow(t - 1, 2));
                                        },
                                        easeInOutCirc: function (t) {
                                            return (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
                                        },
                                        easeOutBounce: function (t) {
                                            return t < 1 / 2.75
                                                ? 7.5625 * t * t
                                                : t < 2 / 2.75
                                                ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
                                                : t < 2.5 / 2.75
                                                ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
                                                : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
                                        },
                                        easeInBack: function (t) {
                                            return t * t * (2.70158 * t - 1.70158);
                                        },
                                        easeOutBack: function (t) {
                                            return (t -= 1) * t * (2.70158 * t + 1.70158) + 1;
                                        },
                                        easeInOutBack: function (t) {
                                            var e = 1.70158;
                                            return (t /= 0.5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5 : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);
                                        },
                                        elastic: function (t) {
                                            return -1 * Math.pow(4, -8 * t) * Math.sin(((6 * t - 1) * (2 * Math.PI)) / 2) + 1;
                                        },
                                        swingFromTo: function (t) {
                                            var e = 1.70158;
                                            return (t /= 0.5) < 1 ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5 : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);
                                        },
                                        swingFrom: function (t) {
                                            return t * t * (2.70158 * t - 1.70158);
                                        },
                                        swingTo: function (t) {
                                            return --t * t * (2.70158 * t + 1.70158) + 1;
                                        },
                                        bounce: function (t) {
                                            return t < 1 / 2.75
                                                ? 7.5625 * t * t
                                                : t < 2 / 2.75
                                                ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
                                                : t < 2.5 / 2.75
                                                ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
                                                : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;
                                        },
                                        bouncePast: function (t) {
                                            return t < 1 / 2.75
                                                ? 7.5625 * t * t
                                                : t < 2 / 2.75
                                                ? 2 - (7.5625 * (t -= 1.5 / 2.75) * t + 0.75)
                                                : t < 2.5 / 2.75
                                                ? 2 - (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375)
                                                : 2 - (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);
                                        },
                                        easeFromTo: function (t) {
                                            return (t /= 0.5) < 1 ? 0.5 * Math.pow(t, 4) : -0.5 * ((t -= 2) * Math.pow(t, 3) - 2);
                                        },
                                        easeFrom: function (t) {
                                            return Math.pow(t, 4);
                                        },
                                        easeTo: function (t) {
                                            return Math.pow(t, 0.25);
                                        },
                                    }),
                                        (w.setBezierFunction = function (t, e, n, i, r) {
                                            (o = e), (a = n), (s = i), (h = r);
                                            var o,
                                                a,
                                                s,
                                                h,
                                                l = function (t) {
                                                    return F(t, o, a, s, h, 1);
                                                };
                                            return (l.displayName = t), (l.x1 = e), (l.y1 = n), (l.x2 = i), (l.y2 = r), (w.prototype.formula[t] = l);
                                        }),
                                        (w.unsetBezierFunction = function (t) {
                                            delete w.prototype.formula[t];
                                        }),
                                        ((s = new w())._filterArgs = []),
                                        (w.interpolate = function (t, e, n, i, r) {
                                            var o = w.shallowCopy({}, t),
                                                r = r || 0,
                                                i = w.composeEasingObject(t, i || "linear"),
                                                a = (s.set({}), s._filterArgs),
                                                a = ((a.length = 0), (a[0] = o), (a[1] = t), (a[2] = e), (a[3] = i), w.applyFilter(s, "tweenCreated"), w.applyFilter(s, "beforeTween"), w.tweenProps(n, o, t, e, 1, r, i));
                                            return w.applyFilter(s, "afterTween"), a;
                                        }),
                                        (l = w),
                                        (a = /(\d|\-|\.)/),
                                        (h = /([^\-0-9\.]+)/g),
                                        (o = /[0-9.\-]+/g),
                                        (r = new RegExp("rgb\\(" + o.source + /,\s*/.source + o.source + /,\s*/.source + o.source + "\\)", "g")),
                                        (m = /^.*\(/),
                                        (i = /#([0-9]|[a-f]){3,6}/gi),
                                        (g = "VAL"),
                                        (e = []),
                                        (y = []),
                                        (l.prototype.filter.token = {
                                            tweenCreated: function (t, e, n, i) {
                                                D(t), D(e), D(n), (this._tokenData = j(t));
                                            },
                                            beforeTween: function (t, e, n, i) {
                                                var s, h;
                                                (s = i),
                                                    (h = this._tokenData),
                                                    l.each(h, function (t) {
                                                        var e = h[t].chunkNames,
                                                            n = e.length,
                                                            i = s[t];
                                                        if ("string" == typeof i) for (var r = i.split(" "), o = r[r.length - 1], a = 0; a < n; a++) s[e[a]] = r[a] || o;
                                                        else for (a = 0; a < n; a++) s[e[a]] = i;
                                                        delete s[t];
                                                    }),
                                                    I(t, this._tokenData),
                                                    I(e, this._tokenData),
                                                    I(n, this._tokenData);
                                            },
                                            afterTween: function (t, e, n, i) {
                                                var a, s;
                                                B(t, this._tokenData),
                                                    B(e, this._tokenData),
                                                    B(n, this._tokenData),
                                                    (a = i),
                                                    (s = this._tokenData),
                                                    l.each(s, function (t) {
                                                        var e = s[t].chunkNames,
                                                            n = e.length,
                                                            i = a[e[0]];
                                                        if ("string" == typeof i) {
                                                            for (var r = "", o = 0; o < n; o++) (r += " " + a[e[o]]), delete a[e[o]];
                                                            a[t] = r.substr(1);
                                                        } else a[t] = i;
                                                    });
                                            },
                                        });
                                }.call(null);
                            },
                            {},
                        ],
                        2: [
                            function (t, e, n) {
                                function i(t, e) {
                                    (this._pathTemplate = "M 50,50 m 0,-{radius} a {radius},{radius} 0 1 1 0,{2radius} a {radius},{radius} 0 1 1 0,-{2radius}"), (this.containerAspectRatio = 1), r.apply(this, arguments);
                                }
                                var r = t("./shape"),
                                    o = t("./utils");
                                (((i.prototype = new r()).constructor = i).prototype._pathString = function (t) {
                                    var e = t.strokeWidth,
                                        t = 50 - (e = t.trailWidth && t.trailWidth > t.strokeWidth ? t.trailWidth : e) / 2;
                                    return o.render(this._pathTemplate, { radius: t, "2radius": 2 * t });
                                }),
                                    (i.prototype._trailString = function (t) {
                                        return this._pathString(t);
                                    }),
                                    (e.exports = i);
                            },
                            { "./shape": 7, "./utils": 9 },
                        ],
                        3: [
                            function (t, e, n) {
                                function i(t, e) {
                                    (this._pathTemplate = "M 0,{center} L 100,{center}"), r.apply(this, arguments);
                                }
                                var r = t("./shape"),
                                    o = t("./utils");
                                (((i.prototype = new r()).constructor = i).prototype._initializeSvg = function (t, e) {
                                    t.setAttribute("viewBox", "0 0 100 " + e.strokeWidth), t.setAttribute("preserveAspectRatio", "none");
                                }),
                                    (i.prototype._pathString = function (t) {
                                        return o.render(this._pathTemplate, { center: t.strokeWidth / 2 });
                                    }),
                                    (i.prototype._trailString = function (t) {
                                        return this._pathString(t);
                                    }),
                                    (e.exports = i);
                            },
                            { "./shape": 7, "./utils": 9 },
                        ],
                        4: [
                            function (t, e, n) {
                                e.exports = { Line: t("./line"), Circle: t("./circle"), SemiCircle: t("./semicircle"), Square: t("./square"), Path: t("./path"), Shape: t("./shape"), utils: t("./utils") };
                            },
                            { "./circle": 2, "./line": 3, "./path": 5, "./semicircle": 6, "./shape": 7, "./square": 8, "./utils": 9 },
                        ],
                        5: [
                            function (t, e, n) {
                                function i(t, e) {
                                    if (!(this instanceof i)) throw new Error("Constructor was called without new keyword");
                                    (e = h.extend({ duration: 800, easing: "linear", from: {}, to: {}, step: function () {} }, e)),
                                        (t = h.isString(t) ? document.querySelector(t) : t),
                                        (this.path = t),
                                        (this._opts = e),
                                        (this._tweenable = null),
                                        (t = this.path.getTotalLength()),
                                        (this.path.style.strokeDasharray = t + " " + t),
                                        this.set(0);
                                }
                                var s = t("shifty"),
                                    h = t("./utils"),
                                    r = { easeIn: "easeInCubic", easeOut: "easeOutCubic", easeInOut: "easeInOutCubic" };
                                (i.prototype.value = function () {
                                    var t = this._getComputedDashOffset(),
                                        e = this.path.getTotalLength();
                                    return parseFloat((1 - t / e).toFixed(6), 10);
                                }),
                                    (i.prototype.set = function (t) {
                                        this.stop(), (this.path.style.strokeDashoffset = this._progressToOffset(t));
                                        var e,
                                            n = this._opts.step;
                                        h.isFunction(n) && ((e = this._easing(this._opts.easing)), n(this._calculateTo(t, e), this._opts.shape || this, this._opts.attachment));
                                    }),
                                    (i.prototype.stop = function () {
                                        this._stopTween(), (this.path.style.strokeDashoffset = this._getComputedDashOffset());
                                    }),
                                    (i.prototype.animate = function (t, n, e) {
                                        (n = n || {}), h.isFunction(n) && ((e = n), (n = {}));
                                        var i = h.extend({}, n),
                                            r = h.extend({}, this._opts),
                                            r = ((n = h.extend(r, n)), this._easing(n.easing)),
                                            i = this._resolveFromAndTo(t, r, i),
                                            o = (this.stop(), this.path.getBoundingClientRect(), this._getComputedDashOffset()),
                                            t = this._progressToOffset(t),
                                            a = this;
                                        (this._tweenable = new s()),
                                            this._tweenable.tween({
                                                from: h.extend({ offset: o }, i.from),
                                                to: h.extend({ offset: t }, i.to),
                                                duration: n.duration,
                                                easing: r,
                                                step: function (t) {
                                                    a.path.style.strokeDashoffset = t.offset;
                                                    var e = n.shape || a;
                                                    n.step(t, e, n.attachment);
                                                },
                                                finish: function (t) {
                                                    h.isFunction(e) && e();
                                                },
                                            });
                                    }),
                                    (i.prototype._getComputedDashOffset = function () {
                                        var t = window.getComputedStyle(this.path, null);
                                        return parseFloat(t.getPropertyValue("stroke-dashoffset"), 10);
                                    }),
                                    (i.prototype._progressToOffset = function (t) {
                                        var e = this.path.getTotalLength();
                                        return e - t * e;
                                    }),
                                    (i.prototype._resolveFromAndTo = function (t, e, n) {
                                        return n.from && n.to ? { from: n.from, to: n.to } : { from: this._calculateFrom(e), to: this._calculateTo(t, e) };
                                    }),
                                    (i.prototype._calculateFrom = function (t) {
                                        return s.interpolate(this._opts.from, this._opts.to, this.value(), t);
                                    }),
                                    (i.prototype._calculateTo = function (t, e) {
                                        return s.interpolate(this._opts.from, this._opts.to, t, e);
                                    }),
                                    (i.prototype._stopTween = function () {
                                        null !== this._tweenable && (this._tweenable.stop(), (this._tweenable = null));
                                    }),
                                    (i.prototype._easing = function (t) {
                                        return r.hasOwnProperty(t) ? r[t] : t;
                                    }),
                                    (e.exports = i);
                            },
                            { "./utils": 9, shifty: 1 },
                        ],
                        6: [
                            function (t, e, n) {
                                function i(t, e) {
                                    (this._pathTemplate = "M 50,50 m -{radius},0 a {radius},{radius} 0 1 1 {2radius},0"), (this.containerAspectRatio = 2), r.apply(this, arguments);
                                }
                                var r = t("./shape"),
                                    o = t("./circle"),
                                    a = t("./utils");
                                (((i.prototype = new r()).constructor = i).prototype._initializeSvg = function (t, e) {
                                    t.setAttribute("viewBox", "0 0 100 50");
                                }),
                                    (i.prototype._initializeTextContainer = function (t, e, n) {
                                        t.text.style && ((n.style.top = "auto"), (n.style.bottom = "0"), t.text.alignToBottom ? a.setStyle(n, "transform", "translate(-50%, 0)") : a.setStyle(n, "transform", "translate(-50%, 50%)"));
                                    }),
                                    (i.prototype._pathString = o.prototype._pathString),
                                    (i.prototype._trailString = o.prototype._trailString),
                                    (e.exports = i);
                            },
                            { "./circle": 2, "./shape": 7, "./utils": 9 },
                        ],
                        7: [
                            function (t, e, n) {
                                function i(t, e) {
                                    if (!(this instanceof i)) throw new Error("Constructor was called without new keyword");
                                    if (0 !== arguments.length) {
                                        (this._opts = o.extend(
                                            {
                                                color: "#555",
                                                strokeWidth: 1,
                                                trailColor: null,
                                                trailWidth: null,
                                                fill: null,
                                                text: {
                                                    style: { color: null, position: "absolute", left: "50%", top: "50%", padding: 0, margin: 0, transform: { prefix: !0, value: "translate(-50%, -50%)" } },
                                                    autoStyleContainer: !0,
                                                    alignToBottom: !0,
                                                    value: null,
                                                    className: "progressbar-text",
                                                },
                                                svgStyle: { display: "block", width: "100%" },
                                                warnings: !1,
                                            },
                                            e,
                                            !0
                                        )),
                                            o.isObject(e) && void 0 !== e.svgStyle && (this._opts.svgStyle = e.svgStyle),
                                            o.isObject(e) && o.isObject(e.text) && void 0 !== e.text.style && (this._opts.text.style = e.text.style);
                                        var e = this._createSvgView(this._opts),
                                            n = o.isString(t) ? document.querySelector(t) : t;
                                        if (!n) throw new Error("Container does not exist: " + t);
                                        (this._container = n),
                                            this._container.appendChild(e.svg),
                                            this._opts.warnings && this._warnContainerAspectRatio(this._container),
                                            this._opts.svgStyle && o.setStyles(e.svg, this._opts.svgStyle),
                                            (this.svg = e.svg),
                                            (this.path = e.path),
                                            (this.trail = e.trail),
                                            (this.text = null);
                                        t = o.extend({ attachment: void 0, shape: this }, this._opts);
                                        (this._progressPath = new r(e.path, t)), o.isObject(this._opts.text) && null !== this._opts.text.value && this.setText(this._opts.text.value);
                                    }
                                }
                                var r = t("./path"),
                                    o = t("./utils"),
                                    a = "Object is destroyed";
                                (i.prototype.animate = function (t, e, n) {
                                    if (null === this._progressPath) throw new Error(a);
                                    this._progressPath.animate(t, e, n);
                                }),
                                    (i.prototype.stop = function () {
                                        if (null === this._progressPath) throw new Error(a);
                                        void 0 !== this._progressPath && this._progressPath.stop();
                                    }),
                                    (i.prototype.destroy = function () {
                                        if (null === this._progressPath) throw new Error(a);
                                        this.stop(),
                                            this.svg.parentNode.removeChild(this.svg),
                                            (this.svg = null),
                                            (this.path = null),
                                            (this.trail = null),
                                            (this._progressPath = null) !== this.text && (this.text.parentNode.removeChild(this.text), (this.text = null));
                                    }),
                                    (i.prototype.set = function (t) {
                                        if (null === this._progressPath) throw new Error(a);
                                        this._progressPath.set(t);
                                    }),
                                    (i.prototype.value = function () {
                                        if (null === this._progressPath) throw new Error(a);
                                        return void 0 === this._progressPath ? 0 : this._progressPath.value();
                                    }),
                                    (i.prototype.setText = function (t) {
                                        if (null === this._progressPath) throw new Error(a);
                                        null === this.text && ((this.text = this._createTextContainer(this._opts, this._container)), this._container.appendChild(this.text)),
                                            o.isObject(t) ? (o.removeChildren(this.text), this.text.appendChild(t)) : (this.text.innerHTML = t);
                                    }),
                                    (i.prototype._createSvgView = function (t) {
                                        var e = document.createElementNS("http://www.w3.org/2000/svg", "svg"),
                                            n = (this._initializeSvg(e, t), null),
                                            t = ((t.trailColor || t.trailWidth) && ((n = this._createTrail(t)), e.appendChild(n)), this._createPath(t));
                                        return e.appendChild(t), { svg: e, path: t, trail: n };
                                    }),
                                    (i.prototype._initializeSvg = function (t, e) {
                                        t.setAttribute("viewBox", "0 0 100 100");
                                    }),
                                    (i.prototype._createPath = function (t) {
                                        var e = this._pathString(t);
                                        return this._createPathElement(e, t);
                                    }),
                                    (i.prototype._createTrail = function (t) {
                                        var e = this._trailString(t),
                                            t = o.extend({}, t);
                                        return (
                                            t.trailColor || (t.trailColor = "#eee"), t.trailWidth || (t.trailWidth = t.strokeWidth), (t.color = t.trailColor), (t.strokeWidth = t.trailWidth), (t.fill = null), this._createPathElement(e, t)
                                        );
                                    }),
                                    (i.prototype._createPathElement = function (t, e) {
                                        var n = document.createElementNS("http://www.w3.org/2000/svg", "path");
                                        return n.setAttribute("d", t), n.setAttribute("stroke", e.color), n.setAttribute("stroke-width", e.strokeWidth), e.fill ? n.setAttribute("fill", e.fill) : n.setAttribute("fill-opacity", "0"), n;
                                    }),
                                    (i.prototype._createTextContainer = function (t, e) {
                                        var n = document.createElement("div"),
                                            i = ((n.className = t.text.className), t.text.style);
                                        return i && (t.text.autoStyleContainer && (e.style.position = "relative"), o.setStyles(n, i), i.color || (n.style.color = t.color)), this._initializeTextContainer(t, e, n), n;
                                    }),
                                    (i.prototype._initializeTextContainer = function (t, e, n) {}),
                                    (i.prototype._pathString = function (t) {
                                        throw new Error("Override this function for each progress bar");
                                    }),
                                    (i.prototype._trailString = function (t) {
                                        throw new Error("Override this function for each progress bar");
                                    }),
                                    (i.prototype._warnContainerAspectRatio = function (t) {
                                        var e;
                                        this.containerAspectRatio &&
                                            ((t = window.getComputedStyle(t, null)), (e = parseFloat(t.getPropertyValue("width"), 10)), (t = parseFloat(t.getPropertyValue("height"), 10)), o.floatEquals(this.containerAspectRatio, e / t));
                                    }),
                                    (e.exports = i);
                            },
                            { "./path": 5, "./utils": 9 },
                        ],
                        8: [
                            function (t, e, n) {
                                function i(t, e) {
                                    (this._pathTemplate = "M 0,{halfOfStrokeWidth} L {width},{halfOfStrokeWidth} L {width},{width} L {halfOfStrokeWidth},{width} L {halfOfStrokeWidth},{strokeWidth}"),
                                        (this._trailTemplate = "M {startMargin},{halfOfStrokeWidth} L {width},{halfOfStrokeWidth} L {width},{width} L {halfOfStrokeWidth},{width} L {halfOfStrokeWidth},{halfOfStrokeWidth}"),
                                        r.apply(this, arguments);
                                }
                                var r = t("./shape"),
                                    o = t("./utils");
                                (((i.prototype = new r()).constructor = i).prototype._pathString = function (t) {
                                    var e = 100 - t.strokeWidth / 2;
                                    return o.render(this._pathTemplate, { width: e, strokeWidth: t.strokeWidth, halfOfStrokeWidth: t.strokeWidth / 2 });
                                }),
                                    (i.prototype._trailString = function (t) {
                                        var e = 100 - t.strokeWidth / 2;
                                        return o.render(this._trailTemplate, { width: e, strokeWidth: t.strokeWidth, halfOfStrokeWidth: t.strokeWidth / 2, startMargin: t.strokeWidth / 2 - t.trailWidth / 2 });
                                    }),
                                    (e.exports = i);
                            },
                            { "./shape": 7, "./utils": 9 },
                        ],
                        9: [
                            function (t, e, n) {
                                var o = "Webkit Moz O ms".split(" ");
                                function i(t, e, n) {
                                    for (var i = t.style, r = 0; r < o.length; ++r) i[o[r] + a(e)] = n;
                                    i[e] = n;
                                }
                                function a(t) {
                                    return t.charAt(0).toUpperCase() + t.slice(1);
                                }
                                function s(t) {
                                    return "[object Array]" !== Object.prototype.toString.call(t) && "object" == typeof t && !!t;
                                }
                                function r(t, e) {
                                    for (var n in t) t.hasOwnProperty(n) && e(t[n], n);
                                }
                                e.exports = {
                                    extend: function t(e, n, i) {
                                        for (var r in ((e = e || {}), (i = i || !1), (n = n || {}))) {
                                            var o, a;
                                            n.hasOwnProperty(r) && ((o = e[r]), (a = n[r]), i && s(o) && s(a) ? (e[r] = t(o, a, i)) : (e[r] = a));
                                        }
                                        return e;
                                    },
                                    render: function (t, e) {
                                        var n,
                                            i,
                                            r,
                                            o = t;
                                        for (n in e) e.hasOwnProperty(n) && ((i = e[n]), (r = new RegExp("\\{" + n + "\\}", "g")), (o = o.replace(r, i)));
                                        return o;
                                    },
                                    setStyle: i,
                                    setStyles: function (n, t) {
                                        r(t, function (t, e) {
                                            null != t && (s(t) && !0 === t.prefix ? i(n, e, t.value) : (n.style[e] = t));
                                        });
                                    },
                                    capitalize: a,
                                    isString: function (t) {
                                        return "string" == typeof t || t instanceof String;
                                    },
                                    isFunction: function (t) {
                                        return "function" == typeof t;
                                    },
                                    isObject: s,
                                    forEachObject: r,
                                    floatEquals: function (t, e) {
                                        return Math.abs(t - e) < 0.001;
                                    },
                                    removeChildren: function (t) {
                                        for (; t.firstChild; ) t.removeChild(t.firstChild);
                                    },
                                };
                            },
                            {},
                        ],
                    },
                    {},
                    [4]
                )(4);
            });
            (C.getInstance = function (t) {
                if (!C.instance) {
                    if (!t) throw new Error("Can not create new SplashLoader instance without options!");
                    C.instance = new C(t);
                }
                return C.instance;
            }),
                (C.prototype.create = function () {
                    return l(this, void 0, void 0, function () {
                        var i, r, o, a;
                        return u(this, function (t) {
                            switch (t.label) {
                                case 0:
                                    return (
                                        _.showBuildInfo(window.location.search),
                                        (r =
                                            "\n        #h5branding-center {\n            position: absolute;\n            top: 45%;\n            left: 50%;\n            transform: translate(-50%, -20%);\n            text-align: center;\n            width: 100%;\n        }\n        #h5branding-wrapper {\n            position: relative;\n            z-index: 665;\n            width: 150px;\n            height: 150px;\n            display:inline-block;\n            margin: 35px 40px 96px 40px;\n        }\n\n        #h5branding-version {\n            position: absolute;\n            right: 10px;\n            font-family: Helvetica, Arial, sans-serif;\n            color: #ffffff;\n            font-size: 0.8em;\n            top: 10px;\n            display: none;\n        }\n\n        #h5branding-wrapper > #h5branding-bar, #h5branding-wrapper > img {\n            box-shadow: inset 10px 10px 20px 5px rgba(0, 0, 0, 0.5);\n            border-radius: 50%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n        }\n\n        #h5branding-ad {\n            position: relative;\n            z-index: 667;\n            border-radius: 5px;\n            border: 3px solid white;\n            background: rgba(256, 256, 256, 0.2);\n            width: 336px;\n            height: 280px;\n            display: none;\n            margin: 0px 10px 0px 10px;\n        }\n\n        #h5branding-wrapper > img {\n            /* Needs appropriate vendor prefixes */\n            box-sizing: border-box;\n\n            /* This needs to be equal to strokeWidth */\n            padding: 4%;\n        }\n\n        #h5branding-wrapper > img {\n            border-radius: 50%;\n            box-shadow: inset 0 5px 5px rgba(0, 0, 0, 0.5), 5px 5px 7px rgba(0, 0, 0, 0.3);\n        }\n\n        #h5branding-container {\n            box-sizing: border-box;\n            position: absolute;\n            z-index: 664;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: #006099;\n            overflow: hidden;\n        }\n\n        #h5branding-background {\n            position: absolute;\n            top: -25%;\n            left: -25%;\n            width: 150%;\n            height: 150%;\n            background-size: cover;\n            filter: blur(40px) brightness(1.5);\n        }\n\n        @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n             /* IE10+ CSS styles go here */\n             #h5branding-background {\n                background-image: none !important;\n             }\n        }\n\n        #h5branding-logo {\n            position: absolute;\n            margin: 0 auto;\n            left: 0;\n            right: 0;\n            text-align: center;\n            top: 10%;\n        }\n\n        #h5branding-logo > img {\n            height: 150px;\n        }\n\n        #h5branding-title {\n            position: absolute;\n            width: 100%;\n            background: linear-gradient(90deg, transparent, rgba(0, 0, 0, 0.5) 50%, transparent);\n            color: #fff;\n            text-shadow: 0 0 1px rgba(0, 0, 0, 0.7);\n            bottom:10%;\n            padding: 15px 0;\n            text-align: center;\n            font-size: 18px;\n            font-family: Helvetica, Arial, sans-serif;\n            font-weight: bold;\n            line-height: 100%;\n        }\n\n        #h5branding-button {\n            /* border: 0; */\n            padding: 10px 22px;\n            border-radius: 5px;\n            border: 3px solid white;\n            background: linear-gradient(0deg, #dddddd, #ffffff);\n            color: #222;\n            text-transform: uppercase;\n            text-shadow: 0 0 1px #fff;\n            font-family: Helvetica, Arial, sans-serif;\n            font-weight: bold;\n            font-size: 18px;\n            cursor: pointer;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n            display: none;\n            width: 150px;\n            position: absolute;\n            top: 170px;\n            margin: 0 auto;\n            left: 0;\n            right: 0;\n        }\n\n        @media (orientation: portrait) and (max-width: 1080px) {\n            #h5branding-logo > img {\n                height: initial;\n                width:100%;\n            }\n        }\n\n        @media (orientation: landscape) and (max-height: 640px) {\n            #h5branding-title {\n                display: none;\n            }\n\n            #h5branding-logo > img {\n                height: 100px;\n            }\n        }\n\n        @media (orientation: landscape) and (max-height: 460px) {\n        /*This fix is for is for iPhone 13*/\n            #h5branding-title {\n                display: block;\n                bottom: 5%;\n            }\n\n            #h5branding-wrapper {\n                width: 110px;\n                height: 110px;\n                margin: 0;\n                transform: scale(0.8, 0.8);\n            }\n\n            #h5branding-logo {\n                top: 0;\n                transform: scale(0.5, 0.5);\n            }\n\n            #h5branding-button {\n                top: initial;\n                width: 110px;\n                position: absolute;\n                top: 140px;\n                left: 0;\n                right: 0;\n            }\n\n            #h5branding-ad {\n               display: none !important;\n            }\n\n            #h5branding-center {\n                transform: translate(-50%, -50%);\n            }\n        }\n\n        @media (orientation: portrait) and (max-width: 250px) {\n            #h5branding-logo {\n                top: 2%;\n            }\n        }\n\n        @media (orientation: landscape) and (max-width: 330px) {\n             #h5branding-button {\n                top: 120px;\n            }\n\n            #h5branding-logo > img {\n                height: 70px;\n            }\n        }\n\n        @media (max-width: 600px) and (max-height: 850px) {\n            #h5branding-ad {\n               display: none !important;\n            }\n        }\n\n        @media (max-width: 600px) and (max-height: 1100px) {\n            #h5branding-center {\n                top: 40%;\n            }\n\n            #h5branding-title {\n               bottom: 5%\n            }\n        }\n\n        @media (max-width: 600px) and (max-height: 900px) {\n        /*This fix is for is for iPhone*/\n            #h5branding-title {\n               display: block\n            }\n        }\n\n        @media (orientation: landscape) and (min-width: 800px) {\n            #h5branding-wrapper {\n                margin-left: 120px;\n                margin-right: 120px;\n            }\n        }\n\n        "),
                                        (e = this.getGameLogoUrl()),
                                        (n = this.options.gameTitle),
                                        (i = '\n        <div id="h5branding-background"></div>\n        <div id="h5branding-version"></div>\n        <div id="h5branding-logo"></div>\n        <div id="h5branding-center">\n            <div id="h5branding-ad"></div>\n            <div id="h5branding-wrapper">\n                <img src="'
                                            .concat(
                                                e,
                                                '" />\n                <div id="h5branding-bar"></div>\n                <button id="h5branding-button" onclick="h5branding.SplashLoader.getInstance().onPlayButtonClick();">Play</button>\n            </div>\n        </div>\n        <div id="h5branding-title">'
                                            )
                                            .concat(n, "</div>\n    ")),
                                        (o = document.head || document.getElementsByTagName("head")[0]),
                                        ((a = document.createElement("style")).type = "text/css"),
                                        a.styleSheet ? (a.styleSheet.cssText = r) : a.appendChild(document.createTextNode(r)),
                                        o.appendChild(a),
                                        ((r = document.createElement("div")).innerHTML = i),
                                        (r.id = "h5branding-container"),
                                        (o = document.body || document.getElementsByTagName("body")[0]).insertBefore(r, o.firstChild),
                                        (this.circleLoader = new T.Circle("#h5branding-bar", { strokeWidth: 3, color: this.options.barColor })),
                                        (a = document.getElementById("h5branding-version")) && (a.innerHTML = this.options.version),
                                        [4, this.loadLibs()]
                                    );
                                case 1:
                                    return t.sent(), [4, A.loadHost()];
                                case 2:
                                    return t.sent(), [4, this.loadBranding()];
                                case 3:
                                    return t.sent(), (this.loaded = !0), [2];
                            }
                            var e, n;
                        });
                    });
                }),
                (C.prototype.loadBranding = function () {
                    return l(this, void 0, void 0, function () {
                        var e, n;
                        return u(this, function (t) {
                            switch (t.label) {
                                case 0:
                                    return [4, b.preload(Date.now().toString())];
                                case 1:
                                    return (
                                        t.sent(),
                                        (e = document.getElementById("h5branding-background")) && (e.style.backgroundColor = b.brandingBackgroundColor),
                                        (e = document.getElementById("h5branding-logo")) &&
                                            A.getBrandingDomain() !== o.BrandingDomain.Neutral &&
                                            (((n = document.createElement("img")).src = b.brandingLogoUrl.replace("_small", "")), e.appendChild(n)),
                                        [2]
                                    );
                            }
                        });
                    });
                }),
                (C.prototype.loadLibs = function () {
                    var n = this,
                        i = this.options.libs.map(function (t, e) {
                            return s.instance.loadScript(t, !0, function () {
                                n.setScriptloadProgress(i.length, e + 1);
                            });
                        });
                    return Promise.all(i);
                }),
                Object.defineProperty(C.prototype, "bannerAllowed", {
                    get: function () {
                        var t = document.body.clientWidth,
                            e = document.body.clientHeight;
                        return this.progress < 100 && !(e < t && e <= 460) && !(t < 600 && e < 850);
                    },
                    enumerable: !1,
                    configurable: !0,
                }),
                (C.prototype.showBanner = function () {
                    var t;
                    return this.bannerAllowed && (t = document.getElementById("h5branding-ad")) ? ((t.style.display = "inline-flex"), t) : null;
                }),
                (C.prototype.setScriptloadProgress = function (t, e) {
                    this.circleLoader.animate((0.3 * e) / t, null, function () {});
                }),
                (C.prototype.setLoadProgress = function (t) {
                    var e,
                        n = this;
                    this.loaded &&
                        (100 === (this.progress = t = 30 + 0.7 * t)
                            ? ((e = document.querySelector("#h5branding-button")),
                              this.circleLoader.animate(1, null, function () {
                                  !A.inGDGameZone() && e && !0 === n.showPlayButton ? (e.style.display = "block") : (!A.inGDGameZone() && !1 !== n.showPlayButton) || n.onPlayButtonClick();
                              }))
                            : this.circleLoader.animate(t / 100, null, function () {}));
                }),
                (C.prototype.setButtonCallback = function (t) {
                    this.buttonCallback = t;
                }),
                (C.prototype.onPlayButtonClick = function () {
                    this.buttonCallback && this.buttonCallback();
                }),
                (C.prototype.destroy = function () {
                    var t = document.querySelector("#h5branding-container");
                    null !== t && null !== t.parentNode && t.parentNode.removeChild(t);
                }),
                (C.prototype.getGameLogoUrl = function () {
                    return "assets/icon.jpeg";
                });
            var P = C;
            function C(t) {
                (this.circleLoader = null),
                    (this.loaded = !1),
                    (this.showPlayButton = "undefined" == typeof playBtn || playBtn),
                    (this.progress = 0),
                    (this.options = { gameId: "12346", gameTitle: "Place Holder", gameName: "place-holder", libs: [], version: "dev", barColor: "white", gaMeasurementId: "none" }),
                    (this.options.gameId = t.gameId),
                    (this.options.gameTitle = t.gameTitle),
                    (this.options.version = t.version),
                    (this.options.barColor = t.barColor || this.options.barColor),
                    (this.options.libs = t.libs),
                    (this.options.gaMeasurementId = t.gaMeasurementId);
            }
            (o.Branding = b), (o.DebugTools = _), (o.Domain = i), (o.Hosts = c), (o.SplashLoader = P), (o.Utils = A), Object.defineProperty(o, "__esModule", { value: !0 });
        }),
        (this && this.__extends) ||
            function (t, e) {
                function n() {
                    this.constructor = t;
                }
                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                t.prototype = null === e ? Object.create(e) : ((n.prototype = e.prototype), new n());
            }),
    spine =
        (!(function (t) {
            (n = Phaser.Plugin),
                __extends(i, n),
                (i.prototype.patchLoader = function () {
                    Object.defineProperty(Phaser.Loader, "cacheBuster", { value: null }),
                        (Phaser.Loader.prototype.transformUrl = function (t, e) {
                            return t ? (null !== this.cacheBuster && null === t.match(/^(data:)/) && (t += "?v=" + this.cacheBuster), t.match(/^(?:blob:|data:|http:\/\/|https:\/\/|\/\/)/) ? t : this.baseURL + e.path + t) : "";
                        });
                });
            var n,
                e = i;
            function i(t, e) {
                t = n.call(this, t, e) || this;
                return t.patchLoader(), t;
            }
            t.CacheBuster = e;
        })((PhaserCachebuster = PhaserCachebuster || {})),
        {
            radDeg: 180 / Math.PI,
            degRad: Math.PI / 180,
            Float32Array: "undefined" == typeof Float32Array ? Array : Float32Array,
            Uint32Array: "undefined" == typeof Uint32Array ? Array : Uint32Array,
            Uint16Array: "undefined" == typeof Uint16Array ? Array : Uint16Array,
        }),
    __extends =
        ((spine.temp = new spine.Float32Array(2)),
        (spine.BoneData = function (t, e) {
            (this.name = t), (this.parent = e);
        }),
        (spine.BoneData.prototype = { length: 0, x: 0, y: 0, rotation: 0, scaleX: 1, scaleY: 1, inheritScale: !0, inheritRotation: !0 }),
        (spine.BlendMode = { normal: 0, additive: 1, multiply: 2, screen: 3 }),
        (spine.SlotData = function (t, e) {
            (this.name = t), (this.boneData = e);
        }),
        (spine.SlotData.prototype = { r: 1, g: 1, b: 1, a: 1, attachmentName: null, blendMode: spine.BlendMode.normal }),
        (spine.IkConstraintData = function (t) {
            (this.name = t), (this.bones = []);
        }),
        (spine.IkConstraintData.prototype = { target: null, bendDirection: 1, mix: 1 }),
        (spine.TransformConstraintData = function (t) {
            this.name = t;
        }),
        (spine.TransformConstraintData.prototype = { bone: null, target: null, translateMix: 1, x: 0, y: 0 }),
        (spine.Bone = function (t, e, n) {
            (this.data = t), (this.skeleton = e), (this.parent = n), this.setToSetupPose();
        }),
        (spine.Bone.yDown = !1),
        (spine.Bone.prototype = {
            x: 0,
            y: 0,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            a: 0,
            b: 0,
            worldX: 0,
            c: 0,
            d: 0,
            worldY: 0,
            worldSignX: 1,
            worldSignY: 1,
            update: function () {
                this.updateWorldTransform(this.x, this.y, this.rotation, this.scaleX, this.scaleY);
            },
            updateWorldTransformWith: function () {
                this.updateWorldTransform(this.x, this.y, this.rotation, this.scaleX, this.scaleY);
            },
            updateWorldTransform: function (t, e, n, i, r) {
                (this.appliedRotation = n), (this.appliedScaleX = i), (this.appliedScaleY = r), (n *= spine.degRad);
                var o,
                    a = (m = Math.cos(n)) * i,
                    s = -(g = Math.sin(n)) * r,
                    h = g * i,
                    l = m * r,
                    u = this.parent;
                if (u) {
                    var c = u.a,
                        d = u.b,
                        p = u.c,
                        f = u.d;
                    if (
                        ((this.worldX = c * t + d * e + u.worldX),
                        (this.worldY = p * t + f * e + u.worldY),
                        (this.worldSignX = u.worldSignX * (i < 0 ? -1 : 1)),
                        (this.worldSignY = u.worldSignY * (r < 0 ? -1 : 1)),
                        this.data.inheritRotation && this.data.inheritScale)
                    )
                        (this.a = c * a + d * h), (this.b = c * s + d * l), (this.c = p * a + f * h), (this.d = p * s + f * l);
                    else {
                        if (this.data.inheritRotation) {
                            (p = d = 0), (f = c = 1);
                            do {
                                n = u.appliedRotation * spine.degRad;
                                var m,
                                    g,
                                    y = c * (m = Math.cos(n)) + d * (g = Math.sin(n)),
                                    d = c * -g + d * m,
                                    c = y;
                            } while (((y = p * m + f * g), (f = p * -g + f * m), (p = y), u.data.inheritRotation) && (u = u.parent));
                            (this.a = c * a + d * h), (this.b = c * s + d * l), (this.c = p * a + f * h), (this.d = p * s + f * l);
                        } else if (this.data.inheritScale) {
                            (p = d = 0), (f = c = 1);
                            do {
                                (n = u.appliedRotation * spine.degRad), (m = Math.cos(n)), (g = Math.sin(n));
                                var v = u.appliedScaleX,
                                    w = u.appliedScaleY,
                                    b = m * v,
                                    S = -g * w,
                                    A = g * v,
                                    w = m * w,
                                    y = c * b + d * A;
                            } while (
                                ((d = c * S + d * w),
                                (c = y),
                                (y = p * b + f * A),
                                (f = p * S + f * w),
                                (p = y),
                                v < 0 && (n = -n),
                                (y = c * (m = Math.cos(-n)) + d * (g = Math.sin(-n))),
                                (d = c * -g + d * m),
                                (c = y),
                                (y = p * m + f * g),
                                (f = p * -g + f * m),
                                (p = y),
                                u.data.inheritScale) &&
                                (u = u.parent)
                            );
                            (this.a = c * a + d * h), (this.b = c * s + d * l), (this.c = p * a + f * h), (this.d = p * s + f * l);
                        } else (this.a = a), (this.b = s), (this.c = h), (this.d = l);
                        this.skeleton.flipX && ((this.a = -this.a), (this.b = -this.b)), this.skeleton.flipY != spine.Bone.yDown && ((this.c = -this.c), (this.d = -this.d));
                    }
                } else
                    (o = this.skeleton).flipX && ((t = -t), (a = -a), (s = -s)),
                        o.flipY != spine.Bone.yDown && ((e = -e), (h = -h), (l = -l)),
                        (this.a = a),
                        (this.b = s),
                        (this.c = h),
                        (this.d = l),
                        (this.worldX = t),
                        (this.worldY = e),
                        (this.worldSignX = i < 0 ? -1 : 1),
                        (this.worldSignY = r < 0 ? -1 : 1);
            },
            setToSetupPose: function () {
                var t = this.data;
                (this.x = t.x), (this.y = t.y), (this.rotation = t.rotation), (this.scaleX = t.scaleX), (this.scaleY = t.scaleY);
            },
            getWorldRotationX: function () {
                return Math.atan2(this.c, this.a) * spine.radDeg;
            },
            getWorldRotationY: function () {
                return Math.atan2(this.d, this.b) * spine.radDeg;
            },
            getWorldScaleX: function () {
                return Math.sqrt(this.a * this.a + this.b * this.b) * this.worldSignX;
            },
            getWorldScaleY: function () {
                return Math.sqrt(this.c * this.c + this.d * this.d) * this.worldSignY;
            },
            worldToLocal: function (t) {
                var e = t[0] - this.worldX,
                    n = t[1] - this.worldY,
                    i = this.a,
                    r = this.b,
                    o = this.c,
                    a = this.d,
                    s = 1 / (i * a - r * o);
                return (t[0] = e * a * s - n * r * s), (t[1] = n * i * s - e * o * s), t;
            },
            localToWorld: function (t) {
                var e = t[0],
                    n = t[1];
                return (t[0] = e * this.a + n * this.b + this.worldX), (t[1] = e * this.c + n * this.d + this.worldY), t;
            },
        }),
        (spine.Slot = function (t, e) {
            (this.data = t), (this.bone = e), (this.attachmentVertices = new spine.Float32Array()), this.setToSetupPose();
        }),
        (spine.Slot.prototype = {
            r: 1,
            g: 1,
            b: 1,
            a: 1,
            _attachmentTime: 0,
            attachment: null,
            setAttachment: function (t) {
                this.attachment != t && ((this.attachment = t), (this._attachmentTime = this.bone.skeleton.time), (this.attachmentVertices.length = 0));
            },
            setAttachmentTime: function (t) {
                this._attachmentTime = this.bone.skeleton.time - t;
            },
            getAttachmentTime: function () {
                return this.bone.skeleton.time - this._attachmentTime;
            },
            setToSetupPose: function () {
                var t = this.data;
                if (((this.r = t.r), (this.g = t.g), (this.b = t.b), (this.a = t.a), t.attachmentName)) {
                    for (var e = this.bone.skeleton.data.slots, n = 0, i = e.length; n < i; n++)
                        if (e[n] == t) {
                            (this.attachment = null), this.setAttachment(this.bone.skeleton.getAttachmentBySlotIndex(n, t.attachmentName));
                            break;
                        }
                } else this.setAttachment(null);
            },
        }),
        (spine.IkConstraint = function (t, e) {
            (this.data = t), (this.mix = t.mix), (this.bendDirection = t.bendDirection), (this.bones = []);
            for (var n = 0, i = t.bones.length; n < i; n++) this.bones[n] = e.findBone(t.bones[n].name);
            this.target = e.findBone(t.target.name);
        }),
        (spine.IkConstraint.prototype = {
            apply: function () {
                this.update();
            },
            update: function () {
                var t = this.target,
                    e = this.bones;
                switch (e.length) {
                    case 1:
                        spine.IkConstraint.apply1(e[0], t.worldX, t.worldY, this.mix);
                        break;
                    case 2:
                        spine.IkConstraint.apply2(e[0], e[1], t.worldX, t.worldY, this.bendDirection, this.mix);
                }
            },
        }),
        (spine.IkConstraint.apply1 = function (t, e, n, i) {
            var r = t.parent ? t.parent.getWorldRotationX() : 0,
                o = t.rotation,
                n = Math.atan2(n - t.worldY, e - t.worldX) * spine.radDeg - r;
            180 < (n = (t.worldSignX != t.worldSignY) != (t.skeleton.flipX != (t.skeleton.flipY != spine.Bone.yDown)) ? 360 - n : n) ? (n -= 360) : n < -180 && (n += 360),
                t.updateWorldTransform(t.x, t.y, o + (n - o) * i, t.appliedScaleX, t.appliedScaleY);
        }),
        (spine.IkConstraint.apply2 = function (t, e, F, R, n, N) {
            if (0 != N) {
                var j,
                    i,
                    r,
                    o,
                    a = t.x,
                    s = t.y,
                    h = t.appliedScaleX,
                    l = t.appliedScaleY,
                    u = h < 0 ? ((h = -h), (j = 180), -1) : ((j = 0), 1),
                    c = (l < 0 && ((l = -l), (u = -u)), e.x),
                    d = e.y,
                    p = e.appliedScaleX,
                    U = Math.abs(h - l) <= 1e-4,
                    z = (U || 0 == d || ((e.worldX = t.a * c + t.worldX), (e.worldY = t.c * c + t.worldY), (d = 0)), p < 0 ? ((p = -p), 180) : 0),
                    f = t.parent;
                f = f
                    ? ((w = f.a),
                      (A = f.b),
                      (B = f.c),
                      (L = 1 / (w * (S = f.d) - A * B)),
                      (i = ((M = F - (o = f.worldX)) * S - (D = R - (f = f.worldY)) * A) * L - a),
                      (r = (D * w - M * B) * L - s),
                      (o = ((M = e.worldX - o) * S - (D = e.worldY - f) * A) * L - a),
                      (D * w - M * B) * L - s)
                    : ((i = F - a), (r = R - s), (o = e.worldX - a), e.worldY - s);
                var m,
                    g = Math.sqrt(o * o + f * f),
                    y = e.data.length * p;
                t: if (U)
                    var v = (i * i + r * r - g * g - (y *= h) * y) / (2 * g * y),
                        w = (v < -1 ? (v = -1) : 1 < v && (v = 1), (m = Math.acos(v) * n), g + y * v),
                        v = y * Math.sin(m),
                        b = Math.atan2(r * w - i * v, i * w + r * v);
                else {
                    var S,
                        w = h * y,
                        A = l * y,
                        v = Math.atan2(r, i),
                        x = w * w,
                        _ = A * A,
                        k = i * i + r * r,
                        T = _ * (g * g) + x * k - x * _,
                        P = -2 * _ * g,
                        C = _ - x;
                    if (0 <= (S = P * P - 4 * C * T)) {
                        var O = Math.sqrt(S),
                            P = (O = -(P + (O = P < 0 ? -O : O)) / 2) / C,
                            C = T / O,
                            T = Math.abs(P) < Math.abs(C) ? P : C;
                        if (T * T <= k) {
                            var D = Math.sqrt(k - T * T) * n;
                            (b = v - Math.atan2(D, T)), (m = Math.atan2(D / l, (T - g) / h));
                            break t;
                        }
                    }
                    var M,
                        O = 0,
                        P = Number.MAX_VALUE,
                        C = 0,
                        T = 0,
                        W = 0,
                        E = 0,
                        Y = 0,
                        G = 0,
                        I = (M = g + w) * M,
                        x = (E < I && ((W = 0), (E = I), (Y = M)), (I = (M = g - w) * M) < P && ((O = Math.PI), (P = I), (C = M)), Math.acos((-w * g) / (x - _))),
                        D = ((M = w * Math.cos(x) + g), A * Math.sin(x));
                    (I = M * M + D * D) < P && ((O = x), (P = I), (C = M), (T = D)), E < I && ((W = x), (E = I), (Y = M), (G = D)), (m = k <= (P + E) / 2 ? ((b = v - Math.atan2(T * n, C)), O * n) : ((b = v - Math.atan2(G * n, Y)), W * n));
                }
                var B = Math.atan2(d, c) * u,
                    L = (180 < (b = (b - B) * spine.radDeg + j) ? (b -= 360) : b < -180 && (b += 360), 180 < (m = (m + B) * spine.radDeg * u + z) ? (m -= 360) : m < -180 && (m += 360), t.rotation);
                t.updateWorldTransform(a, s, L + (b - L) * N, t.appliedScaleX, t.appliedScaleY), (L = e.rotation), e.updateWorldTransform(c, d, L + (m - L) * N, e.appliedScaleX, e.appliedScaleY);
            }
        }),
        (spine.TransformConstraint = function (t, e) {
            (this.data = t), (this.translateMix = t.translateMix), (this.x = t.x), (this.y = t.y), (this.bone = e.findBone(t.bone.name)), (this.target = e.findBone(t.target.name));
        }),
        (spine.TransformConstraint.prototype = {
            apply: function () {
                this.update();
            },
            update: function () {
                var t,
                    e,
                    n = this.translateMix;
                0 < n && (((t = spine.temp)[0] = x), (t[1] = y), this.target.localToWorld(t), ((e = this.bone).worldX += (t[0] - e.worldX) * n), (e.worldY += (t[1] - e.worldY) * n));
            },
        }),
        (spine.Skin = function (t) {
            (this.name = t), (this.attachments = {});
        }),
        (spine.Skin.prototype = {
            addAttachment: function (t, e, n) {
                this.attachments[t + ":" + e] = n;
            },
            getAttachment: function (t, e) {
                return this.attachments[t + ":" + e];
            },
            _attachAll: function (t, e) {
                for (var n in e.attachments) {
                    var i = n.indexOf(":"),
                        r = parseInt(n.substring(0, i)),
                        n = n.substring(i + 1),
                        i = t.slots[r];
                    !i.attachment || i.attachment.name != n || ((r = this.getAttachment(r, n)) && i.setAttachment(r));
                }
            },
        }),
        (spine.Animation = function (t, e, n) {
            (this.name = t), (this.timelines = e), (this.duration = n);
        }),
        (spine.Animation.prototype = {
            apply: function (t, e, n, i, r) {
                i && 0 != this.duration && ((n %= this.duration), 0 < e && (e %= this.duration));
                for (var o = this.timelines, a = 0, s = o.length; a < s; a++) o[a].apply(t, e, n, r, 1);
            },
            mix: function (t, e, n, i, r, o) {
                i && 0 != this.duration && ((n %= this.duration), 0 < e && (e %= this.duration));
                for (var a = this.timelines, s = 0, h = a.length; s < h; s++) a[s].apply(t, e, n, r, o);
            },
        }),
        (spine.Animation.binarySearch = function (t, e, n) {
            var i = 0,
                r = Math.floor(t.length / n) - 2;
            if (!r) return n;
            for (var o = r >>> 1; ; ) {
                if ((t[(o + 1) * n] <= e ? (i = o + 1) : (r = o), i == r)) return (i + 1) * n;
                o = (i + r) >>> 1;
            }
        }),
        (spine.Animation.binarySearch1 = function (t, e) {
            var n = 0,
                i = t.length - 2;
            if (!i) return 1;
            for (var r = i >>> 1; ; ) {
                if ((t[r + 1] <= e ? (n = r + 1) : (i = r), n == i)) return n + 1;
                r = (n + i) >>> 1;
            }
        }),
        (spine.Animation.linearSearch = function (t, e, n) {
            for (var i = 0, r = t.length - n; i <= r; i += n) if (t[i] > e) return i;
            return -1;
        }),
        (spine.Curves = function (t) {
            t = 19 * (t - 1);
            (this.curves = new spine.Float32Array(t)), (this.curves.length = t);
        }),
        (spine.Curves.prototype = {
            setLinear: function (t) {
                this.curves[19 * t] = 0;
            },
            setStepped: function (t) {
                this.curves[19 * t] = 1;
            },
            setCurve: function (t, e, n, i, r) {
                var o = 0.1 * 0.1 * 0.1,
                    a = 6 * o,
                    s = 2 * -e + i,
                    h = 2 * -n + r,
                    i = 3 * (e - i) + 1,
                    r = 3 * (n - r) + 1,
                    l = e * (3 * 0.1) + s * (0.1 * 0.1 * 3) + i * o,
                    u = n * (3 * 0.1) + h * (0.1 * 0.1 * 3) + r * o,
                    c = s * (0.1 * 0.1 * 6) + i * a,
                    d = h * (0.1 * 0.1 * 6) + r * a,
                    p = i * a,
                    f = r * a,
                    m = 19 * t,
                    g = this.curves;
                g[m++] = 2;
                for (var y = l, v = u, w = m + 19 - 1; m < w; m += 2) (g[m] = y), (g[m + 1] = v), (l += c), (u += d), (c += p), (d += f), (y += l), (v += u);
            },
            getCurvePercent: function (t, e) {
                e = e < 0 ? 0 : 1 < e ? 1 : e;
                var n = this.curves,
                    i = 19 * t,
                    t = n[i];
                if (0 === t) return e;
                if (1 == t) return 0;
                for (var r, o, a = 0, s = ++i, h = i + 19 - 1; i < h; i += 2) if (e <= (a = n[i])) return (o = i == s ? (r = 0) : ((r = n[i - 2]), n[i - 1])) + ((n[i + 1] - o) * (e - r)) / (a - r);
                t = n[i - 1];
                return t + ((1 - t) * (e - a)) / (1 - a);
            },
        }),
        (spine.RotateTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(2 * t)), (this.frames.length = 2 * t);
        }),
        (spine.RotateTimeline.prototype = {
            boneIndex: 0,
            getFrameCount: function () {
                return this.frames.length / 2;
            },
            setFrame: function (t, e, n) {
                (this.frames[(t *= 2)] = e), (this.frames[t + 1] = n);
            },
            apply: function (t, e, n, i, r) {
                var o = this.frames;
                if (!(n < o[0])) {
                    t = t.bones[this.boneIndex];
                    if (n >= o[o.length - 2]) for (var a = t.data.rotation + o[o.length - 1] - t.rotation; 180 < a; ) a -= 360;
                    else {
                        for (var s = spine.Animation.binarySearch(o, n, 2), h = o[s - 1], l = o[s], n = 1 - (n - l) / (o[s - 2] - l), n = this.curves.getCurvePercent(s / 2 - 1, n), a = o[s + 1] - h; 180 < a; ) a -= 360;
                        for (; a < -180; ) a += 360;
                        for (a = t.data.rotation + (h + a * n) - t.rotation; 180 < a; ) a -= 360;
                    }
                    for (; a < -180; ) a += 360;
                    t.rotation += a * r;
                }
            },
        }),
        (spine.TranslateTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(3 * t)), (this.frames.length = 3 * t);
        }),
        (spine.TranslateTimeline.prototype = {
            boneIndex: 0,
            getFrameCount: function () {
                return this.frames.length / 3;
            },
            setFrame: function (t, e, n, i) {
                (this.frames[(t *= 3)] = e), (this.frames[t + 1] = n), (this.frames[t + 2] = i);
            },
            apply: function (t, e, n, i, r) {
                var o,
                    a,
                    s,
                    h = this.frames;
                n < h[0] ||
                    ((t = t.bones[this.boneIndex]),
                    n >= h[h.length - 3]
                        ? ((t.x += (t.data.x + h[h.length - 2] - t.x) * r), (t.y += (t.data.y + h[h.length - 1] - t.y) * r))
                        : ((a = h[(o = spine.Animation.binarySearch(h, n, 3)) - 2]),
                          (s = h[o - 1]),
                          (n = 1 - (n - (n = h[o])) / (h[o + -3] - n)),
                          (n = this.curves.getCurvePercent(o / 3 - 1, n)),
                          (t.x += (t.data.x + a + (h[o + 1] - a) * n - t.x) * r),
                          (t.y += (t.data.y + s + (h[o + 2] - s) * n - t.y) * r)));
            },
        }),
        (spine.ScaleTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(3 * t)), (this.frames.length = 3 * t);
        }),
        (spine.ScaleTimeline.prototype = {
            boneIndex: 0,
            getFrameCount: function () {
                return this.frames.length / 3;
            },
            setFrame: function (t, e, n, i) {
                (this.frames[(t *= 3)] = e), (this.frames[t + 1] = n), (this.frames[t + 2] = i);
            },
            apply: function (t, e, n, i, r) {
                var o,
                    a,
                    s,
                    h = this.frames;
                n < h[0] ||
                    ((t = t.bones[this.boneIndex]),
                    n >= h[h.length - 3]
                        ? ((t.scaleX += (t.data.scaleX * h[h.length - 2] - t.scaleX) * r), (t.scaleY += (t.data.scaleY * h[h.length - 1] - t.scaleY) * r))
                        : ((a = h[(o = spine.Animation.binarySearch(h, n, 3)) - 2]),
                          (s = h[o - 1]),
                          (n = 1 - (n - (n = h[o])) / (h[o + -3] - n)),
                          (n = this.curves.getCurvePercent(o / 3 - 1, n)),
                          (t.scaleX += (t.data.scaleX * (a + (h[o + 1] - a) * n) - t.scaleX) * r),
                          (t.scaleY += (t.data.scaleY * (s + (h[o + 2] - s) * n) - t.scaleY) * r)));
            },
        }),
        (spine.ColorTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(5 * t)), (this.frames.length = 5 * t);
        }),
        (spine.ColorTimeline.prototype = {
            slotIndex: 0,
            getFrameCount: function () {
                return this.frames.length / 5;
            },
            setFrame: function (t, e, n, i, r, o) {
                (this.frames[(t *= 5)] = e), (this.frames[t + 1] = n), (this.frames[t + 2] = i), (this.frames[t + 3] = r), (this.frames[t + 4] = o);
            },
            apply: function (t, e, n, i, r) {
                var o,
                    a,
                    s,
                    h,
                    l,
                    u,
                    c,
                    d,
                    p = this.frames;
                n < p[0] ||
                    ((l =
                        n >= p[p.length - 5]
                            ? ((o = p[(h = p.length - 1) - 3]), (a = p[h - 2]), (s = p[h - 1]), p[h])
                            : ((l = p[(h = spine.Animation.binarySearch(p, n, 5)) - 4]),
                              (d = p[h - 3]),
                              (u = p[h - 2]),
                              (c = p[h - 1]),
                              (n = 1 - (n - (n = p[h])) / (p[h - 5] - n)),
                              (n = this.curves.getCurvePercent(h / 5 - 1, n)),
                              (o = l + (p[h + 1] - l) * n),
                              (a = d + (p[h + 2] - d) * n),
                              (s = u + (p[h + 3] - u) * n),
                              c + (p[h + 4] - c) * n)),
                    (d = t.slots[this.slotIndex]),
                    r < 1 ? ((d.r += (o - d.r) * r), (d.g += (a - d.g) * r), (d.b += (s - d.b) * r), (d.a += (l - d.a) * r)) : ((d.r = o), (d.g = a), (d.b = s), (d.a = l)));
            },
        }),
        (spine.AttachmentTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(t)), (this.frames.length = t), (this.attachmentNames = []), (this.attachmentNames.length = t);
        }),
        (spine.AttachmentTimeline.prototype = {
            slotIndex: 0,
            getFrameCount: function () {
                return this.frames.length;
            },
            setFrame: function (t, e, n) {
                (this.frames[t] = e), (this.attachmentNames[t] = n);
            },
            apply: function (t, e, n, i, r) {
                var o = this.frames;
                n < o[0]
                    ? n < e && this.apply(t, e, Number.MAX_VALUE, null, 0)
                    : (n < e && (e = -1),
                      o[(o = n >= o[o.length - 1] ? o.length - 1 : spine.Animation.binarySearch1(o, n) - 1)] < e ||
                          ((n = this.attachmentNames[o]), t.slots[this.slotIndex].setAttachment(n ? t.getAttachmentBySlotIndex(this.slotIndex, n) : null)));
            },
        }),
        (spine.EventTimeline = function (t) {
            (this.frames = new spine.Float32Array(t)), (this.frames.length = t), (this.events = []), (this.events.length = t);
        }),
        (spine.EventTimeline.prototype = {
            getFrameCount: function () {
                return this.frames.length;
            },
            setFrame: function (t, e) {
                (this.frames[t] = e.time), (this.events[t] = e);
            },
            apply: function (t, e, n, i, r) {
                if (i) {
                    var o = this.frames,
                        a = o.length;
                    if (n < e) this.apply(t, e, Number.MAX_VALUE, i, r), (e = -1);
                    else if (e >= o[a - 1]) return;
                    if (!(n < o[0])) {
                        if (e < o[0]) s = 0;
                        else for (var s, h = o[(s = spine.Animation.binarySearch1(o, e))]; 0 < s && o[s - 1] == h; ) s--;
                        for (var l = this.events; s < a && n >= o[s]; s++) i[i.length] = l[s];
                    }
                }
            },
        }),
        (spine.DrawOrderTimeline = function (t) {
            (this.frames = new spine.Float32Array(t)), (this.frames.length = t), (this.drawOrders = []), (this.drawOrders.length = t);
        }),
        (spine.DrawOrderTimeline.prototype = {
            getFrameCount: function () {
                return this.frames.length;
            },
            setFrame: function (t, e, n) {
                (this.frames[t] = e), (this.drawOrders[t] = n);
            },
            apply: function (t, e, n, i, r) {
                var o = this.frames;
                if (!(n < o[0])) {
                    var o = n >= o[o.length - 1] ? o.length - 1 : spine.Animation.binarySearch1(o, n) - 1,
                        a = t.drawOrder,
                        s = t.slots,
                        h = this.drawOrders[o];
                    if (h) for (var l = 0, u = h.length; l < u; l++) a[l] = t.slots[h[l]];
                    else for (l = 0, u = s.length; l < u; l++) a[l] = s[l];
                }
            },
        }),
        (spine.FfdTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(t)), (this.frames.length = t), (this.frameVertices = []), (this.frameVertices.length = t);
        }),
        (spine.FfdTimeline.prototype = {
            slotIndex: 0,
            attachment: 0,
            getFrameCount: function () {
                return this.frames.length;
            },
            setFrame: function (t, e, n) {
                (this.frames[t] = e), (this.frameVertices[t] = n);
            },
            apply: function (t, e, n, i, r) {
                var t = t.slots[this.slotIndex],
                    o = t.attachment;
                if (o && (o == this.attachment || (o.inheritFFD && o.parentMesh == this.attachment))) {
                    o = this.frames;
                    if (!(n < o[0])) {
                        var a = this.frameVertices,
                            s = a[0].length,
                            h = t.attachmentVertices;
                        if ((h.length != s && ((t.attachmentVertices = h = new spine.Float32Array(s)), (r = 1)), n >= o[o.length - 1])) {
                            var l = a[o.length - 1];
                            if (r < 1) for (var u = 0; u < s; u++) h[u] += (l[u] - h[u]) * r;
                            else for (u = 0; u < s; u++) h[u] = l[u];
                        } else {
                            var t = spine.Animation.binarySearch1(o, n),
                                c = o[t],
                                d = 1 - (n - c) / (o[t - 1] - c),
                                d = this.curves.getCurvePercent(t - 1, d < 0 ? 0 : 1 < d ? 1 : d),
                                p = a[t - 1],
                                f = a[t];
                            if (r < 1)
                                for (u = 0; u < s; u++) {
                                    var m = p[u];
                                    h[u] += (m + (f[u] - m) * d - h[u]) * r;
                                }
                            else
                                for (u = 0; u < s; u++) {
                                    m = p[u];
                                    h[u] = m + (f[u] - m) * d;
                                }
                        }
                    }
                }
            },
        }),
        (spine.IkConstraintTimeline = function (t) {
            (this.curves = new spine.Curves(t)), (this.frames = new spine.Float32Array(3 * t)), (this.frames.length = 3 * t);
        }),
        (spine.IkConstraintTimeline.prototype = {
            ikConstraintIndex: 0,
            getFrameCount: function () {
                return this.frames.length / 3;
            },
            setFrame: function (t, e, n, i) {
                (this.frames[(t *= 3)] = e), (this.frames[t + 1] = n), (this.frames[t + 2] = i);
            },
            apply: function (t, e, n, i, r) {
                var o,
                    a,
                    s = this.frames;
                n < s[0] ||
                    ((t = t.ikConstraints[this.ikConstraintIndex]),
                    n >= s[s.length - 3]
                        ? ((t.mix += (s[s.length - 2] - t.mix) * r), (t.bendDirection = s[s.length - 1]))
                        : ((a = s[(o = spine.Animation.binarySearch(s, n, 3)) + -2]),
                          (n = 1 - (n - (n = s[o])) / (s[o + -3] - n)),
                          (n = this.curves.getCurvePercent(o / 3 - 1, n)),
                          (a = a + (s[o + 1] - a) * n),
                          (t.mix += (a - t.mix) * r),
                          (t.bendDirection = s[o + -1])));
            },
        }),
        (spine.SkeletonData = function () {
            (this.bones = []), (this.slots = []), (this.skins = []), (this.events = []), (this.animations = []), (this.ikConstraints = []), (this.transformConstraints = []);
        }),
        (spine.SkeletonData.prototype = {
            name: null,
            defaultSkin: null,
            width: 0,
            height: 0,
            version: null,
            hash: null,
            findBone: function (t) {
                for (var e = this.bones, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
            findBoneIndex: function (t) {
                for (var e = this.bones, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return n;
                return -1;
            },
            findSlot: function (t) {
                for (var e = this.slots, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return slot[n];
                return null;
            },
            findSlotIndex: function (t) {
                for (var e = this.slots, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return n;
                return -1;
            },
            findSkin: function (t) {
                for (var e = this.skins, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
            findEvent: function (t) {
                for (var e = this.events, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
            findAnimation: function (t) {
                for (var e = this.animations, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
            findIkConstraint: function (t) {
                for (var e = this.ikConstraints, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
            findTransformConstraints: function (t) {
                for (var e = this.transformConstraints, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
        }),
        (spine.Skeleton = function (t) {
            (this.data = t), (this.bones = []);
            for (var e = 0, n = t.bones.length; e < n; e++) {
                var i = t.bones[e],
                    r = i.parent ? this.bones[t.bones.indexOf(i.parent)] : null;
                this.bones[e] = new spine.Bone(i, this, r);
            }
            (this.slots = []), (this.drawOrder = []);
            for (e = 0, n = t.slots.length; e < n; e++) {
                var o = t.slots[e],
                    a = this.bones[t.bones.indexOf(o.boneData)],
                    o = new spine.Slot(o, a);
                (this.slots[e] = o), (this.drawOrder[e] = o);
            }
            this.ikConstraints = [];
            for (e = 0, n = t.ikConstraints.length; e < n; e++) this.ikConstraints[e] = new spine.IkConstraint(t.ikConstraints[e], this);
            this.transformConstraints = [];
            for (e = 0, n = t.transformConstraints.length; e < n; e++) this.transformConstraints[e] = new spine.TransformConstraint(t.transformConstraints[e], this);
            (this.cache = []), this.updateCache();
        }),
        (spine.Skeleton.prototype = {
            x: 0,
            y: 0,
            skin: null,
            r: 1,
            g: 1,
            b: 1,
            a: 1,
            time: 0,
            flipX: !1,
            flipY: !1,
            updateCache: function () {
                for (var t = this.bones, e = this.cache, n = this.ikConstraints, i = this.transformConstraints, r = n.length, o = i.length, a = (e.length = 0), s = t.length; a < s; a++) {
                    var h = t[a];
                    e[e.length] = h;
                    for (var l = 0; l < r; l++) {
                        var u = n[l];
                        if (h == u.bones[u.bones.length - 1]) {
                            e[e.length] = u;
                            break;
                        }
                    }
                }
                for (a = 0; a < o; a++)
                    for (var c = i[a], l = e.length - 1; 0 <= l; l--) {
                        var d = e[l];
                        if (d == c.bone || d == c.target) {
                            e.splice(l + 1, 0, c);
                            break;
                        }
                    }
            },
            updateWorldTransform: function () {
                for (var t = this.cache, e = 0, n = t.length; e < n; e++) t[e].update();
            },
            setToSetupPose: function () {
                this.setBonesToSetupPose(), this.setSlotsToSetupPose();
            },
            setBonesToSetupPose: function () {
                for (var t = this.bones, e = 0, n = t.length; e < n; e++) t[e].setToSetupPose();
                for (var i = this.ikConstraints, e = 0, n = i.length; e < n; e++) ((r = i[e]).bendDirection = r.data.bendDirection), (r.mix = r.data.mix);
                for (var r, o = this.transformConstraints, e = 0, n = o.length; e < n; e++) ((r = o[e]).translateMix = r.data.translateMix), (r.x = r.data.x), (r.y = r.data.y);
            },
            setSlotsToSetupPose: function () {
                for (var t = this.slots, e = this.drawOrder, n = 0, i = t.length; n < i; n++) (e[n] = t[n]), t[n].setToSetupPose(n);
            },
            getRootBone: function () {
                return this.bones.length ? this.bones[0] : null;
            },
            findBone: function (t) {
                for (var e = this.bones, n = 0, i = e.length; n < i; n++) if (e[n].data.name == t) return e[n];
                return null;
            },
            findBoneIndex: function (t) {
                for (var e = this.bones, n = 0, i = e.length; n < i; n++) if (e[n].data.name == t) return n;
                return -1;
            },
            findSlot: function (t) {
                for (var e = this.slots, n = 0, i = e.length; n < i; n++) if (e[n].data.name == t) return e[n];
                return null;
            },
            findSlotIndex: function (t) {
                for (var e = this.slots, n = 0, i = e.length; n < i; n++) if (e[n].data.name == t) return n;
                return -1;
            },
            setSkinByName: function (t) {
                var e = this.data.findSkin(t);
                if (!e) throw "Skin not found: " + t;
                this.setSkin(e);
            },
            setSkin: function (t) {
                if (t)
                    if (this.skin) t._attachAll(this, this.skin);
                    else
                        for (var e = this.slots, n = 0, i = e.length; n < i; n++) {
                            var r = e[n],
                                o = r.data.attachmentName;
                            !o || ((o = t.getAttachment(n, o)) && r.setAttachment(o));
                        }
                this.skin = t;
            },
            getAttachmentBySlotName: function (t, e) {
                return this.getAttachmentBySlotIndex(this.data.findSlotIndex(t), e);
            },
            getAttachmentBySlotIndex: function (t, e) {
                if (this.skin) {
                    var n = this.skin.getAttachment(t, e);
                    if (n) return n;
                }
                return this.data.defaultSkin ? this.data.defaultSkin.getAttachment(t, e) : null;
            },
            setAttachment: function (t, e) {
                for (var n = this.slots, i = 0, r = n.length; i < r; i++) {
                    var o = n[i];
                    if (o.data.name == t) {
                        var a = null;
                        if (e && !(a = this.getAttachmentBySlotIndex(i, e))) throw "Attachment not found: " + e + ", for slot: " + t;
                        return void o.setAttachment(a);
                    }
                }
                throw "Slot not found: " + t;
            },
            findIkConstraint: function (t) {
                for (var e = this.ikConstraints, n = 0, i = e.length; n < i; n++) if (e[n].data.name == t) return e[n];
                return null;
            },
            findTransformConstraint: function (t) {
                for (var e = this.transformConstraints, n = 0, i = e.length; n < i; n++) if (e[n].data.name == t) return e[n];
                return null;
            },
            update: function (t) {
                this.time += t;
            },
        }),
        (spine.EventData = function (t) {
            this.name = t;
        }),
        (spine.EventData.prototype = { intValue: 0, floatValue: 0, stringValue: null }),
        (spine.Event = function (t, e) {
            (this.time = t), (this.data = e);
        }),
        (spine.Event.prototype = { intValue: 0, floatValue: 0, stringValue: null }),
        (spine.AttachmentType = { region: 0, boundingbox: 1, mesh: 2, weightedmesh: 3, linkedmesh: 4, weightedlinkedmesh: 5 }),
        (spine.RegionAttachment = function (t) {
            (this.name = t), (this.offset = new spine.Float32Array(8)), (this.offset.length = 8), (this.uvs = new spine.Float32Array(8)), (this.uvs.length = 8);
        }),
        (spine.RegionAttachment.prototype = {
            type: spine.AttachmentType.region,
            x: 0,
            y: 0,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            width: 0,
            height: 0,
            r: 1,
            g: 1,
            b: 1,
            a: 1,
            path: null,
            rendererObject: null,
            regionOffsetX: 0,
            regionOffsetY: 0,
            regionWidth: 0,
            regionHeight: 0,
            regionOriginalWidth: 0,
            regionOriginalHeight: 0,
            setUVs: function (t, e, n, i, r) {
                var o = this.uvs;
                r ? ((o[2] = t), (o[3] = i), (o[4] = t), (o[5] = e), (o[6] = n), (o[7] = e), (o[0] = n), (o[1] = i)) : ((o[0] = t), (o[1] = i), (o[2] = t), (o[3] = e), (o[4] = n), (o[5] = e), (o[6] = n), (o[7] = i));
            },
            updateOffset: function () {
                var t = (this.width / this.regionOriginalWidth) * this.scaleX,
                    e = (this.height / this.regionOriginalHeight) * this.scaleY,
                    n = (-this.width / 2) * this.scaleX + this.regionOffsetX * t,
                    i = (-this.height / 2) * this.scaleY + this.regionOffsetY * e,
                    t = n + this.regionWidth * t,
                    e = i + this.regionHeight * e,
                    r = this.rotation * spine.degRad,
                    o = Math.cos(r),
                    r = Math.sin(r),
                    a = n * o + this.x,
                    n = n * r,
                    s = i * o + this.y,
                    i = i * r,
                    h = t * o + this.x,
                    t = t * r,
                    o = e * o + this.y,
                    e = e * r,
                    r = this.offset;
                (r[0] = a - i), (r[1] = s + n), (r[2] = a - e), (r[3] = o + n), (r[4] = h - e), (r[5] = o + t), (r[6] = h - i), (r[7] = s + t);
            },
            computeVertices: function (t, e, n, i) {
                (t += n.worldX), (e += n.worldY);
                var r = n.a,
                    o = n.b,
                    a = n.c,
                    n = n.d,
                    s = this.offset;
                (i[0] = s[0] * r + s[1] * o + t),
                    (i[1] = s[0] * a + s[1] * n + e),
                    (i[2] = s[2] * r + s[3] * o + t),
                    (i[3] = s[2] * a + s[3] * n + e),
                    (i[4] = s[4] * r + s[5] * o + t),
                    (i[5] = s[4] * a + s[5] * n + e),
                    (i[6] = s[6] * r + s[7] * o + t),
                    (i[7] = s[6] * a + s[7] * n + e);
            },
        }),
        (spine.MeshAttachment = function (t) {
            this.name = t;
        }),
        (spine.MeshAttachment.prototype = {
            type: spine.AttachmentType.mesh,
            vertices: null,
            uvs: null,
            regionUVs: null,
            triangles: null,
            hullLength: 0,
            r: 1,
            g: 1,
            b: 1,
            a: 1,
            path: null,
            inheritFFD: !0,
            parentMesh: null,
            rendererObject: null,
            regionU: 0,
            regionV: 0,
            regionU2: 0,
            regionV2: 0,
            regionRotate: !1,
            regionOffsetX: 0,
            regionOffsetY: 0,
            regionWidth: 0,
            regionHeight: 0,
            regionOriginalWidth: 0,
            regionOriginalHeight: 0,
            edges: null,
            width: 0,
            height: 0,
            updateUVs: function () {
                var t = this.regionU2 - this.regionU,
                    e = this.regionV2 - this.regionV,
                    n = this.regionUVs.length;
                if (((this.uvs && this.uvs.length == n) || (this.uvs = new spine.Float32Array(n)), this.regionRotate))
                    for (var i = 0; i < n; i += 2) (this.uvs[i] = this.regionU + this.regionUVs[i + 1] * t), (this.uvs[i + 1] = this.regionV + e - this.regionUVs[i] * e);
                else for (i = 0; i < n; i += 2) (this.uvs[i] = this.regionU + this.regionUVs[i] * t), (this.uvs[i + 1] = this.regionV + this.regionUVs[i + 1] * e);
            },
            computeWorldVertices: function (t, e, n, i) {
                var r = n.bone,
                    o = ((t += r.worldX), (e += r.worldY), r.a),
                    a = r.b,
                    s = r.c,
                    h = r.d,
                    l = this.vertices,
                    u = l.length;
                n.attachmentVertices.length == u && (l = n.attachmentVertices);
                for (var c = 0; c < u; c += 2) {
                    var d = l[c],
                        p = l[c + 1];
                    (i[c] = d * o + p * a + t), (i[c + 1] = d * s + p * h + e);
                }
            },
            setParentMesh: function (t) {
                (this.parentMesh = t) &&
                    ((this.vertices = t.vertices), (this.regionUVs = t.regionUVs), (this.triangles = t.triangles), (this.hullLength = t.hullLength), (this.edges = t.edges), (this.width = t.width), (this.height = t.height));
            },
        }),
        (spine.WeightedMeshAttachment = function (t) {
            this.name = t;
        }),
        (spine.WeightedMeshAttachment.prototype = {
            type: spine.AttachmentType.weightedmesh,
            bones: null,
            weights: null,
            uvs: null,
            regionUVs: null,
            triangles: null,
            hullLength: 0,
            r: 1,
            g: 1,
            b: 1,
            a: 1,
            path: null,
            inheritFFD: !0,
            parentMesh: null,
            rendererObject: null,
            regionU: 0,
            regionV: 0,
            regionU2: 0,
            regionV2: 0,
            regionRotate: !1,
            regionOffsetX: 0,
            regionOffsetY: 0,
            regionWidth: 0,
            regionHeight: 0,
            regionOriginalWidth: 0,
            regionOriginalHeight: 0,
            edges: null,
            width: 0,
            height: 0,
            updateUVs: function (t, e, n, i, r) {
                var o = this.regionU2 - this.regionU,
                    a = this.regionV2 - this.regionV,
                    s = this.regionUVs.length;
                if (((this.uvs && this.uvs.length == s) || (this.uvs = new spine.Float32Array(s)), this.regionRotate))
                    for (var h = 0; h < s; h += 2) (this.uvs[h] = this.regionU + this.regionUVs[h + 1] * o), (this.uvs[h + 1] = this.regionV + a - this.regionUVs[h] * a);
                else for (h = 0; h < s; h += 2) (this.uvs[h] = this.regionU + this.regionUVs[h] * o), (this.uvs[h + 1] = this.regionV + this.regionUVs[h + 1] * a);
            },
            computeWorldVertices: function (t, e, n, i) {
                var r,
                    o,
                    a,
                    s,
                    h,
                    l,
                    u,
                    c = n.bone.skeleton.bones,
                    d = this.weights,
                    p = this.bones,
                    f = 0,
                    m = 0,
                    g = 0,
                    y = 0,
                    v = p.length;
                if (n.attachmentVertices.length)
                    for (var w = n.attachmentVertices; m < v; f += 2) {
                        for (a = o = 0, r = p[m++] + m; m < r; m++, g += 3, y += 2)
                            (s = c[p[m]]), (h = d[g] + w[y]), (l = d[g + 1] + w[y + 1]), (u = d[g + 2]), (o += (h * s.a + l * s.b + s.worldX) * u), (a += (h * s.c + l * s.d + s.worldY) * u);
                        (i[f] = o + t), (i[f + 1] = a + e);
                    }
                else
                    for (; m < v; f += 2) {
                        for (a = o = 0, r = p[m++] + m; m < r; m++, g += 3) (s = c[p[m]]), (h = d[g]), (l = d[g + 1]), (u = d[g + 2]), (o += (h * s.a + l * s.b + s.worldX) * u), (a += (h * s.c + l * s.d + s.worldY) * u);
                        (i[f] = o + t), (i[f + 1] = a + e);
                    }
            },
            setParentMesh: function (t) {
                (this.parentMesh = t) &&
                    ((this.bones = t.bones),
                    (this.weights = t.weights),
                    (this.regionUVs = t.regionUVs),
                    (this.triangles = t.triangles),
                    (this.hullLength = t.hullLength),
                    (this.edges = t.edges),
                    (this.width = t.width),
                    (this.height = t.height));
            },
        }),
        (spine.BoundingBoxAttachment = function (t) {
            (this.name = t), (this.vertices = new spine.Float32Array());
        }),
        (spine.BoundingBoxAttachment.prototype = {
            type: spine.AttachmentType.boundingbox,
            computeWorldVertices: function (t, e, n, i) {
                (t += n.worldX), (e += n.worldY);
                for (var r = n.a, o = n.b, a = n.c, s = n.d, h = this.vertices, l = 0, u = h.length; l < u; l += 2) {
                    var c = h[l],
                        d = h[l + 1];
                    (i[l] = c * r + d * o + t), (i[l + 1] = c * a + d * s + e);
                }
            },
        }),
        (spine.AnimationStateData = function (t) {
            (this.skeletonData = t), (this.animationToMixTime = {});
        }),
        (spine.AnimationStateData.prototype = {
            defaultMix: 0,
            setMixByName: function (t, e, n) {
                var i = this.skeletonData.findAnimation(t);
                if (!i) throw "Animation not found: " + t;
                t = this.skeletonData.findAnimation(e);
                if (!t) throw "Animation not found: " + e;
                this.setMix(i, t, n);
            },
            setMix: function (t, e, n) {
                this.animationToMixTime[t.name + ":" + e.name] = n;
            },
            getMix: function (t, e) {
                t = t.name + ":" + e.name;
                return this.animationToMixTime.hasOwnProperty(t) ? this.animationToMixTime[t] : this.defaultMix;
            },
        }),
        (spine.TrackEntry = function () {}),
        (spine.TrackEntry.prototype = {
            next: null,
            previous: null,
            animation: null,
            loop: !1,
            delay: 0,
            time: 0,
            lastTime: -1,
            endTime: 0,
            timeScale: 1,
            mixTime: 0,
            mixDuration: 0,
            mix: 1,
            onStart: null,
            onEnd: null,
            onComplete: null,
            onEvent: null,
        }),
        (spine.AnimationState = function (t) {
            (this.data = t), (this.tracks = []), (this.events = []);
        }),
        (spine.AnimationState.prototype = {
            onStart: null,
            onEnd: null,
            onComplete: null,
            onEvent: null,
            timeScale: 1,
            update: function (t) {
                t *= this.timeScale;
                for (var e = 0; e < this.tracks.length; e++) {
                    var n,
                        i = this.tracks[e];
                    i &&
                        ((i.time += t * i.timeScale),
                        i.previous && ((n = t * i.previous.timeScale), (i.previous.time += n), (i.mixTime += n)),
                        (n = i.next) ? ((n.time = i.lastTime - n.delay), 0 <= n.time && this.setCurrent(e, n)) : !i.loop && i.lastTime >= i.endTime && this.clearTrack(e));
                }
            },
            apply: function (t) {
                for (var e = 0; e < this.tracks.length; e++) {
                    var n = this.tracks[e];
                    if (n) {
                        this.events.length = 0;
                        var i,
                            r = n.time,
                            o = n.lastTime,
                            a = n.endTime,
                            s = n.loop,
                            h = (!s && a < r && (r = a), n.previous);
                        h
                            ? ((i = h.time),
                              !h.loop && i > h.endTime && (i = h.endTime),
                              h.animation.apply(t, i, i, h.loop, null),
                              1 <= (i = (n.mixTime / n.mixDuration) * n.mix) && ((i = 1), (n.previous = null)),
                              n.animation.mix(t, n.lastTime, r, s, this.events, i))
                            : 1 == n.mix
                            ? n.animation.apply(t, n.lastTime, r, s, this.events)
                            : n.animation.mix(t, n.lastTime, r, s, this.events, n.mix);
                        for (var l = 0, u = this.events.length; l < u; l++) {
                            var c = this.events[l];
                            n.onEvent && n.onEvent(e, c), this.onEvent && this.onEvent(e, c);
                        }
                        (s ? r % a < o % a : o < a && a <= r) && ((h = Math.floor(r / a)), n.onComplete && n.onComplete(e, h), this.onComplete && this.onComplete(e, h)), (n.lastTime = n.time);
                    }
                }
            },
            clearTracks: function () {
                for (var t = 0, e = this.tracks.length; t < e; t++) this.clearTrack(t);
                this.tracks.length = 0;
            },
            clearTrack: function (t) {
                var e;
                t >= this.tracks.length || ((e = this.tracks[t]) && (e.onEnd && e.onEnd(t), this.onEnd && this.onEnd(t), (this.tracks[t] = null)));
            },
            _expandToIndex: function (t) {
                if (t < this.tracks.length) return this.tracks[t];
                for (; t >= this.tracks.length; ) this.tracks[this.tracks.length] = null;
                return null;
            },
            setCurrent: function (t, e) {
                var n,
                    i = this._expandToIndex(t);
                i &&
                    ((n = i.previous),
                    (i.previous = null),
                    i.onEnd && i.onEnd(t),
                    this.onEnd && this.onEnd(t),
                    (e.mixDuration = this.data.getMix(i.animation, e.animation)),
                    0 < e.mixDuration && ((e.mixTime = 0), n && i.mixTime / i.mixDuration < 0.5 ? (e.previous = n) : (e.previous = i))),
                    (this.tracks[t] = e).onStart && e.onStart(t),
                    this.onStart && this.onStart(t);
            },
            setAnimationByName: function (t, e, n) {
                var i = this.data.skeletonData.findAnimation(e);
                if (i) return this.setAnimation(t, i, n);
                throw "Animation not found: " + e;
            },
            setAnimation: function (t, e, n) {
                var i = new spine.TrackEntry();
                return (i.animation = e), (i.loop = n), (i.endTime = e.duration), this.setCurrent(t, i), i;
            },
            addAnimationByName: function (t, e, n, i) {
                var r = this.data.skeletonData.findAnimation(e);
                if (r) return this.addAnimation(t, r, n, i);
                throw "Animation not found: " + e;
            },
            addAnimation: function (t, e, n, i) {
                var r = new spine.TrackEntry(),
                    o = ((r.animation = e), (r.loop = n), (r.endTime = e.duration), this._expandToIndex(t));
                if (o) {
                    for (; o.next; ) o = o.next;
                    o.next = r;
                } else this.tracks[t] = r;
                return i <= 0 && (o ? (i += o.endTime - this.data.getMix(o.animation, e)) : (i = 0)), (r.delay = i), r;
            },
            getCurrent: function (t) {
                return t >= this.tracks.length ? null : this.tracks[t];
            },
        }),
        (spine.SkeletonJson = function (t) {
            (this.attachmentLoader = t), (this.linkedMeshes = []);
        }),
        (spine.SkeletonJson.prototype = {
            scale: 1,
            readSkeletonData: function (t, e) {
                var n = new spine.SkeletonData(),
                    e = ((n.name = e), t.skeleton);
                e && ((n.hash = e.hash), (n.version = e.spine), (n.width = e.width || 0), (n.height = e.height || 0));
                for (var i = 0, r = (h = t.bones).length; i < r; i++) {
                    var o = h[i],
                        a = null;
                    if (o.parent && !(a = n.findBone(o.parent))) throw "Parent bone not found: " + o.parent;
                    ((y = new spine.BoneData(o.name, a)).length = (o.length || 0) * this.scale),
                        (y.x = (o.x || 0) * this.scale),
                        (y.y = (o.y || 0) * this.scale),
                        (y.rotation = o.rotation || 0),
                        (y.scaleX = o.hasOwnProperty("scaleX") ? o.scaleX : 1),
                        (y.scaleY = o.hasOwnProperty("scaleY") ? o.scaleY : 1),
                        (y.inheritScale = !o.hasOwnProperty("inheritScale") || o.inheritScale),
                        (y.inheritRotation = !o.hasOwnProperty("inheritRotation") || o.inheritRotation),
                        (n.bones[i] = y);
                }
                var s = t.ik;
                if (s)
                    for (i = 0, r = s.length; i < r; i++) {
                        for (var h, l = s[i], u = new spine.IkConstraintData(l.name), c = 0, F = (h = l.bones).length; c < F; c++) {
                            var d = n.findBone(h[c]);
                            if (!d) throw "IK bone not found: " + h[c];
                            u.bones[c] = d;
                        }
                        if (((u.target = n.findBone(l.target)), !u.target)) throw "Target bone not found: " + l.target;
                        (u.bendDirection = !l.hasOwnProperty("bendPositive") || l.bendPositive ? 1 : -1), (u.mix = l.hasOwnProperty("mix") ? l.mix : 1), (n.ikConstraints[i] = u);
                    }
                var p = t.transform;
                if (p)
                    for (i = 0, r = p.length; i < r; i++) {
                        var f = p[i],
                            m = new spine.TransformConstraintData(f.name);
                        if (((m.bone = n.findBone(f.bone)), !m.bone)) throw "Bone not found: " + f.bone;
                        if (((m.target = n.findBone(f.target)), !m.target)) throw "Target bone not found: " + f.target;
                        (m.mix = f.hasOwnProperty("translateMix") ? l.translateMix : 1), (m.x = (f.x || 0) * this.scale), (m.y = (f.y || 0) * this.scale), (n.transformConstraints[i] = m);
                    }
                for (var g = t.slots, i = 0, r = g.length; i < r; i++) {
                    var y,
                        v = g[i];
                    if (!(y = n.findBone(v.bone))) throw "Slot bone not found: " + v.bone;
                    var w = new spine.SlotData(v.name, y),
                        b = v.color;
                    b && ((w.r = this.toColor(b, 0)), (w.g = this.toColor(b, 1)), (w.b = this.toColor(b, 2)), (w.a = this.toColor(b, 3))),
                        (w.attachmentName = v.attachment),
                        (w.blendMode = spine.BlendMode[v.blend || "normal"]),
                        (n.slots[i] = w);
                }
                var S,
                    A = t.skins;
                for (S in A)
                    if (A.hasOwnProperty(S)) {
                        var x,
                            _ = A[S],
                            k = new spine.Skin(S);
                        for (x in _)
                            if (_.hasOwnProperty(x)) {
                                var T,
                                    P,
                                    R = n.findSlotIndex(x),
                                    C = _[x];
                                for (T in C) !C.hasOwnProperty(T) || ((P = this.readAttachment(k, R, T, C[T])) && k.addAttachment(R, T, P));
                            }
                        "default" == (n.skins[n.skins.length] = k).name && (n.defaultSkin = k);
                    }
                for (i = 0, r = this.linkedMeshes.length; i < r; i++) {
                    var O = this.linkedMeshes[i];
                    if (!(k = O.skin ? n.findSkin(O.skin) : n.defaultSkin)) throw "Skin not found: " + O.skin;
                    if (!(a = k.getAttachment(O.slotIndex, O.parent))) throw "Parent mesh not found: " + O.parent;
                    O.mesh.setParentMesh(a), O.mesh.updateUVs();
                }
                this.linkedMeshes.length = 0;
                var D,
                    M,
                    E,
                    I = t.events;
                for (D in I) I.hasOwnProperty(D) && ((M = I[D]), ((E = new spine.EventData(D)).intValue = M.int || 0), (E.floatValue = M.float || 0), (E.stringValue = M.string || null), (n.events[n.events.length] = E));
                var B,
                    L = t.animations;
                for (B in L) L.hasOwnProperty(B) && this.readAnimation(B, L[B], n);
                return n;
            },
            readAttachment: function (t, e, n, i) {
                n = i.name || n;
                var r,
                    o = i.type || "region",
                    a = ((o = spine.AttachmentType[(o = "skinnedmesh" == o ? "weightedmesh" : o)]), i.path || n),
                    s = this.scale;
                switch (o) {
                    case spine.AttachmentType.region:
                        var h = this.attachmentLoader.newRegionAttachment(t, n, a);
                        if (!h) return null;
                        (h.path = a),
                            (h.x = (i.x || 0) * s),
                            (h.y = (i.y || 0) * s),
                            (h.scaleX = i.hasOwnProperty("scaleX") ? i.scaleX : 1),
                            (h.scaleY = i.hasOwnProperty("scaleY") ? i.scaleY : 1),
                            (h.rotation = i.rotation || 0),
                            (h.width = (i.width || 0) * s),
                            (h.height = (i.height || 0) * s);
                        var l = i.color;
                        return l && ((h.r = this.toColor(l, 0)), (h.g = this.toColor(l, 1)), (h.b = this.toColor(l, 2)), (h.a = this.toColor(l, 3))), h.updateOffset(), h;
                    case spine.AttachmentType.mesh:
                    case spine.AttachmentType.linkedmesh:
                        return (r = this.attachmentLoader.newMeshAttachment(t, n, a))
                            ? ((r.path = a),
                              (l = i.color) && ((r.r = this.toColor(l, 0)), (r.g = this.toColor(l, 1)), (r.b = this.toColor(l, 2)), (r.a = this.toColor(l, 3))),
                              (r.width = (i.width || 0) * s),
                              (r.height = (i.height || 0) * s),
                              i.parent
                                  ? ((r.inheritFFD = !i.hasOwnProperty("ffd") || i.ffd), (this.linkedMeshes[this.linkedMeshes.length] = { mesh: r, skin: i.skin, slotIndex: e, parent: i.parent }))
                                  : ((r.vertices = this.getFloatArray(i, "vertices", s)),
                                    (r.triangles = this.getUint32Array(i, "triangles")),
                                    (r.regionUVs = this.getFloatArray(i, "uvs", 1)),
                                    r.updateUVs(),
                                    (r.hullLength = 2 * (i.hull || 0)),
                                    i.edges && (r.edges = this.getUint16Array(i, "edges"))),
                              r)
                            : null;
                    case spine.AttachmentType.weightedmesh:
                    case spine.AttachmentType.weightedlinkedmesh:
                        if (!(r = this.attachmentLoader.newWeightedMeshAttachment(t, n, a))) return null;
                        if (
                            ((r.path = a),
                            (l = i.color) && ((r.r = this.toColor(l, 0)), (r.g = this.toColor(l, 1)), (r.b = this.toColor(l, 2)), (r.a = this.toColor(l, 3))),
                            (r.width = (i.width || 0) * s),
                            (r.height = (i.height || 0) * s),
                            i.parent)
                        )
                            (r.inheritFFD = !i.hasOwnProperty("ffd") || i.ffd), (this.linkedMeshes[this.linkedMeshes.length] = { mesh: r, skin: i.skin, slotIndex: e, parent: i.parent });
                        else {
                            for (
                                var h = this.getFloatArray(i, "uvs", 1), u = this.getFloatArray(i, "vertices", 1), c = new spine.Float32Array(3 * h.length * 3), d = new spine.Uint32Array(3 * h.length), p = 0, f = 0, m = 0, g = u.length;
                                p < g;

                            )
                                for (var y = 0 | u[p++], v = p + 4 * (d[f++] = y); p < v; ) (d[f++] = u[p]), (c[m++] = u[p + 1] * s), (c[m++] = u[p + 2] * s), (c[m++] = u[p + 3]), (p += 4);
                            (r.bones = d), (r.weights = c), (r.triangles = this.getUint32Array(i, "triangles")), (r.regionUVs = h), r.updateUVs(), (r.hullLength = 2 * (i.hull || 0)), i.edges && (r.edges = this.getUint16Array(i, "edges"));
                        }
                        return r;
                    case spine.AttachmentType.boundingbox:
                        var w = this.attachmentLoader.newBoundingBoxAttachment(t, n),
                            u = i.vertices;
                        w.vertices = new spine.Float32Array(u.length);
                        for (p = 0, g = u.length; p < g; p++) w.vertices[p] = u[p] * s;
                        return w;
                }
                throw "Unknown attachment type: " + o;
            },
            readAnimation: function (F, t, e) {
                var n,
                    i = [],
                    r = 0,
                    o = t.slots;
                for (n in o)
                    if (o.hasOwnProperty(n)) {
                        var a = o[n],
                            s = e.findSlotIndex(n);
                        for (y in a)
                            if (a.hasOwnProperty(y)) {
                                var h = a[y];
                                if ("color" == y) {
                                    (b = new spine.ColorTimeline(h.length)).slotIndex = s;
                                    for (var l = 0, u = 0, c = h.length; u < c; u++) {
                                        var d = (p = h[u]).color,
                                            R = this.toColor(d, 0),
                                            N = this.toColor(d, 1),
                                            j = this.toColor(d, 2),
                                            d = this.toColor(d, 3);
                                        b.setFrame(l, p.time, R, N, j, d), this.readCurve(b, l, p), l++;
                                    }
                                    (i[i.length] = b), (r = Math.max(r, b.frames[5 * b.getFrameCount() - 5]));
                                } else {
                                    if ("attachment" != y) throw "Invalid timeline type for a slot: " + y + " (" + n + ")";
                                    (b = new spine.AttachmentTimeline(h.length)).slotIndex = s;
                                    for (l = 0, u = 0, c = h.length; u < c; u++) {
                                        var p = h[u];
                                        b.setFrame(l++, p.time, p.name);
                                    }
                                    (i[i.length] = b), (r = Math.max(r, b.frames[b.getFrameCount() - 1]));
                                }
                            }
                    }
                var f,
                    m = t.bones;
                for (f in m)
                    if (m.hasOwnProperty(f)) {
                        var g = e.findBoneIndex(f);
                        if (-1 == g) throw "Bone not found: " + f;
                        var y,
                            U = m[f];
                        for (y in U)
                            if (U.hasOwnProperty(y)) {
                                h = U[y];
                                if ("rotate" == y) {
                                    (b = new spine.RotateTimeline(h.length)).boneIndex = g;
                                    for (l = 0, u = 0, c = h.length; u < c; u++) {
                                        p = h[u];
                                        b.setFrame(l, p.time, p.angle), this.readCurve(b, l, p), l++;
                                    }
                                    (i[i.length] = b), (r = Math.max(r, b.frames[2 * b.getFrameCount() - 2]));
                                } else {
                                    if ("translate" != y && "scale" != y) throw "Invalid timeline type for a bone: " + y + " (" + f + ")";
                                    var z = 1;
                                    "scale" == y ? (b = new spine.ScaleTimeline(h.length)) : ((b = new spine.TranslateTimeline(h.length)), (z = this.scale)), (b.boneIndex = g);
                                    for (l = 0, u = 0, c = h.length; u < c; u++) {
                                        var W = ((p = h[u]).x || 0) * z,
                                            Y = (p.y || 0) * z;
                                        b.setFrame(l, p.time, W, Y), this.readCurve(b, l, p), l++;
                                    }
                                    (i[i.length] = b), (r = Math.max(r, b.frames[3 * b.getFrameCount() - 3]));
                                }
                            }
                    }
                var v,
                    G = t.ik;
                for (v in G)
                    if (G.hasOwnProperty(v)) {
                        var X = e.findIkConstraint(v),
                            h = G[v];
                        (b = new spine.IkConstraintTimeline(h.length)).ikConstraintIndex = e.ikConstraints.indexOf(X);
                        for (l = 0, u = 0, c = h.length; u < c; u++) {
                            var V = (p = h[u]).hasOwnProperty("mix") ? p.mix : 1,
                                H = !p.hasOwnProperty("bendPositive") || p.bendPositive ? 1 : -1;
                            b.setFrame(l, p.time, V, H), this.readCurve(b, l, p), l++;
                        }
                        (i[i.length] = b), (r = Math.max(r, b.frames[3 * b.getFrameCount() - 3]));
                    }
                var q,
                    K = t.ffd;
                for (q in K) {
                    var J = e.findSkin(q);
                    for (n in (a = K[q])) {
                        var w,
                            s = e.findSlotIndex(n),
                            Z = a[n];
                        for (w in Z) {
                            var h = Z[w],
                                b = new spine.FfdTimeline(h.length),
                                S = J.getAttachment(s, w);
                            if (!S) throw "FFD attachment not found: " + w;
                            b.slotIndex = s;
                            for (var Q = (b.attachment = S).type == spine.AttachmentType.mesh, A = Q ? S.vertices.length : (S.weights.length / 3) * 2, l = 0, u = 0, c = h.length; u < c; u++) {
                                if ((p = h[u]).vertices) {
                                    var x,
                                        $ = p.vertices,
                                        tt = (((x = new spine.Float32Array(A)).length = A), p.offset || 0),
                                        _ = $.length;
                                    if (1 == this.scale) for (var k = 0; k < _; k++) x[k + tt] = $[k];
                                    else for (k = 0; k < _; k++) x[k + tt] = $[k] * this.scale;
                                    if (Q) for (var et = S.vertices, k = 0, _ = x.length; k < _; k++) x[k] += et[k];
                                } else Q ? (x = S.vertices) : ((x = new spine.Float32Array(A)).length = A);
                                b.setFrame(l, p.time, x), this.readCurve(b, l, p), l++;
                            }
                            (i[i.length] = b), (r = Math.max(r, b.frames[b.getFrameCount() - 1]));
                        }
                    }
                }
                var T = t.drawOrder;
                if ((T = T || t.draworder)) {
                    for (var b = new spine.DrawOrderTimeline(T.length), P = e.slots.length, l = 0, u = 0, c = T.length; u < c; u++) {
                        var nt = T[u],
                            C = null;
                        if (nt.offsets) {
                            for (k = ((C = new spine.Uint32Array(P)).length = P) - 1; 0 <= k; k--) C[k] = 4294967295;
                            var O = nt.offsets,
                                D = new spine.Uint32Array(P - O.length);
                            D.length = P - O.length;
                            for (var M = 0, it = 0, k = 0, _ = O.length; k < _; k++) {
                                var rt = O[k];
                                if (-1 == (s = e.findSlotIndex(rt.slot))) throw "Slot not found: " + rt.slot;
                                for (; M != s; ) D[it++] = M++;
                                C[M + rt.offset] = M++;
                            }
                            for (; M < P; ) D[it++] = M++;
                            for (k = P - 1; 0 <= k; k--) 4294967295 == C[k] && (C[k] = D[--it]);
                        }
                        b.setFrame(l++, nt.time, C);
                    }
                    (i[i.length] = b), (r = Math.max(r, b.frames[b.getFrameCount() - 1]));
                }
                var E = t.events;
                if (E) {
                    for (b = new spine.EventTimeline(E.length), l = 0, u = 0, c = E.length; u < c; u++) {
                        var I = E[u],
                            B = e.findEvent(I.name);
                        if (!B) throw "Event not found: " + I.name;
                        var L = new spine.Event(I.time, B);
                        (L.intValue = I.hasOwnProperty("int") ? I.int : B.intValue),
                            (L.floatValue = I.hasOwnProperty("float") ? I.float : B.floatValue),
                            (L.stringValue = I.hasOwnProperty("string") ? I.string : B.stringValue),
                            b.setFrame(l++, L);
                    }
                    (i[i.length] = b), (r = Math.max(r, b.frames[b.getFrameCount() - 1]));
                }
                e.animations[e.animations.length] = new spine.Animation(F, i, r);
            },
            readCurve: function (t, e, n) {
                n = n.curve;
                n ? ("stepped" == n ? t.curves.setStepped(e) : n instanceof Array && t.curves.setCurve(e, n[0], n[1], n[2], n[3])) : t.curves.setLinear(e);
            },
            toColor: function (t, e) {
                if (8 != t.length) throw "Color hexidecimal length must be 8, recieved: " + t;
                return parseInt(t.substring(2 * e, 2 * e + 2), 16) / 255;
            },
            getFloatArray: function (t, e, n) {
                var i = t[e],
                    r = new spine.Float32Array(i.length),
                    o = 0,
                    a = i.length;
                if (1 == n) for (; o < a; o++) r[o] = i[o];
                else for (; o < a; o++) r[o] = i[o] * n;
                return r;
            },
            getUint32Array: function (t, e) {
                for (var n = t[e], i = new spine.Uint32Array(n.length), r = 0, o = n.length; r < o; r++) i[r] = 0 | n[r];
                return i;
            },
            getUint16Array: function (t, e) {
                for (var n = t[e], i = new spine.Uint16Array(n.length), r = 0, o = n.length; r < o; r++) i[r] = 0 | n[r];
                return i;
            },
        }),
        (spine.Atlas = function (t, e) {
            (this.textureLoader = e), (this.pages = []), (this.regions = []);
            var n = new spine.AtlasReader(t),
                i = [];
            i.length = 4;
            for (var r = null; ; ) {
                var o,
                    a,
                    s,
                    h,
                    l,
                    u = n.readLine();
                if (null === u) break;
                (u = n.trim(u)).length
                    ? r
                        ? (((o = new spine.AtlasRegion()).name = u),
                          (o.page = r),
                          (o.rotate = "true" == n.readValue()),
                          n.readTuple(i),
                          (l = parseInt(i[0])),
                          (a = parseInt(i[1])),
                          n.readTuple(i),
                          (s = parseInt(i[0])),
                          (h = parseInt(i[1])),
                          (o.u = l / r.width),
                          (o.v = a / r.height),
                          o.rotate ? ((o.u2 = (l + h) / r.width), (o.v2 = (a + s) / r.height)) : ((o.u2 = (l + s) / r.width), (o.v2 = (a + h) / r.height)),
                          (o.x = l),
                          (o.y = a),
                          (o.width = Math.abs(s)),
                          (o.height = Math.abs(h)),
                          4 == n.readTuple(i) &&
                              ((o.splits = [parseInt(i[0]), parseInt(i[1]), parseInt(i[2]), parseInt(i[3])]), 4 == n.readTuple(i) && ((o.pads = [parseInt(i[0]), parseInt(i[1]), parseInt(i[2]), parseInt(i[3])]), n.readTuple(i))),
                          (o.originalWidth = parseInt(i[0])),
                          (o.originalHeight = parseInt(i[1])),
                          n.readTuple(i),
                          (o.offsetX = parseInt(i[0])),
                          (o.offsetY = parseInt(i[1])),
                          (o.index = parseInt(n.readValue())),
                          (this.regions[this.regions.length] = o))
                        : (((r = new spine.AtlasPage()).name = u),
                          2 == n.readTuple(i) && ((r.width = parseInt(i[0])), (r.height = parseInt(i[1])), n.readTuple(i)),
                          (r.format = spine.Atlas.Format[i[0]]),
                          n.readTuple(i),
                          (r.minFilter = spine.Atlas.TextureFilter[i[0]]),
                          (r.magFilter = spine.Atlas.TextureFilter[i[1]]),
                          (l = n.readValue()),
                          (r.uWrap = spine.Atlas.TextureWrap.clampToEdge),
                          (r.vWrap = spine.Atlas.TextureWrap.clampToEdge),
                          "x" == l ? (r.uWrap = spine.Atlas.TextureWrap.repeat) : "y" == l ? (r.vWrap = spine.Atlas.TextureWrap.repeat) : "xy" == l && (r.uWrap = r.vWrap = spine.Atlas.TextureWrap.repeat),
                          e.load(r, u, this),
                          (this.pages[this.pages.length] = r))
                    : (r = null);
            }
        }),
        (spine.Atlas.prototype = {
            findRegion: function (t) {
                for (var e = this.regions, n = 0, i = e.length; n < i; n++) if (e[n].name == t) return e[n];
                return null;
            },
            dispose: function () {
                for (var t = this.pages, e = 0, n = t.length; e < n; e++) this.textureLoader.unload(t[e].rendererObject);
            },
            updateUVs: function (t) {
                for (var e = this.regions, n = 0, i = e.length; n < i; n++) {
                    var r = e[n];
                    r.page == t &&
                        ((r.u = r.x / t.width), (r.v = r.y / t.height), r.rotate ? ((r.u2 = (r.x + r.height) / t.width), (r.v2 = (r.y + r.width) / t.height)) : ((r.u2 = (r.x + r.width) / t.width), (r.v2 = (r.y + r.height) / t.height)));
                }
            },
        }),
        (spine.Atlas.Format = { alpha: 0, intensity: 1, luminanceAlpha: 2, rgb565: 3, rgba4444: 4, rgb888: 5, rgba8888: 6 }),
        (spine.Atlas.TextureFilter = { nearest: 0, linear: 1, mipMap: 2, mipMapNearestNearest: 3, mipMapLinearNearest: 4, mipMapNearestLinear: 5, mipMapLinearLinear: 6 }),
        (spine.Atlas.TextureWrap = { mirroredRepeat: 0, clampToEdge: 1, repeat: 2 }),
        (spine.AtlasPage = function () {}),
        (spine.AtlasPage.prototype = { name: null, format: null, minFilter: null, magFilter: null, uWrap: null, vWrap: null, rendererObject: null, width: 0, height: 0 }),
        (spine.AtlasRegion = function () {}),
        (spine.AtlasRegion.prototype = { page: null, name: null, x: 0, y: 0, width: 0, height: 0, u: 0, v: 0, u2: 0, v2: 0, offsetX: 0, offsetY: 0, originalWidth: 0, originalHeight: 0, index: 0, rotate: !1, splits: null, pads: null }),
        (spine.AtlasReader = function (t) {
            this.lines = t.split(/\r\n|\r|\n/);
        }),
        (spine.AtlasReader.prototype = {
            index: 0,
            trim: function (t) {
                return t.replace(/^\s+|\s+$/g, "");
            },
            readLine: function () {
                return this.index >= this.lines.length ? null : this.lines[this.index++];
            },
            readValue: function () {
                var t = this.readLine(),
                    e = t.indexOf(":");
                if (-1 == e) throw "Invalid line: " + t;
                return this.trim(t.substring(e + 1));
            },
            readTuple: function (t) {
                var e = this.readLine(),
                    n = e.indexOf(":");
                if (-1 == n) throw "Invalid line: " + e;
                for (var i = 0, r = n + 1; i < 3; i++) {
                    var o = e.indexOf(",", r);
                    if (-1 == o) break;
                    (t[i] = this.trim(e.substr(r, o - r))), (r = o + 1);
                }
                return (t[i] = this.trim(e.substring(r))), i + 1;
            },
        }),
        (spine.AtlasAttachmentLoader = function (t) {
            this.atlas = t;
        }),
        (spine.AtlasAttachmentLoader.prototype = {
            newRegionAttachment: function (t, e, n) {
                var i,
                    r = this.atlas.findRegion(n);
                if (r)
                    return (
                        ((i = new spine.RegionAttachment(e)).rendererObject = r),
                        i.setUVs(r.u, r.v, r.u2, r.v2, r.rotate),
                        (i.regionOffsetX = r.offsetX),
                        (i.regionOffsetY = r.offsetY),
                        (i.regionWidth = r.width),
                        (i.regionHeight = r.height),
                        (i.regionOriginalWidth = r.originalWidth),
                        (i.regionOriginalHeight = r.originalHeight),
                        i
                    );
                throw "Region not found in atlas: " + n + " (region attachment: " + e + ")";
            },
            newMeshAttachment: function (t, e, n) {
                var i,
                    r = this.atlas.findRegion(n);
                if (r)
                    return (
                        ((i = new spine.MeshAttachment(e)).rendererObject = r),
                        (i.regionU = r.u),
                        (i.regionV = r.v),
                        (i.regionU2 = r.u2),
                        (i.regionV2 = r.v2),
                        (i.regionRotate = r.rotate),
                        (i.regionOffsetX = r.offsetX),
                        (i.regionOffsetY = r.offsetY),
                        (i.regionWidth = r.width),
                        (i.regionHeight = r.height),
                        (i.regionOriginalWidth = r.originalWidth),
                        (i.regionOriginalHeight = r.originalHeight),
                        i
                    );
                throw "Region not found in atlas: " + n + " (mesh attachment: " + e + ")";
            },
            newWeightedMeshAttachment: function (t, e, n) {
                var i,
                    r = this.atlas.findRegion(n);
                if (r)
                    return (
                        ((i = new spine.WeightedMeshAttachment(e)).rendererObject = r),
                        (i.regionU = r.u),
                        (i.regionV = r.v),
                        (i.regionU2 = r.u2),
                        (i.regionV2 = r.v2),
                        (i.regionRotate = r.rotate),
                        (i.regionOffsetX = r.offsetX),
                        (i.regionOffsetY = r.offsetY),
                        (i.regionWidth = r.width),
                        (i.regionHeight = r.height),
                        (i.regionOriginalWidth = r.originalWidth),
                        (i.regionOriginalHeight = r.originalHeight),
                        i
                    );
                throw "Region not found in atlas: " + n + " (weighted mesh attachment: " + e + ")";
            },
            newBoundingBoxAttachment: function (t, e) {
                return new spine.BoundingBoxAttachment(e);
            },
        }),
        (spine.SkeletonBounds = function () {
            (this.polygonPool = []), (this.polygons = []), (this.boundingBoxes = []);
        }),
        (spine.SkeletonBounds.prototype = {
            minX: 0,
            minY: 0,
            maxX: 0,
            maxY: 0,
            update: function (t, e) {
                for (var n = t.slots, i = n.length, r = t.x, o = t.y, a = this.boundingBoxes, s = this.polygonPool, h = this.polygons, l = (a.length = 0), u = h.length; l < u; l++) s[s.length] = h[l];
                for (l = h.length = 0; l < i; l++) {
                    var c,
                        d,
                        p = n[l],
                        f = p.attachment;
                    f.type == spine.AttachmentType.boundingbox &&
                        ((a[a.length] = f), 0 < (d = s.length) ? ((c = s[d - 1]), s.splice(d - 1, 1)) : (c = new spine.Float32Array()), ((h[h.length] = c).length = f.vertices.length), f.computeWorldVertices(r, o, p.bone, c));
                }
                e && this.aabbCompute();
            },
            aabbCompute: function () {
                for (var t = this.polygons, e = Number.MAX_VALUE, n = Number.MAX_VALUE, i = -Number.MAX_VALUE, r = -Number.MAX_VALUE, o = 0, a = t.length; o < a; o++)
                    for (var s = t[o], h = 0, l = s.length; h < l; h += 2) var u = s[h], c = s[h + 1], e = Math.min(e, u), n = Math.min(n, c), i = Math.max(i, u), r = Math.max(r, c);
                (this.minX = e), (this.minY = n), (this.maxX = i), (this.maxY = r);
            },
            aabbContainsPoint: function (t, e) {
                return t >= this.minX && t <= this.maxX && e >= this.minY && e <= this.maxY;
            },
            aabbIntersectsSegment: function (t, e, n, i) {
                var r = this.minX,
                    o = this.minY,
                    a = this.maxX,
                    s = this.maxY;
                return (
                    !((t <= r && n <= r) || (e <= o && i <= o) || (a <= t && a <= n) || (s <= e && s <= i)) &&
                    ((o < (n = (i = (i - e) / (n - t)) * (r - t) + e) && n < s) || (o < (n = i * (a - t) + e) && n < s) || (r < (n = (o - e) / i + t) && n < a) || (r < (n = (s - e) / i + t) && n < a))
                );
            },
            aabbIntersectsSkeleton: function (t) {
                return this.minX < t.maxX && this.maxX > t.minX && this.minY < t.maxY && this.maxY > t.minY;
            },
            containsPoint: function (t, e) {
                for (var n = this.polygons, i = 0, r = n.length; i < r; i++) if (this.polygonContainsPoint(n[i], t, e)) return this.boundingBoxes[i];
                return null;
            },
            intersectsSegment: function (t, e, n, i) {
                for (var r = this.polygons, o = 0, a = r.length; o < a; o++) if (r[o].intersectsSegment(t, e, n, i)) return this.boundingBoxes[o];
                return null;
            },
            polygonContainsPoint: function (t, e, n) {
                for (var i = t.length, r = i - 2, o = !1, a = 0; a < i; a += 2) {
                    var s,
                        h = t[a + 1],
                        l = t[r + 1];
                    !((h < n && n <= l) || (l < n && n <= h)) || ((s = t[a]) + ((n - h) / (l - h)) * (t[r] - s) < e && (o = !o)), (r = a);
                }
                return o;
            },
            polygonIntersectsSegment: function (t, e, n, i, r) {
                for (var o = t.length, a = e - i, s = n - r, h = e * r - n * i, l = t[o - 2], u = t[o - 1], c = 0; c < o; c += 2) {
                    var d = t[c],
                        p = t[c + 1],
                        f = l * p - u * d,
                        m = l - d,
                        g = u - p,
                        y = a * g - s * m,
                        m = (h * m - a * f) / y;
                    if (((l <= m && m <= d) || (d <= m && m <= l)) && ((e <= m && m <= i) || (i <= m && m <= e))) {
                        m = (h * g - s * f) / y;
                        if (((u <= m && m <= p) || (p <= m && m <= u)) && ((n <= m && m <= r) || (r <= m && m <= n))) return !0;
                    }
                    (l = d), (u = p);
                }
                return !1;
            },
            getPolygon: function (t) {
                t = this.boundingBoxes.indexOf(t);
                return -1 == t ? null : this.polygons[t];
            },
            getWidth: function () {
                return this.maxX - this.minX;
            },
            getHeight: function () {
                return this.maxY - this.minY;
            },
        }),
        (this && this.__extends) ||
            function (t, e) {
                function n() {
                    this.constructor = t;
                }
                for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
                t.prototype = null === e ? Object.create(e) : ((n.prototype = e.prototype), new n());
            }),
    __extends =
        (!(function (o) {
            (n = Phaser.Plugin),
                __extends(e, n),
                (e.prototype.addSpineLoader = function () {
                    Phaser.Loader.prototype.spine = function (t, e, n) {
                        var r = this,
                            o = t + "Atlas",
                            a = { atlas: o, basePath: "" === e.substring(0, e.lastIndexOf("/")) ? "." : e.substring(0, e.lastIndexOf("/")), variants: void 0 };
                        void 0 === n ? (n = [""]) : (a.variants = n),
                            n.forEach(function (i) {
                                r.onFileComplete.add(function (t, e) {
                                    e === o &&
                                        new spine.Atlas(r.game.cache.getText(e), {
                                            load: function (t, e, n) {
                                                r.image(e, a.basePath + "/" + e.substr(0, e.lastIndexOf(".")) + i + ".png");
                                            },
                                        });
                                }),
                                    r.text(o, e.substr(0, e.lastIndexOf(".")) + i + ".atlas");
                            }),
                            this.json(t, e),
                            this.game.cache.addSpine(t, a);
                    };
                }),
                (e.prototype.addSpineFactory = function () {
                    (Phaser.GameObjectFactory.prototype.spine = function (t, e, n, i, r) {
                        void 0 === r && (r = this.world);
                        n = new o.Spine(this.game, n, i);
                        return n.setToSetupPose(), (n.position.x = t), (n.position.y = e), r.add(n);
                    }),
                        (Phaser.GameObjectCreator.prototype.spine = function (t, e, n, i, r) {
                            return new o.Spine(this.game, n, i);
                        });
                }),
                (e.prototype.addSpineCache = function () {
                    (Phaser.Cache.prototype.spine = {}),
                        (Phaser.Cache.prototype.addSpine = function (t, e) {
                            this.spine[t] = e;
                        }),
                        (Phaser.Cache.prototype.getSpine = function (t) {
                            return this.spine.hasOwnProperty(t), this.spine[t];
                        });
                });
            var n,
                t = e;
            function e(t, e) {
                t = n.call(this, t, e) || this;
                return t.addSpineCache(), t.addSpineFactory(), t.addSpineLoader(), t;
            }
            (t.RESOLUTION_REGEXP = /@(.+)x/), (o.SpinePlugin = t);
        })((PhaserSpine = PhaserSpine || {})),
        (Phaser.Rope.prototype.postUpdate = function () {}),
        (spine.Bone.yDown = !0),
        !(function (d) {
            (p = Phaser.Group),
                __extends(e, p),
                Object.defineProperty(e.prototype, "autoUpdate", {
                    get: function () {
                        return this.updateTransform === d.Spine.prototype.autoUpdateTransform;
                    },
                    set: function (t) {
                        this.updateTransform = t ? d.Spine.prototype.autoUpdateTransform : PIXI.DisplayObjectContainer.prototype.updateTransform;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                (e.prototype.getScaleFromVariant = function (t) {
                    t = d.SpinePlugin.RESOLUTION_REGEXP.exec(t);
                    return t ? parseFloat(t[1]) : 1;
                }),
                (e.prototype.setTint = function (t) {
                    this.globalTint = t;
                    for (var e = this.skeleton.slots, n = 0; n < e.length; n++) {
                        var i = e[n];
                        i.currentSprite && (i.currentSprite.tint = t);
                    }
                }),
                (e.prototype.update = function (t) {
                    if (void 0 !== t) {
                        this.state.update(t), this.state.apply(this.skeleton), this.skeleton.updateWorldTransform();
                        for (var e = this.skeleton.drawOrder, n = this.skeleton.slots, i = 0, r = e.length; i < r; i++) void 0 !== e[i].currentSprite && (this.children[i] = e[i].currentSprite.parent);
                        for (i = 0, r = n.length; i < r; i++) {
                            var o = n[i],
                                a = o.attachment,
                                s = this.slotContainers[i];
                            if (a) {
                                var h = a.type;
                                if (h === spine.AttachmentType.region) {
                                    !a.rendererObject ||
                                        (o.currentSpriteName && o.currentSpriteName === a.name) ||
                                        ((l = a.rendererObject.name),
                                        void 0 !== o.currentSprite && (o.currentSprite.visible = !1),
                                        (o.sprites = o.sprites || {}),
                                        void 0 !== o.sprites[l] ? (o.sprites[l].visible = !0) : ((u = this.createSprite(o, a)), s.add(u)),
                                        (o.currentSprite = o.sprites[l]),
                                        (o.currentSpriteName = l));
                                    var l,
                                        u = o.bone;
                                    (s.position.x = a.x * u.a + a.y * u.b + u.worldX),
                                        (s.position.y = a.x * u.c + a.y * u.d + u.worldY),
                                        (s.scale.x = u.getWorldScaleX()),
                                        (s.scale.y = u.getWorldScaleY()),
                                        (s.rotation = ((u.getWorldRotationX() - a.rotation) * Math.PI) / 180),
                                        u.getWorldScaleY() < 0 && (s.scale.y = -s.scale.y),
                                        u.getWorldScaleX() < 0 && (s.scale.x = -s.scale.x),
                                        (u.getWorldScaleY() < 0 || u.getWorldScaleX() < 0) && (s.rotation = -s.rotation),
                                        (o.currentSprite.blendMode = o.blendMode),
                                        this.globalTint ||
                                            (o.currentSprite.tint = o.currentSprite.tint = parseInt(
                                                Phaser.Color.componentToHex(255 * o.r).substring(0, 2) + Phaser.Color.componentToHex(255 * o.g).substring(0, 2) + Phaser.Color.componentToHex(255 * o.b).substring(0, 2),
                                                16
                                            ));
                                } else {
                                    if (h !== spine.AttachmentType.weightedmesh && h !== spine.AttachmentType.weightedlinkedmesh) {
                                        s.visible = !1;
                                        continue;
                                    }
                                    (o.currentMeshName && o.currentMeshName === a.name) ||
                                        ((l = a.name),
                                        void 0 !== o.currentMesh && (o.currentMesh.visible = !1),
                                        (o.meshes = o.meshes || {}),
                                        void 0 !== o.meshes[l] ? (o.meshes[l].visible = !0) : ((h = this.createMesh(o, a)), s.add(h)),
                                        (o.currentMesh = o.meshes[l]),
                                        (o.currentMeshName = l)),
                                        a.computeWorldVertices(o.bone.skeleton.x, o.bone.skeleton.y, o, o.currentMesh.vertices);
                                }
                                (s.visible = !0), (s.alpha = o.a);
                            } else s.visible = !1;
                        }
                    }
                }),
                (e.prototype.destroy = function (t, e) {
                    p.prototype.destroy.call(this, !0, e);
                }),
                (e.prototype.autoUpdateTransform = function () {
                    var t;
                    e.globalAutoUpdate ? ((this.lastTime = this.lastTime || Date.now()), (t = 0.001 * (Date.now() - this.lastTime)), (this.lastTime = Date.now()), this.update(t)) : (this.lastTime = 0),
                        PIXI.DisplayObjectContainer.prototype.updateTransform.call(this);
                }),
                (e.prototype.createSprite = function (t, e) {
                    var n = e.rendererObject,
                        i = n.page.rendererObject,
                        r = new PIXI.Rectangle(n.x, n.y, n.rotate ? n.height : n.width, n.rotate ? n.width : n.height),
                        i = new PIXI.Texture(i, r),
                        r = new Phaser.Sprite(this.game, 0, 0, i),
                        i = n.rotate ? 0.5 * Math.PI : 0;
                    return (
                        (r.scale.x = ((n.width / n.originalWidth) * e.scaleX) / this.imageScale),
                        (r.scale.y = ((n.height / n.originalHeight) * e.scaleY) / this.imageScale),
                        (r.rotation = i),
                        (r.anchor.x = (0.5 * n.originalWidth - n.offsetX) / n.width),
                        (r.anchor.y = 1 - (0.5 * n.originalHeight - n.offsetY) / n.height),
                        (r.alpha = e.a),
                        n.rotate && ((i = r.scale.x), (r.scale.x = r.scale.y), (r.scale.y = i)),
                        (t.sprites = t.sprites || {}),
                        (t.sprites[n.name] = r)
                    );
                }),
                (e.prototype.createMesh = function (t, e) {
                    var n = e.rendererObject.page.rendererObject,
                        n = new PIXI.Texture(n),
                        n = new Phaser.Rope(this.game, 0, 0, n);
                    return (n.drawMode = 1), (n.canvasPadding = 1.5), (n.vertices = new spine.Float32Array(e.uvs.length)), (n.uvs = e.uvs), (n.indices = e.triangles), (n.alpha = e.a), (t.meshes = t.meshes || {}), (t.meshes[e.name] = n);
                }),
                (e.prototype.setMixByName = function (t, e, n) {
                    this.stateData.setMixByName(t, e, n);
                }),
                (e.prototype.setAnimationByName = function (t, e, n) {
                    void 0 === n && (n = !1);
                    e = this.state.data.skeletonData.findAnimation(e);
                    return e ? this.state.setAnimation(t, e, n) : null;
                }),
                (e.prototype.addAnimationByName = function (t, e, n, i) {
                    void 0 === n && (n = !1), void 0 === i && (i = 0);
                    e = this.state.data.skeletonData.findAnimation(e);
                    return e ? this.state.addAnimation(t, e, n, i) : null;
                }),
                (e.prototype.getCurrentAnimationForTrack = function (t) {
                    return this.state.tracks[t].animation.name;
                }),
                (e.prototype.setSkinByName = function (t) {
                    t = this.skeleton.data.findSkin(t);
                    t && this.skeleton.setSkin(t);
                }),
                (e.prototype.setSkin = function (t) {
                    this.skeleton.setSkin(t);
                }),
                (e.prototype.setToSetupPose = function () {
                    this.skeleton.setToSetupPose();
                }),
                (e.prototype.createCombinedSkin = function (t) {
                    for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                    if (0 !== e.length) {
                        for (var i = new spine.Skin(t), r = 0; r < e.length; r++) {
                            var o,
                                a = this.skeleton.data.findSkin(e[r]);
                            if (!a) return;
                            for (o in a.attachments) {
                                var s = o.split(":"),
                                    h = s[0],
                                    s = s[1],
                                    l = a.attachments[o];
                                if (void 0 === h || void 0 === s) return;
                                void 0 === i.getAttachment(h, s) && i.addAttachment(h, s, l);
                            }
                        }
                        return this.skeleton.data.skins.push(i), i;
                    }
                });
            var p,
                t = e;
            function e(t, e, n) {
                var i = p.call(this, t) || this,
                    r = ((i.imageScale = 1), i.game.cache.getSpine(e)),
                    n = (void 0 !== n && -1 !== r.variants.indexOf(n) ? (i.imageScale = i.getScaleFromVariant(n)) : r.variants && 1 <= r.variants.length && (i.imageScale = i.getScaleFromVariant(r.variants[0])), new d.SpineTextureLoader(t)),
                    r = new spine.Atlas(t.cache.getText(r.atlas), n),
                    n = new spine.AtlasAttachmentLoader(r),
                    r = new spine.SkeletonJson(n);
                if (((i.skeletonData = r.readSkeletonData(t.cache.getJSON(e))), !i.skeletonData)) throw new Error("Spine data must be preloaded using Loader.spine");
                (i.onEvent = new Phaser.Signal()),
                    (i.onComplete = new Phaser.Signal()),
                    (i.onEnd = new Phaser.Signal()),
                    (i.skeleton = new spine.Skeleton(i.skeletonData)),
                    i.skeleton.updateWorldTransform(),
                    (i.stateData = new spine.AnimationStateData(i.skeletonData)),
                    (i.state = new spine.AnimationState(i.stateData)),
                    (i.state.onEvent = i.onEvent.dispatch.bind(i.onEvent)),
                    (i.state.onComplete = i.onComplete.dispatch.bind(i.onComplete)),
                    (i.state.onEnd = i.onEnd.dispatch.bind(i.onEnd)),
                    (i.slotContainers = []);
                for (var o = 0, a = i.skeleton.slots.length; o < a; o++) {
                    var s,
                        h,
                        l = i.skeleton.slots[o],
                        u = l.attachment,
                        c = new Phaser.Group(t);
                    i.slotContainers.push(c),
                        i.add(c),
                        u instanceof spine.RegionAttachment
                            ? ((h = u.rendererObject.name), (s = i.createSprite(l, u)), (l.currentSprite = s), (l.currentSpriteName = h), c.add(s))
                            : u instanceof spine.WeightedMeshAttachment && ((h = i.createMesh(l, u)), (l.currentMesh = h), (l.currentMeshName = u.name), c.add(h));
                }
                return (i.autoUpdate = !0), i;
            }
            (t.globalAutoUpdate = !0), (d.Spine = t);
        })((PhaserSpine = PhaserSpine || {})),
        ((PhaserSpine || (PhaserSpine = {})).SpineTextureLoader = function (t) {
            (this.load = function (t, e, n) {
                e = this.game.make.image(0, 0, e);
                t.rendererObject = e.texture.baseTexture;
            }),
                (this.unload = function (t) {
                    t.destroy();
                }),
                (this.game = t);
        }),
        !(function (t) {
            function e(t) {
                void 0 === t && (t = ""), (this.namespace = ""), (this.forcePromises = !1), this.setNamespace(t);
            }
            (t = t.StorageAdapters || (t.StorageAdapters = {})),
                Object.defineProperty(e.prototype, "length", {
                    get: function () {
                        return null !== this.getNameSpaceMatches() ? this.getNameSpaceMatches().length : 0;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                (e.prototype.key = function (t) {
                    (t = this.getNameSpaceMatches()[t]), (t = this.getCookiesForNameSpace()[t] || null);
                    return this.forcePromises ? this.promisefy(t) : t;
                }),
                (e.prototype.getItem = function (t) {
                    t = this.getCookiesForNameSpace()[t] || null;
                    return this.forcePromises ? this.promisefy(t) : t;
                }),
                (e.prototype.setItem = function (t, e) {
                    if (((document.cookie = encodeURIComponent(this.namespace + t) + "=" + encodeURIComponent(e) + "; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/"), this.forcePromises)) return this.promisefy(null);
                }),
                (e.prototype.removeItem = function (t) {
                    if (((document.cookie = encodeURIComponent(this.namespace + t) + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/"), this.forcePromises)) return this.promisefy(null);
                }),
                (e.prototype.clear = function () {
                    var t,
                        e = this.getCookiesForNameSpace();
                    for (t in e) e.hasOwnProperty(t) && this.removeItem(t);
                    if (this.forcePromises) return this.promisefy(null);
                }),
                (e.prototype.setNamespace = function (t) {
                    if ((t && ((this.namespace = t + ":"), (this.reg = new RegExp("^" + this.namespace + "[a-zA-Z0-9]*", "g"))), this.forcePromises)) return this.promisefy(t);
                }),
                (e.prototype.getNameSpaceMatches = function () {
                    var e = this;
                    return decodeURIComponent(document.cookie)
                        .split("; ")
                        .filter(function (t) {
                            return null !== t.match(e.reg) && 0 < t.match(e.reg).length;
                        });
                }),
                (e.prototype.getCookiesForNameSpace = function () {
                    var e = this,
                        n = {};
                    return (
                        this.getNameSpaceMatches().forEach(function (t) {
                            t = t.replace(e.namespace, "").split("=");
                            n[t[0]] = t[1];
                        }),
                        n
                    );
                }),
                (e.prototype.promisefy = function (n) {
                    return new Promise(function (t, e) {
                        t(n);
                    });
                }),
                (t.CookieStorage = e);
        })((PhaserSuperStorage = PhaserSuperStorage || {})),
        !(function (t) {
            function e() {
                (this.namespace = ""), (this.keys = []);
            }
            (t = t.StorageAdapters || (t.StorageAdapters = {})),
                Object.defineProperty(e.prototype, "forcePromises", {
                    get: function () {
                        return !0;
                    },
                    set: function (t) {},
                    enumerable: !0,
                    configurable: !0,
                }),
                Object.defineProperty(e.prototype, "length", {
                    get: function () {
                        return this.keys.length;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                (e.prototype.key = function (t) {
                    return this.promisefy(this.keys[t]);
                }),
                (e.prototype.getItem = function (t) {
                    var i = this;
                    return new Promise(function (e, n) {
                        NativeStorage.getItem(
                            i.namespace + t,
                            function (t) {
                                e(t);
                            },
                            function (t) {
                                2 === t.code ? e(null) : n(t);
                            }
                        );
                    });
                }),
                (e.prototype.setItem = function (n, i) {
                    var r = this;
                    return n.length < 1
                        ? void 0
                        : new Promise(function (t, e) {
                              NativeStorage.setItem(
                                  r.namespace + n,
                                  i,
                                  function () {
                                      r.keys.indexOf(n) < 0 && (r.keys.push(n), r.save()), t(null);
                                  },
                                  function (t) {
                                      e(t);
                                  }
                              );
                          });
                }),
                (e.prototype.removeItem = function (i) {
                    var r = this;
                    return new Promise(function (e, n) {
                        NativeStorage.remove(
                            r.namespace + i,
                            function () {
                                var t = r.keys.indexOf(i);
                                0 <= t && (r.keys.splice(t, 1), r.save()), e(null);
                            },
                            function (t) {
                                n(t);
                            }
                        );
                    });
                }),
                (e.prototype.clear = function () {
                    var r = this;
                    return new Promise(function (t, e) {
                        for (var n = 0, i = 0; i < r.keys.length; i++)
                            NativeStorage.remove(
                                r.namespace + r.keys[i],
                                function () {
                                    ++n >= r.keys.length && ((r.keys = []), r.save(), t(null));
                                },
                                function (t) {
                                    e(t);
                                }
                            );
                    });
                }),
                (e.prototype.setNamespace = function (t) {
                    var n = this;
                    return (
                        (this.namespace = (t = void 0 === t ? "" : t) + ":"),
                        (this.keys = []),
                        new Promise(function (t, e) {
                            n.load().then(t).catch(t);
                        })
                    );
                }),
                (e.prototype.promisefy = function (n) {
                    return new Promise(function (t, e) {
                        t(n);
                    });
                }),
                (e.prototype.load = function () {
                    var i = this;
                    return new Promise(function (e, n) {
                        NativeStorage.getItem(
                            i.namespace,
                            function (t) {
                                (i.keys = JSON.parse(t)), e(null);
                            },
                            function (t) {
                                n(t);
                            }
                        );
                    });
                }),
                (e.prototype.save = function () {
                    NativeStorage.setItem(
                        this.namespace,
                        JSON.stringify(this.keys),
                        function () {},
                        function (t) {}
                    );
                }),
                (t.CordovaStorage = e);
        })((PhaserSuperStorage = PhaserSuperStorage || {})),
        !(function (a) {
            var t;
            function e(t, e) {
                void 0 === t && (t = ""), void 0 === e && (e = "*"), (this.namespace = ""), (this.expectedOrigin = ""), (this.storageLength = 0), (this.enabled = !1), "" !== t && this.setNamespace(t), (this.expectedOrigin = e);
            }
            (t = a.StorageAdapters || (a.StorageAdapters = {})),
                Object.defineProperty(e.prototype, "forcePromises", {
                    get: function () {
                        return !0;
                    },
                    set: function (t) {},
                    enumerable: !0,
                    configurable: !0,
                }),
                Object.defineProperty(e.prototype, "length", {
                    get: function () {
                        return this.storageLength;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                (e.prototype.init = function () {
                    var t = this;
                    return this.sendMessage({ command: a.StorageCommand.init }).then(function () {
                        t.enabled = !0;
                    });
                }),
                (e.prototype.key = function (t) {
                    return this.sendMessage({ command: a.StorageCommand.key, value: t });
                }),
                (e.prototype.getItem = function (t) {
                    return this.sendMessage({ command: a.StorageCommand.getItem, key: t });
                }),
                (e.prototype.setItem = function (t, e) {
                    return this.sendMessage({ command: a.StorageCommand.setItem, key: t, value: e });
                }),
                (e.prototype.removeItem = function (t) {
                    return this.sendMessage({ command: a.StorageCommand.removeItem, key: t });
                }),
                (e.prototype.clear = function () {
                    return this.sendMessage({ command: a.StorageCommand.clear });
                }),
                (e.prototype.setNamespace = function (t) {
                    return this.sendMessage({ command: a.StorageCommand.setNamespace, value: t });
                }),
                (e.prototype.sendMessage = function (t) {
                    var r,
                        o = this,
                        e = (t.command === a.StorageCommand.init && (r = !1), new MessageChannel());
                    return new Promise(function (n, i) {
                        o.enabled || t.command === a.StorageCommand.init || i("Messaging not enabled!"),
                            t.command === a.StorageCommand.init &&
                                setTimeout(function () {
                                    r || i("Unable to get a response in time");
                                }, 1e3),
                            (e.port1.onmessage = function (t) {
                                var e = a.StorageUtils.validateMessage(t.data);
                                switch ((e.command === a.StorageCommand.init && (r = !0), (void 0 !== e.status && "ok" === e.status) || i(e.value), void 0 !== e.length && (o.storageLength = e.length), e.command)) {
                                    case a.StorageCommand.setNamespace:
                                        o.namespace = e.value + ":";
                                    case a.StorageCommand.getItem:
                                    case a.StorageCommand.length:
                                    case a.StorageCommand.key:
                                        n(e.value);
                                        break;
                                    case a.StorageCommand.setItem:
                                    case a.StorageCommand.removeItem:
                                    case a.StorageCommand.clear:
                                    case a.StorageCommand.init:
                                        n(e.status);
                                        break;
                                    default:
                                        i(e.value);
                                }
                            }),
                            (!o.enabled && t.command !== a.StorageCommand.init) || window.parent.postMessage(t, o.expectedOrigin, [e.port2]);
                    });
                }),
                (t.IframeStorage = e);
        })((PhaserSuperStorage = PhaserSuperStorage || {})),
        !(function (i) {
            var t;
            function e(t) {
                void 0 === t && (t = ""), (this.namespace = ""), (this.forcePromises = !1), this.setNamespace(t);
            }
            (t = i.StorageAdapters || (i.StorageAdapters = {})),
                Object.defineProperty(e.prototype, "length", {
                    get: function () {
                        var t = Object.keys(localStorage);
                        return i.StorageUtils.nameSpaceKeyFilter(t, this.namespace).length;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                (e.prototype.key = function (t) {
                    return this.forcePromises ? this.promisefy(this._key, arguments) : this._key(t);
                }),
                (e.prototype._key = function (t) {
                    var e = Object.keys(localStorage),
                        e = i.StorageUtils.nameSpaceKeyFilter(e, this.namespace);
                    return localStorage.getItem(e[t]);
                }),
                (e.prototype.getItem = function (t) {
                    return this.forcePromises ? this.promisefy(this._getItem, arguments) : this._getItem(t);
                }),
                (e.prototype._getItem = function (t) {
                    return localStorage.getItem(this.namespace + t);
                }),
                (e.prototype.setItem = function (t, e) {
                    return this.forcePromises ? this.promisefy(this._setItem, arguments) : this._setItem(t, e);
                }),
                (e.prototype._setItem = function (t, e) {
                    return localStorage.setItem(this.namespace + t, e);
                }),
                (e.prototype.removeItem = function (t) {
                    return this.forcePromises ? this.promisefy(this._removeItem, arguments) : this._removeItem(t);
                }),
                (e.prototype._removeItem = function (t) {
                    return localStorage.removeItem(this.namespace + t);
                }),
                (e.prototype.clear = function () {
                    return this.forcePromises ? this.promisefy(this._clear, arguments) : this._clear();
                }),
                (e.prototype._clear = function () {
                    for (var t = Object.keys(localStorage), e = i.StorageUtils.nameSpaceKeyFilter(t, this.namespace), n = 0; n < e.length; n++) localStorage.removeItem(e[n]);
                }),
                (e.prototype.setNamespace = function (t) {
                    return this.forcePromises ? this.promisefy(this._setNameSpace, arguments) : this._setNameSpace(t);
                }),
                (e.prototype._setNameSpace = function (t) {
                    t && (this.namespace = t + ":");
                }),
                (e.prototype.promisefy = function (n, i) {
                    var r = this;
                    return new Promise(function (t, e) {
                        t(n.apply(r, i));
                    });
                }),
                (t.LocalStorage = e);
        })((PhaserSuperStorage = PhaserSuperStorage || {})),
        !(function (e) {
            (n.prototype.setAdapter = function (t) {
                this.storage = t;
            }),
                Object.defineProperty(n.prototype, "forcePromises", {
                    get: function () {
                        return this.storage.forcePromises;
                    },
                    set: function (t) {
                        this.storage.forcePromises = t;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                Object.defineProperty(n.prototype, "length", {
                    get: function () {
                        return null === this.storage ? 0 : this.storage.length;
                    },
                    enumerable: !0,
                    configurable: !0,
                }),
                (n.prototype.setNamespace = function (t) {
                    if (null !== this.storage) return this.storage.setNamespace(t);
                }),
                (n.prototype.key = function (t) {
                    return null === this.storage ? "" : this.storage.key(t);
                }),
                (n.prototype.getItem = function (t) {
                    return null === this.storage ? null : this.storage.getItem(t);
                }),
                (n.prototype.setItem = function (t, e) {
                    if (null !== this.storage) return this.storage.setItem(t, e);
                }),
                (n.prototype.removeItem = function (t) {
                    if (null !== this.storage) return this.storage.removeItem(t);
                }),
                (n.prototype.clear = function () {
                    if (null !== this.storage) return this.storage.clear();
                });
            var t = n;
            function n(t) {
                if (void 0 !== t) Object.defineProperty(t, "storage", { value: this });
                else {
                    if (null !== n.instance) return n.instance;
                    n.instance = this;
                }
                e.StorageUtils.isLocalStorageSupport() ? this.setAdapter(new e.StorageAdapters.LocalStorage()) : this.setAdapter(new e.StorageAdapters.CookieStorage());
            }
            (t.instance = null), (e.StoragePlugin = t);
        })((PhaserSuperStorage = PhaserSuperStorage || {})),
        void 0 !== window.Phaser && Phaser.Utils.mixinPrototype(PhaserSuperStorage.StoragePlugin, Phaser.Plugin),
        !(function (t) {
            ((e = t.StorageCommand || (t.StorageCommand = {}))[(e.init = 0)] = "init"),
                (e[(e.setItem = 1)] = "setItem"),
                (e[(e.getItem = 2)] = "getItem"),
                (e[(e.removeItem = 3)] = "removeItem"),
                (e[(e.clear = 4)] = "clear"),
                (e[(e.setNamespace = 5)] = "setNamespace"),
                (e[(e.length = 6)] = "length"),
                (e[(e.key = 7)] = "key"),
                (e[(e.error = 8)] = "error"),
                (n.isLocalStorageSupport = function () {
                    try {
                        if ("object" == typeof localStorage) return localStorage.setItem("testingLocalStorage", "foo"), localStorage.removeItem("testingLocalStorage"), !0;
                    } catch (t) {}
                    return !1;
                }),
                (n.validateMessage = function (t) {
                    return t.hasOwnProperty("command") ? t : null;
                }),
                (n.nameSpaceKeyFilter = function (t, e) {
                    return t.filter(function (t) {
                        return t.substring(0, e.length) === e;
                    });
                });
            var e = n;
            function n() {}
            t.StorageUtils = e;
        })((PhaserSuperStorage = PhaserSuperStorage || {})),
        (this && this.__extends) ||
            (function () {
                var i =
                    Object.setPrototypeOf ||
                    ({ __proto__: [] } instanceof Array &&
                        function (t, e) {
                            t.__proto__ = e;
                        }) ||
                    function (t, e) {
                        for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
                    };
                return function (t, e) {
                    function n() {
                        this.constructor = t;
                    }
                    i(t, e), (t.prototype = null === e ? Object.create(e) : ((n.prototype = e.prototype), new n()));
                };
            })());
!(function (t) {
    (h = Phaser.Sprite),
        __extends(n, h),
        (n.prototype.renderTexture = function () {
            this.texture.resize(this.localWidth, this.localHeight, !0);
            var t = [0, this.leftSize, this.baseFrame.width - this.rightSize, this.baseFrame.width],
                e = [0, this.topSize, this.baseFrame.height - this.bottomSize, this.baseFrame.height],
                n = [0, this.leftSize, this.localWidth - this.rightSize, this.localWidth],
                i = [0, this.topSize, this.localHeight - this.bottomSize, this.localHeight];
            this.texture.clear();
            for (var r = 0; r < 3; r++)
                for (var o = 0; o < 3; o++) {
                    var a = this.createTexturePart(t[o], e[r], t[o + 1] - t[o], e[r + 1] - e[r]);
                    (a.width = n[o + 1] - n[o]), (a.height = i[r + 1] - i[r]), this.texture.renderXY(a, n[o], i[r]);
                }
        }),
        (n.prototype.resize = function (t, e) {
            (this.localWidth = t), (this.localHeight = e), this.renderTexture();
        }),
        (n.prototype.destroy = function () {
            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
            h.prototype.destroy.call(this, t[0]), this.texture.destroy(!0), (this.texture = null), (this.baseTexture = null), (this.baseFrame = null);
        }),
        (n.prototype.createTexturePart = function (t, e, n, i) {
            t = new PIXI.Rectangle(this.baseFrame.x + this.texture.frame.x + t, this.baseFrame.y + this.texture.frame.y + e, Math.max(n, 1), Math.max(i, 1));
            return new Phaser.Sprite(this.game, 0, 0, new PIXI.Texture(this.baseTexture, t));
        });
    var h,
        e = n;
    function n(t, e, n, i, r, o, a, s) {
        e = h.call(this, t, e, n, i, r) || this;
        return (
            (e.baseTexture = e.texture.baseTexture),
            (e.baseFrame = e.texture.frame),
            void 0 === (s = null === r || s ? s || t.cache.getNineSlice(i) : t.cache.getNineSlice(r)) ||
                ((e.topSize = s.top),
                s.left ? (e.leftSize = s.left) : (e.leftSize = e.topSize),
                s.right ? (e.rightSize = s.right) : (e.rightSize = e.leftSize),
                s.bottom ? (e.bottomSize = s.bottom) : (e.bottomSize = e.topSize),
                e.loadTexture(new Phaser.RenderTexture(e.game, e.localWidth, e.localHeight)),
                e.resize(o, a)),
            e
        );
    }
    t.NineSlice = e;
})((PhaserNineSlice = PhaserNineSlice || {})),
    (function (s) {
        (n = Phaser.Plugin),
            __extends(e, n),
            (e.prototype.addNineSliceLoader = function () {
                Phaser.Loader.prototype.nineSlice = function (t, e, n, i, r, o) {
                    n = { top: n };
                    i && (n.left = i), r && (n.right = r), o && (n.bottom = o), this.addToFileList("image", t, e), this.game.cache.addNineSlice(t, n);
                };
            }),
            (e.prototype.addNineSliceFactory = function () {
                (Phaser.GameObjectFactory.prototype.nineSlice = function (t, e, n, i, r, o, a) {
                    void 0 === a && (a = this.world);
                    t = new s.NineSlice(this.game, t, e, n, i, r, o);
                    return a.add(t);
                }),
                    (Phaser.GameObjectCreator.prototype.nineSlice = function (t, e, n, i, r, o) {
                        return new s.NineSlice(this.game, t, e, n, i, r, o);
                    });
            }),
            (e.prototype.addNineSliceCache = function () {
                (Phaser.Cache.prototype.nineSlice = {}),
                    (Phaser.Cache.prototype.addNineSlice = function (t, e) {
                        this.nineSlice[t] = e;
                    }),
                    (Phaser.Cache.prototype.getNineSlice = function (t) {
                        return this.nineSlice[t];
                    });
            });
        var n,
            t = e;
        function e(t, e) {
            t = n.call(this, t, e) || this;
            return t.addNineSliceCache(), t.addNineSliceFactory(), t.addNineSliceLoader(), t;
        }
        s.Plugin = t;
    })((PhaserNineSlice = PhaserNineSlice || {}));
